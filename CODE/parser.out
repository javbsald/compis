Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
Rule 2     programa1 -> vars programa1
Rule 3     programa1 -> empty
Rule 4     programa2 -> funciones programa2
Rule 5     programa2 -> empty
Rule 6     puntoFillMainQuad -> <empty>
Rule 7     puntoCreateProgram -> <empty>
Rule 8     puntoChangeStateLocal -> <empty>
Rule 9     puntoPrintFinal -> <empty>
Rule 10    vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
Rule 11    vars1 -> COMMA ID puntoCreateVar vars1
Rule 12    vars1 -> empty
Rule 13    vars2 -> tipo puntoCreateVarType
Rule 14    vars2 -> tipo_graph
Rule 15    vars3 -> LBRACKET CTE_INT puntoChangeDimension RBRACKET
Rule 16    vars3 -> empty
Rule 17    puntoChangeDimension -> <empty>
Rule 18    puntoCreateVarTable -> <empty>
Rule 19    puntoCreateVarTableState -> <empty>
Rule 20    puntoCreateVar -> <empty>
Rule 21    puntoCreateVarType -> <empty>
Rule 22    puntoCreateDimension -> <empty>
Rule 23    tipo -> INT puntoCurrentType
Rule 24    tipo -> FLOAT puntoCurrentType
Rule 25    tipo -> BOOL puntoCurrentType
Rule 26    tipo -> CHAR puntoCurrentType
Rule 27    puntoCurrentType -> <empty>
Rule 28    tipo_cte -> CTE_INT puntoPushInt
Rule 29    tipo_cte -> CTE_FLOAT puntoPushFloat
Rule 30    tipo_cte -> CTE_BOOL puntoPushBool
Rule 31    tipo_cte -> CTE_CHAR puntoPushChar
Rule 32    tipo_cte -> ID puntoPushID tipo_cte1
Rule 33    tipo_cte -> llamada
Rule 34    tipo_cte1 -> LBRACKET CTE_INT RBRACKET
Rule 35    tipo_cte1 -> funciones_arr
Rule 36    tipo_cte1 -> empty
Rule 37    puntoPushInt -> <empty>
Rule 38    puntoPushFloat -> <empty>
Rule 39    puntoPushBool -> <empty>
Rule 40    puntoPushChar -> <empty>
Rule 41    puntoPushID -> <empty>
Rule 42    tipo_graph -> PIECHART
Rule 43    tipo_graph -> BARGRAPH
Rule 44    tipo_graph -> PLOTLINE
Rule 45    funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
Rule 46    funciones1 -> VOID
Rule 47    funciones1 -> tipo puntoReturnType
Rule 48    funciones2 -> tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
Rule 49    funciones2 -> empty
Rule 50    funciones3 -> COMMA tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
Rule 51    funciones3 -> empty
Rule 52    puntoReturnType -> <empty>
Rule 53    puntoChangeStateFuncion -> <empty>
Rule 54    puntoCreateParamTable -> <empty>
Rule 55    puntoPushParam -> <empty>
Rule 56    puntoCreateParamCount -> <empty>
Rule 57    puntoFinalFuncQuad -> <empty>
Rule 58    main -> VOID MAIN LPAREN RPAREN bloque_modular
Rule 59    bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE
Rule 60    bloque_modular1 -> vars bloque_modular1
Rule 61    bloque_modular1 -> empty
Rule 62    bloque_modular2 -> estatuto bloque_modular2
Rule 63    bloque_modular2 -> empty
Rule 64    bloque -> LBLOQUE bloque1 RBLOQUE
Rule 65    bloque1 -> estatuto bloque1
Rule 66    bloque1 -> empty
Rule 67    estatuto -> asignacion
Rule 68    estatuto -> condicion
Rule 69    estatuto -> escritura
Rule 70    estatuto -> return
Rule 71    estatuto -> while
Rule 72    estatuto -> do_while
Rule 73    estatuto -> llamada SEMICOLON
Rule 74    asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
Rule 75    asignacion1 -> LBRACKET expresion RBRACKET
Rule 76    asignacion1 -> empty
Rule 77    asignacion2 -> expresion puntoCreateAsignacionQuad
Rule 78    asignacion2 -> leida
Rule 79    puntoSaveIDAsignacion -> <empty>
Rule 80    puntoCreateAsignacionQuad -> <empty>
Rule 81    leida -> INPUT LPAREN RPAREN
Rule 82    condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
Rule 83    condicion1 -> ELSE puntoCreateElseQuad bloque
Rule 84    condicion1 -> empty
Rule 85    puntoCreateIfQuad -> <empty>
Rule 86    puntoFillIfQuad -> <empty>
Rule 87    puntoCreateElseQuad -> <empty>
Rule 88    escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON
Rule 89    escritura1 -> expresion puntoCreatePrintQuad
Rule 90    escritura1 -> CTE_STRING puntoCreatePrintConstantQuad
Rule 91    puntoCreatePrintQuad -> <empty>
Rule 92    puntoCreatePrintConstantQuad -> <empty>
Rule 93    llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad
Rule 94    llamada1 -> expresion puntoVerifyArgumento llamada2
Rule 95    llamada1 -> empty
Rule 96    llamada2 -> COMMA expresion puntoVerifyArgumento llamada2
Rule 97    llamada2 -> empty
Rule 98    puntoVerifyLlamada -> <empty>
Rule 99    puntoVerifyArgumento -> <empty>
Rule 100   puntoCreateGoSubQuad -> <empty>
Rule 101   return -> RETURN expresion puntoReturnQuad SEMICOLON
Rule 102   puntoReturnQuad -> <empty>
Rule 103   while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
Rule 104   puntoPushSaltoWhile -> <empty>
Rule 105   puntoCreateWhileQuad -> <empty>
Rule 106   puntoEndWhileQuad -> <empty>
Rule 107   do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
Rule 108   puntoPushSaltoDoWhile -> <empty>
Rule 109   puntoCreateDoWhileQuad -> <empty>
Rule 110   expresion -> compare expresion2
Rule 111   expresion2 -> AND compare
Rule 112   expresion2 -> OR compare
Rule 113   expresion2 -> empty
Rule 114   compare -> exp compare1
Rule 115   compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional
Rule 116   compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional
Rule 117   compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 118   compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 119   compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 120   compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 121   compare1 -> empty
Rule 122   puntoOperacionRelacional -> <empty>
Rule 123   exp -> termino puntoSumaResta exp1
Rule 124   exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1
Rule 125   exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1
Rule 126   exp1 -> empty
Rule 127   puntoSumaResta -> <empty>
Rule 128   termino -> factor puntoMultDivide termino1
Rule 129   termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1
Rule 130   termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1
Rule 131   termino1 -> empty
Rule 132   puntoMultDivide -> <empty>
Rule 133   puntoPushOperador -> <empty>
Rule 134   factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
Rule 135   factor -> tipo_cte
Rule 136   factor -> MINUS tipo_cte
Rule 137   factor -> NOT tipo_cte
Rule 138   puntoPushFondoFalso -> <empty>
Rule 139   puntoPopFondoFalso -> <empty>
Rule 140   funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN
Rule 141   funciones_arr1 -> MAX
Rule 142   funciones_arr1 -> MIN
Rule 143   funciones_arr1 -> RANGE
Rule 144   funciones_arr1 -> MEDIAN
Rule 145   funciones_arr1 -> AVERAGE
Rule 146   funciones_arr1 -> IQRANGE
Rule 147   funciones_arr1 -> STDEV
Rule 148   funciones_arr1 -> VARIANCE
Rule 149   funciones_arr1 -> MODIFY
Rule 150   funciones_arr1 -> DRAW
Rule 151   empty -> <empty>

Terminals, with rules where they appear

AND                  : 111
AS                   : 10
AVERAGE              : 145
BARGRAPH             : 43
BOOL                 : 25
CALL                 : 93
CHAR                 : 26
COMMA                : 11 50 96
CTE_BOOL             : 30
CTE_CHAR             : 31
CTE_FLOAT            : 29
CTE_INT              : 15 28 34
CTE_STRING           : 90
DIVIDE               : 130
DO                   : 107
DRAW                 : 150
ELSE                 : 83
EQUALEQUAL           : 119
EQUALS               : 74
FLOAT                : 24
FUNC                 : 45
GREATERTHAN          : 115
GREATERTHANEQUAL     : 117
ID                   : 1 10 11 32 45 48 50 74 93
IF                   : 82
INPUT                : 81
INT                  : 23
IQRANGE              : 146
LBLOQUE              : 59 64
LBRACKET             : 15 34 75
LESSTHAN             : 116
LESSTHANEQUAL        : 118
LPAREN               : 45 58 81 82 88 93 103 107 134 140
MAIN                 : 58
MAX                  : 141
MEDIAN               : 144
MIN                  : 142
MINUS                : 125 136
MODIFY               : 149
NOT                  : 137
NOTEQUAL             : 120
OR                   : 112
PIECHART             : 42
PLOTLINE             : 44
PLUS                 : 124
PRINT                : 88
PROGRAM              : 1
PUNTO                : 93 140
RANGE                : 143
RBLOQUE              : 59 64
RBRACKET             : 15 34 75
RETURN               : 101
RPAREN               : 45 58 81 82 88 93 103 107 134 140
SEMICOLON            : 1 10 73 74 88 101
STDEV                : 147
TIMES                : 129
VAR                  : 10
VARIANCE             : 148
VOID                 : 46 58
WHILE                : 103 107
error                : 

Nonterminals, with rules where they appear

asignacion           : 67
asignacion1          : 74
asignacion2          : 74
bloque               : 82 83 103 107
bloque1              : 64 65
bloque_modular       : 45 58
bloque_modular1      : 59 60
bloque_modular2      : 59 62
compare              : 110 111 112
compare1             : 114
condicion            : 68
condicion1           : 82
do_while             : 72
empty                : 3 5 12 16 36 49 51 61 63 66 76 84 95 97 113 121 126 131
escritura            : 69
escritura1           : 88
estatuto             : 62 65
exp                  : 114 115 116 117 118 119 120
exp1                 : 123 124 125
expresion            : 75 77 82 89 94 96 101 103 107 134
expresion2           : 110
factor               : 128 129 130
funciones            : 4
funciones1           : 45
funciones2           : 45
funciones3           : 48 50
funciones_arr        : 35
funciones_arr1       : 140
leida                : 78
llamada              : 33 73
llamada1             : 93
llamada2             : 94 96
main                 : 1
programa             : 0
programa1            : 1 2
programa2            : 1 4
puntoChangeDimension : 15
puntoChangeStateFuncion : 45
puntoChangeStateLocal : 1
puntoCreateAsignacionQuad : 77
puntoCreateDimension : 10
puntoCreateDoWhileQuad : 107
puntoCreateElseQuad  : 83
puntoCreateGoSubQuad : 93
puntoCreateIfQuad    : 82
puntoCreateParamCount : 45
puntoCreateParamTable : 45
puntoCreatePrintConstantQuad : 90
puntoCreatePrintQuad : 89
puntoCreateProgram   : 1
puntoCreateVar       : 10 11 48 50
puntoCreateVarTable  : 1
puntoCreateVarTableState : 1 1 45
puntoCreateVarType   : 13 48 50
puntoCreateWhileQuad : 103
puntoCurrentType     : 23 24 25 26
puntoEndWhileQuad    : 103
puntoFillIfQuad      : 82
puntoFillMainQuad    : 1
puntoFinalFuncQuad   : 45
puntoMultDivide      : 128 129 130
puntoOperacionRelacional : 115 116 117 118 119 120
puntoPopFondoFalso   : 93 134
puntoPrintFinal      : 1
puntoPushBool        : 30
puntoPushChar        : 31
puntoPushFloat       : 29
puntoPushFondoFalso  : 93 134
puntoPushID          : 32
puntoPushInt         : 28
puntoPushOperador    : 115 116 117 118 119 120 124 125 129 130
puntoPushParam       : 48 50
puntoPushSaltoDoWhile : 107
puntoPushSaltoWhile  : 103
puntoReturnQuad      : 101
puntoReturnType      : 47
puntoSaveIDAsignacion : 74
puntoSumaResta       : 123 124 125
puntoVerifyArgumento : 94 96
puntoVerifyLlamada   : 93
return               : 70
termino              : 123 124 125
termino1             : 128 129 130
tipo                 : 13 47 48 50
tipo_cte             : 135 136 137
tipo_cte1            : 32
tipo_graph           : 14
vars                 : 2 60
vars1                : 10 11
vars2                : 10
vars3                : 10
while                : 71

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (7) puntoCreateProgram -> .

    SEMICOLON       reduce using rule 7 (puntoCreateProgram -> .)

    puntoCreateProgram             shift and go to state 4

state 4

    (1) programa -> PROGRAM ID puntoCreateProgram . SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON . puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (18) puntoCreateVarTable -> .

    VAR             reduce using rule 18 (puntoCreateVarTable -> .)
    FUNC            reduce using rule 18 (puntoCreateVarTable -> .)
    VOID            reduce using rule 18 (puntoCreateVarTable -> .)

    puntoCreateVarTable            shift and go to state 6

state 6

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable . puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (19) puntoCreateVarTableState -> .

    VAR             reduce using rule 19 (puntoCreateVarTableState -> .)
    FUNC            reduce using rule 19 (puntoCreateVarTableState -> .)
    VOID            reduce using rule 19 (puntoCreateVarTableState -> .)

    puntoCreateVarTableState       shift and go to state 7

state 7

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState . programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (2) programa1 -> . vars programa1
    (3) programa1 -> . empty
    (10) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (151) empty -> .

    VAR             shift and go to state 11
    FUNC            reduce using rule 151 (empty -> .)
    VOID            reduce using rule 151 (empty -> .)

    programa1                      shift and go to state 8
    vars                           shift and go to state 9
    empty                          shift and go to state 10

state 8

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 . programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (4) programa2 -> . funciones programa2
    (5) programa2 -> . empty
    (45) funciones -> . FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (151) empty -> .

    FUNC            shift and go to state 15
    VOID            reduce using rule 151 (empty -> .)

    programa2                      shift and go to state 12
    funciones                      shift and go to state 13
    empty                          shift and go to state 14

state 9

    (2) programa1 -> vars . programa1
    (2) programa1 -> . vars programa1
    (3) programa1 -> . empty
    (10) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (151) empty -> .

    VAR             shift and go to state 11
    FUNC            reduce using rule 151 (empty -> .)
    VOID            reduce using rule 151 (empty -> .)

    vars                           shift and go to state 9
    programa1                      shift and go to state 16
    empty                          shift and go to state 10

state 10

    (3) programa1 -> empty .

    FUNC            reduce using rule 3 (programa1 -> empty .)
    VOID            reduce using rule 3 (programa1 -> empty .)


state 11

    (10) vars -> VAR . ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON

    ID              shift and go to state 17


state 12

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 . puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (8) puntoChangeStateLocal -> .

    VOID            reduce using rule 8 (puntoChangeStateLocal -> .)

    puntoChangeStateLocal          shift and go to state 18

state 13

    (4) programa2 -> funciones . programa2
    (4) programa2 -> . funciones programa2
    (5) programa2 -> . empty
    (45) funciones -> . FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (151) empty -> .

    FUNC            shift and go to state 15
    VOID            reduce using rule 151 (empty -> .)

    funciones                      shift and go to state 13
    programa2                      shift and go to state 19
    empty                          shift and go to state 14

state 14

    (5) programa2 -> empty .

    VOID            reduce using rule 5 (programa2 -> empty .)


state 15

    (45) funciones -> FUNC . funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (46) funciones1 -> . VOID
    (47) funciones1 -> . tipo puntoReturnType
    (23) tipo -> . INT puntoCurrentType
    (24) tipo -> . FLOAT puntoCurrentType
    (25) tipo -> . BOOL puntoCurrentType
    (26) tipo -> . CHAR puntoCurrentType

    VOID            shift and go to state 21
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 25
    CHAR            shift and go to state 26

    funciones1                     shift and go to state 20
    tipo                           shift and go to state 22

state 16

    (2) programa1 -> vars programa1 .

    FUNC            reduce using rule 2 (programa1 -> vars programa1 .)
    VOID            reduce using rule 2 (programa1 -> vars programa1 .)


state 17

    (10) vars -> VAR ID . puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (20) puntoCreateVar -> .

    COMMA           reduce using rule 20 (puntoCreateVar -> .)
    AS              reduce using rule 20 (puntoCreateVar -> .)

    puntoCreateVar                 shift and go to state 27

state 18

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal . puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (19) puntoCreateVarTableState -> .

    VOID            reduce using rule 19 (puntoCreateVarTableState -> .)

    puntoCreateVarTableState       shift and go to state 28

state 19

    (4) programa2 -> funciones programa2 .

    VOID            reduce using rule 4 (programa2 -> funciones programa2 .)


state 20

    (45) funciones -> FUNC funciones1 . ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad

    ID              shift and go to state 29


state 21

    (46) funciones1 -> VOID .

    ID              reduce using rule 46 (funciones1 -> VOID .)


state 22

    (47) funciones1 -> tipo . puntoReturnType
    (52) puntoReturnType -> .

    ID              reduce using rule 52 (puntoReturnType -> .)

    puntoReturnType                shift and go to state 30

state 23

    (23) tipo -> INT . puntoCurrentType
    (27) puntoCurrentType -> .

    ID              reduce using rule 27 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 27 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 27 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 31

state 24

    (24) tipo -> FLOAT . puntoCurrentType
    (27) puntoCurrentType -> .

    ID              reduce using rule 27 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 27 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 27 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 32

state 25

    (25) tipo -> BOOL . puntoCurrentType
    (27) puntoCurrentType -> .

    ID              reduce using rule 27 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 27 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 27 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 33

state 26

    (26) tipo -> CHAR . puntoCurrentType
    (27) puntoCurrentType -> .

    ID              reduce using rule 27 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 27 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 27 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 34

state 27

    (10) vars -> VAR ID puntoCreateVar . vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (11) vars1 -> . COMMA ID puntoCreateVar vars1
    (12) vars1 -> . empty
    (151) empty -> .

    COMMA           shift and go to state 36
    AS              reduce using rule 151 (empty -> .)

    vars1                          shift and go to state 35
    empty                          shift and go to state 37

state 28

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState . puntoFillMainQuad main puntoPrintFinal
    (6) puntoFillMainQuad -> .

    VOID            reduce using rule 6 (puntoFillMainQuad -> .)

    puntoFillMainQuad              shift and go to state 38

state 29

    (45) funciones -> FUNC funciones1 ID . puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (53) puntoChangeStateFuncion -> .

    LPAREN          reduce using rule 53 (puntoChangeStateFuncion -> .)

    puntoChangeStateFuncion        shift and go to state 39

state 30

    (47) funciones1 -> tipo puntoReturnType .

    ID              reduce using rule 47 (funciones1 -> tipo puntoReturnType .)


state 31

    (23) tipo -> INT puntoCurrentType .

    ID              reduce using rule 23 (tipo -> INT puntoCurrentType .)
    LBRACKET        reduce using rule 23 (tipo -> INT puntoCurrentType .)
    SEMICOLON       reduce using rule 23 (tipo -> INT puntoCurrentType .)


state 32

    (24) tipo -> FLOAT puntoCurrentType .

    ID              reduce using rule 24 (tipo -> FLOAT puntoCurrentType .)
    LBRACKET        reduce using rule 24 (tipo -> FLOAT puntoCurrentType .)
    SEMICOLON       reduce using rule 24 (tipo -> FLOAT puntoCurrentType .)


state 33

    (25) tipo -> BOOL puntoCurrentType .

    ID              reduce using rule 25 (tipo -> BOOL puntoCurrentType .)
    LBRACKET        reduce using rule 25 (tipo -> BOOL puntoCurrentType .)
    SEMICOLON       reduce using rule 25 (tipo -> BOOL puntoCurrentType .)


state 34

    (26) tipo -> CHAR puntoCurrentType .

    ID              reduce using rule 26 (tipo -> CHAR puntoCurrentType .)
    LBRACKET        reduce using rule 26 (tipo -> CHAR puntoCurrentType .)
    SEMICOLON       reduce using rule 26 (tipo -> CHAR puntoCurrentType .)


state 35

    (10) vars -> VAR ID puntoCreateVar vars1 . AS vars2 vars3 puntoCreateDimension SEMICOLON

    AS              shift and go to state 40


state 36

    (11) vars1 -> COMMA . ID puntoCreateVar vars1

    ID              shift and go to state 41


state 37

    (12) vars1 -> empty .

    AS              reduce using rule 12 (vars1 -> empty .)


state 38

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad . main puntoPrintFinal
    (58) main -> . VOID MAIN LPAREN RPAREN bloque_modular

    VOID            shift and go to state 43

    main                           shift and go to state 42

state 39

    (45) funciones -> FUNC funciones1 ID puntoChangeStateFuncion . puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (19) puntoCreateVarTableState -> .

    LPAREN          reduce using rule 19 (puntoCreateVarTableState -> .)

    puntoCreateVarTableState       shift and go to state 44

state 40

    (10) vars -> VAR ID puntoCreateVar vars1 AS . vars2 vars3 puntoCreateDimension SEMICOLON
    (13) vars2 -> . tipo puntoCreateVarType
    (14) vars2 -> . tipo_graph
    (23) tipo -> . INT puntoCurrentType
    (24) tipo -> . FLOAT puntoCurrentType
    (25) tipo -> . BOOL puntoCurrentType
    (26) tipo -> . CHAR puntoCurrentType
    (42) tipo_graph -> . PIECHART
    (43) tipo_graph -> . BARGRAPH
    (44) tipo_graph -> . PLOTLINE

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 25
    CHAR            shift and go to state 26
    PIECHART        shift and go to state 48
    BARGRAPH        shift and go to state 49
    PLOTLINE        shift and go to state 50

    vars2                          shift and go to state 45
    tipo                           shift and go to state 46
    tipo_graph                     shift and go to state 47

state 41

    (11) vars1 -> COMMA ID . puntoCreateVar vars1
    (20) puntoCreateVar -> .

    COMMA           reduce using rule 20 (puntoCreateVar -> .)
    AS              reduce using rule 20 (puntoCreateVar -> .)

    puntoCreateVar                 shift and go to state 51

state 42

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main . puntoPrintFinal
    (9) puntoPrintFinal -> .

    $end            reduce using rule 9 (puntoPrintFinal -> .)

    puntoPrintFinal                shift and go to state 52

state 43

    (58) main -> VOID . MAIN LPAREN RPAREN bloque_modular

    MAIN            shift and go to state 53


state 44

    (45) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState . LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad

    LPAREN          shift and go to state 54


state 45

    (10) vars -> VAR ID puntoCreateVar vars1 AS vars2 . vars3 puntoCreateDimension SEMICOLON
    (15) vars3 -> . LBRACKET CTE_INT puntoChangeDimension RBRACKET
    (16) vars3 -> . empty
    (151) empty -> .

    LBRACKET        shift and go to state 56
    SEMICOLON       reduce using rule 151 (empty -> .)

    vars3                          shift and go to state 55
    empty                          shift and go to state 57

state 46

    (13) vars2 -> tipo . puntoCreateVarType
    (21) puntoCreateVarType -> .

    LBRACKET        reduce using rule 21 (puntoCreateVarType -> .)
    SEMICOLON       reduce using rule 21 (puntoCreateVarType -> .)

    puntoCreateVarType             shift and go to state 58

state 47

    (14) vars2 -> tipo_graph .

    LBRACKET        reduce using rule 14 (vars2 -> tipo_graph .)
    SEMICOLON       reduce using rule 14 (vars2 -> tipo_graph .)


state 48

    (42) tipo_graph -> PIECHART .

    LBRACKET        reduce using rule 42 (tipo_graph -> PIECHART .)
    SEMICOLON       reduce using rule 42 (tipo_graph -> PIECHART .)


state 49

    (43) tipo_graph -> BARGRAPH .

    LBRACKET        reduce using rule 43 (tipo_graph -> BARGRAPH .)
    SEMICOLON       reduce using rule 43 (tipo_graph -> BARGRAPH .)


state 50

    (44) tipo_graph -> PLOTLINE .

    LBRACKET        reduce using rule 44 (tipo_graph -> PLOTLINE .)
    SEMICOLON       reduce using rule 44 (tipo_graph -> PLOTLINE .)


state 51

    (11) vars1 -> COMMA ID puntoCreateVar . vars1
    (11) vars1 -> . COMMA ID puntoCreateVar vars1
    (12) vars1 -> . empty
    (151) empty -> .

    COMMA           shift and go to state 36
    AS              reduce using rule 151 (empty -> .)

    vars1                          shift and go to state 59
    empty                          shift and go to state 37

state 52

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal .

    $end            reduce using rule 1 (programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal .)


state 53

    (58) main -> VOID MAIN . LPAREN RPAREN bloque_modular

    LPAREN          shift and go to state 60


state 54

    (45) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN . puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (54) puntoCreateParamTable -> .

    INT             reduce using rule 54 (puntoCreateParamTable -> .)
    FLOAT           reduce using rule 54 (puntoCreateParamTable -> .)
    BOOL            reduce using rule 54 (puntoCreateParamTable -> .)
    CHAR            reduce using rule 54 (puntoCreateParamTable -> .)
    RPAREN          reduce using rule 54 (puntoCreateParamTable -> .)

    puntoCreateParamTable          shift and go to state 61

state 55

    (10) vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 . puntoCreateDimension SEMICOLON
    (22) puntoCreateDimension -> .

    SEMICOLON       reduce using rule 22 (puntoCreateDimension -> .)

    puntoCreateDimension           shift and go to state 62

state 56

    (15) vars3 -> LBRACKET . CTE_INT puntoChangeDimension RBRACKET

    CTE_INT         shift and go to state 63


state 57

    (16) vars3 -> empty .

    SEMICOLON       reduce using rule 16 (vars3 -> empty .)


state 58

    (13) vars2 -> tipo puntoCreateVarType .

    LBRACKET        reduce using rule 13 (vars2 -> tipo puntoCreateVarType .)
    SEMICOLON       reduce using rule 13 (vars2 -> tipo puntoCreateVarType .)


state 59

    (11) vars1 -> COMMA ID puntoCreateVar vars1 .

    AS              reduce using rule 11 (vars1 -> COMMA ID puntoCreateVar vars1 .)


state 60

    (58) main -> VOID MAIN LPAREN . RPAREN bloque_modular

    RPAREN          shift and go to state 64


state 61

    (45) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable . funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (48) funciones2 -> . tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (49) funciones2 -> . empty
    (23) tipo -> . INT puntoCurrentType
    (24) tipo -> . FLOAT puntoCurrentType
    (25) tipo -> . BOOL puntoCurrentType
    (26) tipo -> . CHAR puntoCurrentType
    (151) empty -> .

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 25
    CHAR            shift and go to state 26
    RPAREN          reduce using rule 151 (empty -> .)

    funciones2                     shift and go to state 65
    tipo                           shift and go to state 66
    empty                          shift and go to state 67

state 62

    (10) vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension . SEMICOLON

    SEMICOLON       shift and go to state 68


state 63

    (15) vars3 -> LBRACKET CTE_INT . puntoChangeDimension RBRACKET
    (17) puntoChangeDimension -> .

    RBRACKET        reduce using rule 17 (puntoChangeDimension -> .)

    puntoChangeDimension           shift and go to state 69

state 64

    (58) main -> VOID MAIN LPAREN RPAREN . bloque_modular
    (59) bloque_modular -> . LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE

    LBLOQUE         shift and go to state 71

    bloque_modular                 shift and go to state 70

state 65

    (45) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 . RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad

    RPAREN          shift and go to state 72


state 66

    (48) funciones2 -> tipo . ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3

    ID              shift and go to state 73


state 67

    (49) funciones2 -> empty .

    RPAREN          reduce using rule 49 (funciones2 -> empty .)


state 68

    (10) vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .

    VAR             reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    FUNC            reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    VOID            reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    ID              reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    IF              reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    PRINT           reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    RETURN          reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    WHILE           reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    DO              reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    CALL            reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    RBLOQUE         reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)


state 69

    (15) vars3 -> LBRACKET CTE_INT puntoChangeDimension . RBRACKET

    RBRACKET        shift and go to state 74


state 70

    (58) main -> VOID MAIN LPAREN RPAREN bloque_modular .

    $end            reduce using rule 58 (main -> VOID MAIN LPAREN RPAREN bloque_modular .)


state 71

    (59) bloque_modular -> LBLOQUE . bloque_modular1 bloque_modular2 RBLOQUE
    (60) bloque_modular1 -> . vars bloque_modular1
    (61) bloque_modular1 -> . empty
    (10) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (151) empty -> .

    VAR             shift and go to state 11
    ID              reduce using rule 151 (empty -> .)
    IF              reduce using rule 151 (empty -> .)
    PRINT           reduce using rule 151 (empty -> .)
    RETURN          reduce using rule 151 (empty -> .)
    WHILE           reduce using rule 151 (empty -> .)
    DO              reduce using rule 151 (empty -> .)
    CALL            reduce using rule 151 (empty -> .)
    RBLOQUE         reduce using rule 151 (empty -> .)

    bloque_modular1                shift and go to state 75
    vars                           shift and go to state 76
    empty                          shift and go to state 77

state 72

    (45) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN . puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (56) puntoCreateParamCount -> .

    LBLOQUE         reduce using rule 56 (puntoCreateParamCount -> .)

    puntoCreateParamCount          shift and go to state 78

state 73

    (48) funciones2 -> tipo ID . puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (20) puntoCreateVar -> .

    COMMA           reduce using rule 20 (puntoCreateVar -> .)
    RPAREN          reduce using rule 20 (puntoCreateVar -> .)

    puntoCreateVar                 shift and go to state 79

state 74

    (15) vars3 -> LBRACKET CTE_INT puntoChangeDimension RBRACKET .

    SEMICOLON       reduce using rule 15 (vars3 -> LBRACKET CTE_INT puntoChangeDimension RBRACKET .)


state 75

    (59) bloque_modular -> LBLOQUE bloque_modular1 . bloque_modular2 RBLOQUE
    (62) bloque_modular2 -> . estatuto bloque_modular2
    (63) bloque_modular2 -> . empty
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . return
    (71) estatuto -> . while
    (72) estatuto -> . do_while
    (73) estatuto -> . llamada SEMICOLON
    (151) empty -> .
    (74) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (82) condicion -> . IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (88) escritura -> . PRINT LPAREN escritura1 RPAREN SEMICOLON
    (101) return -> . RETURN expresion puntoReturnQuad SEMICOLON
    (103) while -> . WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (107) do_while -> . DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    RBLOQUE         reduce using rule 151 (empty -> .)
    ID              shift and go to state 90
    IF              shift and go to state 91
    PRINT           shift and go to state 92
    RETURN          shift and go to state 93
    WHILE           shift and go to state 94
    DO              shift and go to state 95
    CALL            shift and go to state 96

    bloque_modular2                shift and go to state 80
    estatuto                       shift and go to state 81
    empty                          shift and go to state 82
    asignacion                     shift and go to state 83
    condicion                      shift and go to state 84
    escritura                      shift and go to state 85
    return                         shift and go to state 86
    while                          shift and go to state 87
    do_while                       shift and go to state 88
    llamada                        shift and go to state 89

state 76

    (60) bloque_modular1 -> vars . bloque_modular1
    (60) bloque_modular1 -> . vars bloque_modular1
    (61) bloque_modular1 -> . empty
    (10) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (151) empty -> .

    VAR             shift and go to state 11
    ID              reduce using rule 151 (empty -> .)
    IF              reduce using rule 151 (empty -> .)
    PRINT           reduce using rule 151 (empty -> .)
    RETURN          reduce using rule 151 (empty -> .)
    WHILE           reduce using rule 151 (empty -> .)
    DO              reduce using rule 151 (empty -> .)
    CALL            reduce using rule 151 (empty -> .)
    RBLOQUE         reduce using rule 151 (empty -> .)

    vars                           shift and go to state 76
    bloque_modular1                shift and go to state 97
    empty                          shift and go to state 77

state 77

    (61) bloque_modular1 -> empty .

    ID              reduce using rule 61 (bloque_modular1 -> empty .)
    IF              reduce using rule 61 (bloque_modular1 -> empty .)
    PRINT           reduce using rule 61 (bloque_modular1 -> empty .)
    RETURN          reduce using rule 61 (bloque_modular1 -> empty .)
    WHILE           reduce using rule 61 (bloque_modular1 -> empty .)
    DO              reduce using rule 61 (bloque_modular1 -> empty .)
    CALL            reduce using rule 61 (bloque_modular1 -> empty .)
    RBLOQUE         reduce using rule 61 (bloque_modular1 -> empty .)


state 78

    (45) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount . bloque_modular puntoFinalFuncQuad
    (59) bloque_modular -> . LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE

    LBLOQUE         shift and go to state 71

    bloque_modular                 shift and go to state 98

state 79

    (48) funciones2 -> tipo ID puntoCreateVar . puntoCreateVarType puntoPushParam funciones3
    (21) puntoCreateVarType -> .

    COMMA           reduce using rule 21 (puntoCreateVarType -> .)
    RPAREN          reduce using rule 21 (puntoCreateVarType -> .)

    puntoCreateVarType             shift and go to state 99

state 80

    (59) bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 . RBLOQUE

    RBLOQUE         shift and go to state 100


state 81

    (62) bloque_modular2 -> estatuto . bloque_modular2
    (62) bloque_modular2 -> . estatuto bloque_modular2
    (63) bloque_modular2 -> . empty
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . return
    (71) estatuto -> . while
    (72) estatuto -> . do_while
    (73) estatuto -> . llamada SEMICOLON
    (151) empty -> .
    (74) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (82) condicion -> . IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (88) escritura -> . PRINT LPAREN escritura1 RPAREN SEMICOLON
    (101) return -> . RETURN expresion puntoReturnQuad SEMICOLON
    (103) while -> . WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (107) do_while -> . DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    RBLOQUE         reduce using rule 151 (empty -> .)
    ID              shift and go to state 90
    IF              shift and go to state 91
    PRINT           shift and go to state 92
    RETURN          shift and go to state 93
    WHILE           shift and go to state 94
    DO              shift and go to state 95
    CALL            shift and go to state 96

    estatuto                       shift and go to state 81
    bloque_modular2                shift and go to state 101
    empty                          shift and go to state 82
    asignacion                     shift and go to state 83
    condicion                      shift and go to state 84
    escritura                      shift and go to state 85
    return                         shift and go to state 86
    while                          shift and go to state 87
    do_while                       shift and go to state 88
    llamada                        shift and go to state 89

state 82

    (63) bloque_modular2 -> empty .

    RBLOQUE         reduce using rule 63 (bloque_modular2 -> empty .)


state 83

    (67) estatuto -> asignacion .

    ID              reduce using rule 67 (estatuto -> asignacion .)
    IF              reduce using rule 67 (estatuto -> asignacion .)
    PRINT           reduce using rule 67 (estatuto -> asignacion .)
    RETURN          reduce using rule 67 (estatuto -> asignacion .)
    WHILE           reduce using rule 67 (estatuto -> asignacion .)
    DO              reduce using rule 67 (estatuto -> asignacion .)
    CALL            reduce using rule 67 (estatuto -> asignacion .)
    RBLOQUE         reduce using rule 67 (estatuto -> asignacion .)


state 84

    (68) estatuto -> condicion .

    ID              reduce using rule 68 (estatuto -> condicion .)
    IF              reduce using rule 68 (estatuto -> condicion .)
    PRINT           reduce using rule 68 (estatuto -> condicion .)
    RETURN          reduce using rule 68 (estatuto -> condicion .)
    WHILE           reduce using rule 68 (estatuto -> condicion .)
    DO              reduce using rule 68 (estatuto -> condicion .)
    CALL            reduce using rule 68 (estatuto -> condicion .)
    RBLOQUE         reduce using rule 68 (estatuto -> condicion .)


state 85

    (69) estatuto -> escritura .

    ID              reduce using rule 69 (estatuto -> escritura .)
    IF              reduce using rule 69 (estatuto -> escritura .)
    PRINT           reduce using rule 69 (estatuto -> escritura .)
    RETURN          reduce using rule 69 (estatuto -> escritura .)
    WHILE           reduce using rule 69 (estatuto -> escritura .)
    DO              reduce using rule 69 (estatuto -> escritura .)
    CALL            reduce using rule 69 (estatuto -> escritura .)
    RBLOQUE         reduce using rule 69 (estatuto -> escritura .)


state 86

    (70) estatuto -> return .

    ID              reduce using rule 70 (estatuto -> return .)
    IF              reduce using rule 70 (estatuto -> return .)
    PRINT           reduce using rule 70 (estatuto -> return .)
    RETURN          reduce using rule 70 (estatuto -> return .)
    WHILE           reduce using rule 70 (estatuto -> return .)
    DO              reduce using rule 70 (estatuto -> return .)
    CALL            reduce using rule 70 (estatuto -> return .)
    RBLOQUE         reduce using rule 70 (estatuto -> return .)


state 87

    (71) estatuto -> while .

    ID              reduce using rule 71 (estatuto -> while .)
    IF              reduce using rule 71 (estatuto -> while .)
    PRINT           reduce using rule 71 (estatuto -> while .)
    RETURN          reduce using rule 71 (estatuto -> while .)
    WHILE           reduce using rule 71 (estatuto -> while .)
    DO              reduce using rule 71 (estatuto -> while .)
    CALL            reduce using rule 71 (estatuto -> while .)
    RBLOQUE         reduce using rule 71 (estatuto -> while .)


state 88

    (72) estatuto -> do_while .

    ID              reduce using rule 72 (estatuto -> do_while .)
    IF              reduce using rule 72 (estatuto -> do_while .)
    PRINT           reduce using rule 72 (estatuto -> do_while .)
    RETURN          reduce using rule 72 (estatuto -> do_while .)
    WHILE           reduce using rule 72 (estatuto -> do_while .)
    DO              reduce using rule 72 (estatuto -> do_while .)
    CALL            reduce using rule 72 (estatuto -> do_while .)
    RBLOQUE         reduce using rule 72 (estatuto -> do_while .)


state 89

    (73) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 102


state 90

    (74) asignacion -> ID . puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (79) puntoSaveIDAsignacion -> .

    LBRACKET        reduce using rule 79 (puntoSaveIDAsignacion -> .)
    EQUALS          reduce using rule 79 (puntoSaveIDAsignacion -> .)

    puntoSaveIDAsignacion          shift and go to state 103

state 91

    (82) condicion -> IF . LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad

    LPAREN          shift and go to state 104


state 92

    (88) escritura -> PRINT . LPAREN escritura1 RPAREN SEMICOLON

    LPAREN          shift and go to state 105


state 93

    (101) return -> RETURN . expresion puntoReturnQuad SEMICOLON
    (110) expresion -> . compare expresion2
    (114) compare -> . exp compare1
    (123) exp -> . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    expresion                      shift and go to state 106
    compare                        shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 94

    (103) while -> WHILE . puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (104) puntoPushSaltoWhile -> .

    LPAREN          reduce using rule 104 (puntoPushSaltoWhile -> .)

    puntoPushSaltoWhile            shift and go to state 121

state 95

    (107) do_while -> DO . puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (108) puntoPushSaltoDoWhile -> .

    LBLOQUE         reduce using rule 108 (puntoPushSaltoDoWhile -> .)

    puntoPushSaltoDoWhile          shift and go to state 122

state 96

    (93) llamada -> CALL . PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    PUNTO           shift and go to state 123


state 97

    (60) bloque_modular1 -> vars bloque_modular1 .

    ID              reduce using rule 60 (bloque_modular1 -> vars bloque_modular1 .)
    IF              reduce using rule 60 (bloque_modular1 -> vars bloque_modular1 .)
    PRINT           reduce using rule 60 (bloque_modular1 -> vars bloque_modular1 .)
    RETURN          reduce using rule 60 (bloque_modular1 -> vars bloque_modular1 .)
    WHILE           reduce using rule 60 (bloque_modular1 -> vars bloque_modular1 .)
    DO              reduce using rule 60 (bloque_modular1 -> vars bloque_modular1 .)
    CALL            reduce using rule 60 (bloque_modular1 -> vars bloque_modular1 .)
    RBLOQUE         reduce using rule 60 (bloque_modular1 -> vars bloque_modular1 .)


state 98

    (45) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular . puntoFinalFuncQuad
    (57) puntoFinalFuncQuad -> .

    FUNC            reduce using rule 57 (puntoFinalFuncQuad -> .)
    VOID            reduce using rule 57 (puntoFinalFuncQuad -> .)

    puntoFinalFuncQuad             shift and go to state 124

state 99

    (48) funciones2 -> tipo ID puntoCreateVar puntoCreateVarType . puntoPushParam funciones3
    (55) puntoPushParam -> .

    COMMA           reduce using rule 55 (puntoPushParam -> .)
    RPAREN          reduce using rule 55 (puntoPushParam -> .)

    puntoPushParam                 shift and go to state 125

state 100

    (59) bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .

    $end            reduce using rule 59 (bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .)
    FUNC            reduce using rule 59 (bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .)
    VOID            reduce using rule 59 (bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .)


state 101

    (62) bloque_modular2 -> estatuto bloque_modular2 .

    RBLOQUE         reduce using rule 62 (bloque_modular2 -> estatuto bloque_modular2 .)


state 102

    (73) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 73 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 73 (estatuto -> llamada SEMICOLON .)
    PRINT           reduce using rule 73 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 73 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 73 (estatuto -> llamada SEMICOLON .)
    DO              reduce using rule 73 (estatuto -> llamada SEMICOLON .)
    CALL            reduce using rule 73 (estatuto -> llamada SEMICOLON .)
    RBLOQUE         reduce using rule 73 (estatuto -> llamada SEMICOLON .)


state 103

    (74) asignacion -> ID puntoSaveIDAsignacion . asignacion1 EQUALS asignacion2 SEMICOLON
    (75) asignacion1 -> . LBRACKET expresion RBRACKET
    (76) asignacion1 -> . empty
    (151) empty -> .

    LBRACKET        shift and go to state 127
    EQUALS          reduce using rule 151 (empty -> .)

    asignacion1                    shift and go to state 126
    empty                          shift and go to state 128

state 104

    (82) condicion -> IF LPAREN . expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (110) expresion -> . compare expresion2
    (114) compare -> . exp compare1
    (123) exp -> . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    expresion                      shift and go to state 129
    compare                        shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 105

    (88) escritura -> PRINT LPAREN . escritura1 RPAREN SEMICOLON
    (89) escritura1 -> . expresion puntoCreatePrintQuad
    (90) escritura1 -> . CTE_STRING puntoCreatePrintConstantQuad
    (110) expresion -> . compare expresion2
    (114) compare -> . exp compare1
    (123) exp -> . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    CTE_STRING      shift and go to state 132
    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    escritura1                     shift and go to state 130
    expresion                      shift and go to state 131
    compare                        shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 106

    (101) return -> RETURN expresion . puntoReturnQuad SEMICOLON
    (102) puntoReturnQuad -> .

    SEMICOLON       reduce using rule 102 (puntoReturnQuad -> .)

    puntoReturnQuad                shift and go to state 133

state 107

    (110) expresion -> compare . expresion2
    (111) expresion2 -> . AND compare
    (112) expresion2 -> . OR compare
    (113) expresion2 -> . empty
    (151) empty -> .

    AND             shift and go to state 135
    OR              shift and go to state 136
    SEMICOLON       reduce using rule 151 (empty -> .)
    RPAREN          reduce using rule 151 (empty -> .)
    RBRACKET        reduce using rule 151 (empty -> .)
    COMMA           reduce using rule 151 (empty -> .)

    expresion2                     shift and go to state 134
    empty                          shift and go to state 137

state 108

    (114) compare -> exp . compare1
    (115) compare1 -> . GREATERTHAN puntoPushOperador exp puntoOperacionRelacional
    (116) compare1 -> . LESSTHAN puntoPushOperador exp puntoOperacionRelacional
    (117) compare1 -> . GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
    (118) compare1 -> . LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
    (119) compare1 -> . EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional
    (120) compare1 -> . NOTEQUAL puntoPushOperador exp puntoOperacionRelacional
    (121) compare1 -> . empty
    (151) empty -> .

    GREATERTHAN     shift and go to state 139
    LESSTHAN        shift and go to state 140
    GREATERTHANEQUAL shift and go to state 141
    LESSTHANEQUAL   shift and go to state 142
    EQUALEQUAL      shift and go to state 143
    NOTEQUAL        shift and go to state 144
    AND             reduce using rule 151 (empty -> .)
    OR              reduce using rule 151 (empty -> .)
    SEMICOLON       reduce using rule 151 (empty -> .)
    RPAREN          reduce using rule 151 (empty -> .)
    RBRACKET        reduce using rule 151 (empty -> .)
    COMMA           reduce using rule 151 (empty -> .)

    compare1                       shift and go to state 138
    empty                          shift and go to state 145

state 109

    (123) exp -> termino . puntoSumaResta exp1
    (127) puntoSumaResta -> .

    PLUS            reduce using rule 127 (puntoSumaResta -> .)
    MINUS           reduce using rule 127 (puntoSumaResta -> .)
    GREATERTHAN     reduce using rule 127 (puntoSumaResta -> .)
    LESSTHAN        reduce using rule 127 (puntoSumaResta -> .)
    GREATERTHANEQUAL reduce using rule 127 (puntoSumaResta -> .)
    LESSTHANEQUAL   reduce using rule 127 (puntoSumaResta -> .)
    EQUALEQUAL      reduce using rule 127 (puntoSumaResta -> .)
    NOTEQUAL        reduce using rule 127 (puntoSumaResta -> .)
    AND             reduce using rule 127 (puntoSumaResta -> .)
    OR              reduce using rule 127 (puntoSumaResta -> .)
    SEMICOLON       reduce using rule 127 (puntoSumaResta -> .)
    RPAREN          reduce using rule 127 (puntoSumaResta -> .)
    RBRACKET        reduce using rule 127 (puntoSumaResta -> .)
    COMMA           reduce using rule 127 (puntoSumaResta -> .)

    puntoSumaResta                 shift and go to state 146

state 110

    (128) termino -> factor . puntoMultDivide termino1
    (132) puntoMultDivide -> .

    TIMES           reduce using rule 132 (puntoMultDivide -> .)
    DIVIDE          reduce using rule 132 (puntoMultDivide -> .)
    PLUS            reduce using rule 132 (puntoMultDivide -> .)
    MINUS           reduce using rule 132 (puntoMultDivide -> .)
    GREATERTHAN     reduce using rule 132 (puntoMultDivide -> .)
    LESSTHAN        reduce using rule 132 (puntoMultDivide -> .)
    GREATERTHANEQUAL reduce using rule 132 (puntoMultDivide -> .)
    LESSTHANEQUAL   reduce using rule 132 (puntoMultDivide -> .)
    EQUALEQUAL      reduce using rule 132 (puntoMultDivide -> .)
    NOTEQUAL        reduce using rule 132 (puntoMultDivide -> .)
    AND             reduce using rule 132 (puntoMultDivide -> .)
    OR              reduce using rule 132 (puntoMultDivide -> .)
    SEMICOLON       reduce using rule 132 (puntoMultDivide -> .)
    RPAREN          reduce using rule 132 (puntoMultDivide -> .)
    RBRACKET        reduce using rule 132 (puntoMultDivide -> .)
    COMMA           reduce using rule 132 (puntoMultDivide -> .)

    puntoMultDivide                shift and go to state 147

state 111

    (134) factor -> LPAREN . puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) puntoPushFondoFalso -> .

    LPAREN          reduce using rule 138 (puntoPushFondoFalso -> .)
    MINUS           reduce using rule 138 (puntoPushFondoFalso -> .)
    NOT             reduce using rule 138 (puntoPushFondoFalso -> .)
    CTE_INT         reduce using rule 138 (puntoPushFondoFalso -> .)
    CTE_FLOAT       reduce using rule 138 (puntoPushFondoFalso -> .)
    CTE_BOOL        reduce using rule 138 (puntoPushFondoFalso -> .)
    CTE_CHAR        reduce using rule 138 (puntoPushFondoFalso -> .)
    ID              reduce using rule 138 (puntoPushFondoFalso -> .)
    CALL            reduce using rule 138 (puntoPushFondoFalso -> .)

    puntoPushFondoFalso            shift and go to state 148

state 112

    (135) factor -> tipo_cte .

    TIMES           reduce using rule 135 (factor -> tipo_cte .)
    DIVIDE          reduce using rule 135 (factor -> tipo_cte .)
    PLUS            reduce using rule 135 (factor -> tipo_cte .)
    MINUS           reduce using rule 135 (factor -> tipo_cte .)
    GREATERTHAN     reduce using rule 135 (factor -> tipo_cte .)
    LESSTHAN        reduce using rule 135 (factor -> tipo_cte .)
    GREATERTHANEQUAL reduce using rule 135 (factor -> tipo_cte .)
    LESSTHANEQUAL   reduce using rule 135 (factor -> tipo_cte .)
    EQUALEQUAL      reduce using rule 135 (factor -> tipo_cte .)
    NOTEQUAL        reduce using rule 135 (factor -> tipo_cte .)
    AND             reduce using rule 135 (factor -> tipo_cte .)
    OR              reduce using rule 135 (factor -> tipo_cte .)
    SEMICOLON       reduce using rule 135 (factor -> tipo_cte .)
    RPAREN          reduce using rule 135 (factor -> tipo_cte .)
    RBRACKET        reduce using rule 135 (factor -> tipo_cte .)
    COMMA           reduce using rule 135 (factor -> tipo_cte .)


state 113

    (136) factor -> MINUS . tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    tipo_cte                       shift and go to state 149
    llamada                        shift and go to state 120

state 114

    (137) factor -> NOT . tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    tipo_cte                       shift and go to state 150
    llamada                        shift and go to state 120

state 115

    (28) tipo_cte -> CTE_INT . puntoPushInt
    (37) puntoPushInt -> .

    TIMES           reduce using rule 37 (puntoPushInt -> .)
    DIVIDE          reduce using rule 37 (puntoPushInt -> .)
    PLUS            reduce using rule 37 (puntoPushInt -> .)
    MINUS           reduce using rule 37 (puntoPushInt -> .)
    GREATERTHAN     reduce using rule 37 (puntoPushInt -> .)
    LESSTHAN        reduce using rule 37 (puntoPushInt -> .)
    GREATERTHANEQUAL reduce using rule 37 (puntoPushInt -> .)
    LESSTHANEQUAL   reduce using rule 37 (puntoPushInt -> .)
    EQUALEQUAL      reduce using rule 37 (puntoPushInt -> .)
    NOTEQUAL        reduce using rule 37 (puntoPushInt -> .)
    AND             reduce using rule 37 (puntoPushInt -> .)
    OR              reduce using rule 37 (puntoPushInt -> .)
    SEMICOLON       reduce using rule 37 (puntoPushInt -> .)
    RPAREN          reduce using rule 37 (puntoPushInt -> .)
    RBRACKET        reduce using rule 37 (puntoPushInt -> .)
    COMMA           reduce using rule 37 (puntoPushInt -> .)

    puntoPushInt                   shift and go to state 151

state 116

    (29) tipo_cte -> CTE_FLOAT . puntoPushFloat
    (38) puntoPushFloat -> .

    TIMES           reduce using rule 38 (puntoPushFloat -> .)
    DIVIDE          reduce using rule 38 (puntoPushFloat -> .)
    PLUS            reduce using rule 38 (puntoPushFloat -> .)
    MINUS           reduce using rule 38 (puntoPushFloat -> .)
    GREATERTHAN     reduce using rule 38 (puntoPushFloat -> .)
    LESSTHAN        reduce using rule 38 (puntoPushFloat -> .)
    GREATERTHANEQUAL reduce using rule 38 (puntoPushFloat -> .)
    LESSTHANEQUAL   reduce using rule 38 (puntoPushFloat -> .)
    EQUALEQUAL      reduce using rule 38 (puntoPushFloat -> .)
    NOTEQUAL        reduce using rule 38 (puntoPushFloat -> .)
    AND             reduce using rule 38 (puntoPushFloat -> .)
    OR              reduce using rule 38 (puntoPushFloat -> .)
    SEMICOLON       reduce using rule 38 (puntoPushFloat -> .)
    RPAREN          reduce using rule 38 (puntoPushFloat -> .)
    RBRACKET        reduce using rule 38 (puntoPushFloat -> .)
    COMMA           reduce using rule 38 (puntoPushFloat -> .)

    puntoPushFloat                 shift and go to state 152

state 117

    (30) tipo_cte -> CTE_BOOL . puntoPushBool
    (39) puntoPushBool -> .

    TIMES           reduce using rule 39 (puntoPushBool -> .)
    DIVIDE          reduce using rule 39 (puntoPushBool -> .)
    PLUS            reduce using rule 39 (puntoPushBool -> .)
    MINUS           reduce using rule 39 (puntoPushBool -> .)
    GREATERTHAN     reduce using rule 39 (puntoPushBool -> .)
    LESSTHAN        reduce using rule 39 (puntoPushBool -> .)
    GREATERTHANEQUAL reduce using rule 39 (puntoPushBool -> .)
    LESSTHANEQUAL   reduce using rule 39 (puntoPushBool -> .)
    EQUALEQUAL      reduce using rule 39 (puntoPushBool -> .)
    NOTEQUAL        reduce using rule 39 (puntoPushBool -> .)
    AND             reduce using rule 39 (puntoPushBool -> .)
    OR              reduce using rule 39 (puntoPushBool -> .)
    SEMICOLON       reduce using rule 39 (puntoPushBool -> .)
    RPAREN          reduce using rule 39 (puntoPushBool -> .)
    RBRACKET        reduce using rule 39 (puntoPushBool -> .)
    COMMA           reduce using rule 39 (puntoPushBool -> .)

    puntoPushBool                  shift and go to state 153

state 118

    (31) tipo_cte -> CTE_CHAR . puntoPushChar
    (40) puntoPushChar -> .

    TIMES           reduce using rule 40 (puntoPushChar -> .)
    DIVIDE          reduce using rule 40 (puntoPushChar -> .)
    PLUS            reduce using rule 40 (puntoPushChar -> .)
    MINUS           reduce using rule 40 (puntoPushChar -> .)
    GREATERTHAN     reduce using rule 40 (puntoPushChar -> .)
    LESSTHAN        reduce using rule 40 (puntoPushChar -> .)
    GREATERTHANEQUAL reduce using rule 40 (puntoPushChar -> .)
    LESSTHANEQUAL   reduce using rule 40 (puntoPushChar -> .)
    EQUALEQUAL      reduce using rule 40 (puntoPushChar -> .)
    NOTEQUAL        reduce using rule 40 (puntoPushChar -> .)
    AND             reduce using rule 40 (puntoPushChar -> .)
    OR              reduce using rule 40 (puntoPushChar -> .)
    SEMICOLON       reduce using rule 40 (puntoPushChar -> .)
    RPAREN          reduce using rule 40 (puntoPushChar -> .)
    RBRACKET        reduce using rule 40 (puntoPushChar -> .)
    COMMA           reduce using rule 40 (puntoPushChar -> .)

    puntoPushChar                  shift and go to state 154

state 119

    (32) tipo_cte -> ID . puntoPushID tipo_cte1
    (41) puntoPushID -> .

    LBRACKET        reduce using rule 41 (puntoPushID -> .)
    PUNTO           reduce using rule 41 (puntoPushID -> .)
    TIMES           reduce using rule 41 (puntoPushID -> .)
    DIVIDE          reduce using rule 41 (puntoPushID -> .)
    PLUS            reduce using rule 41 (puntoPushID -> .)
    MINUS           reduce using rule 41 (puntoPushID -> .)
    GREATERTHAN     reduce using rule 41 (puntoPushID -> .)
    LESSTHAN        reduce using rule 41 (puntoPushID -> .)
    GREATERTHANEQUAL reduce using rule 41 (puntoPushID -> .)
    LESSTHANEQUAL   reduce using rule 41 (puntoPushID -> .)
    EQUALEQUAL      reduce using rule 41 (puntoPushID -> .)
    NOTEQUAL        reduce using rule 41 (puntoPushID -> .)
    AND             reduce using rule 41 (puntoPushID -> .)
    OR              reduce using rule 41 (puntoPushID -> .)
    SEMICOLON       reduce using rule 41 (puntoPushID -> .)
    RPAREN          reduce using rule 41 (puntoPushID -> .)
    RBRACKET        reduce using rule 41 (puntoPushID -> .)
    COMMA           reduce using rule 41 (puntoPushID -> .)

    puntoPushID                    shift and go to state 155

state 120

    (33) tipo_cte -> llamada .

    TIMES           reduce using rule 33 (tipo_cte -> llamada .)
    DIVIDE          reduce using rule 33 (tipo_cte -> llamada .)
    PLUS            reduce using rule 33 (tipo_cte -> llamada .)
    MINUS           reduce using rule 33 (tipo_cte -> llamada .)
    GREATERTHAN     reduce using rule 33 (tipo_cte -> llamada .)
    LESSTHAN        reduce using rule 33 (tipo_cte -> llamada .)
    GREATERTHANEQUAL reduce using rule 33 (tipo_cte -> llamada .)
    LESSTHANEQUAL   reduce using rule 33 (tipo_cte -> llamada .)
    EQUALEQUAL      reduce using rule 33 (tipo_cte -> llamada .)
    NOTEQUAL        reduce using rule 33 (tipo_cte -> llamada .)
    AND             reduce using rule 33 (tipo_cte -> llamada .)
    OR              reduce using rule 33 (tipo_cte -> llamada .)
    SEMICOLON       reduce using rule 33 (tipo_cte -> llamada .)
    RPAREN          reduce using rule 33 (tipo_cte -> llamada .)
    RBRACKET        reduce using rule 33 (tipo_cte -> llamada .)
    COMMA           reduce using rule 33 (tipo_cte -> llamada .)


state 121

    (103) while -> WHILE puntoPushSaltoWhile . LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad

    LPAREN          shift and go to state 156


state 122

    (107) do_while -> DO puntoPushSaltoDoWhile . bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (64) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 158

    bloque                         shift and go to state 157

state 123

    (93) llamada -> CALL PUNTO . puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad
    (138) puntoPushFondoFalso -> .

    ID              reduce using rule 138 (puntoPushFondoFalso -> .)

    puntoPushFondoFalso            shift and go to state 159

state 124

    (45) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad .

    FUNC            reduce using rule 45 (funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad .)
    VOID            reduce using rule 45 (funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad .)


state 125

    (48) funciones2 -> tipo ID puntoCreateVar puntoCreateVarType puntoPushParam . funciones3
    (50) funciones3 -> . COMMA tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (51) funciones3 -> . empty
    (151) empty -> .

    COMMA           shift and go to state 161
    RPAREN          reduce using rule 151 (empty -> .)

    funciones3                     shift and go to state 160
    empty                          shift and go to state 162

state 126

    (74) asignacion -> ID puntoSaveIDAsignacion asignacion1 . EQUALS asignacion2 SEMICOLON

    EQUALS          shift and go to state 163


state 127

    (75) asignacion1 -> LBRACKET . expresion RBRACKET
    (110) expresion -> . compare expresion2
    (114) compare -> . exp compare1
    (123) exp -> . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    expresion                      shift and go to state 164
    compare                        shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 128

    (76) asignacion1 -> empty .

    EQUALS          reduce using rule 76 (asignacion1 -> empty .)


state 129

    (82) condicion -> IF LPAREN expresion . RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad

    RPAREN          shift and go to state 165


state 130

    (88) escritura -> PRINT LPAREN escritura1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 166


state 131

    (89) escritura1 -> expresion . puntoCreatePrintQuad
    (91) puntoCreatePrintQuad -> .

    RPAREN          reduce using rule 91 (puntoCreatePrintQuad -> .)

    puntoCreatePrintQuad           shift and go to state 167

state 132

    (90) escritura1 -> CTE_STRING . puntoCreatePrintConstantQuad
    (92) puntoCreatePrintConstantQuad -> .

    RPAREN          reduce using rule 92 (puntoCreatePrintConstantQuad -> .)

    puntoCreatePrintConstantQuad   shift and go to state 168

state 133

    (101) return -> RETURN expresion puntoReturnQuad . SEMICOLON

    SEMICOLON       shift and go to state 169


state 134

    (110) expresion -> compare expresion2 .

    SEMICOLON       reduce using rule 110 (expresion -> compare expresion2 .)
    RPAREN          reduce using rule 110 (expresion -> compare expresion2 .)
    RBRACKET        reduce using rule 110 (expresion -> compare expresion2 .)
    COMMA           reduce using rule 110 (expresion -> compare expresion2 .)


state 135

    (111) expresion2 -> AND . compare
    (114) compare -> . exp compare1
    (123) exp -> . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    compare                        shift and go to state 170
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 136

    (112) expresion2 -> OR . compare
    (114) compare -> . exp compare1
    (123) exp -> . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    compare                        shift and go to state 171
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 137

    (113) expresion2 -> empty .

    SEMICOLON       reduce using rule 113 (expresion2 -> empty .)
    RPAREN          reduce using rule 113 (expresion2 -> empty .)
    RBRACKET        reduce using rule 113 (expresion2 -> empty .)
    COMMA           reduce using rule 113 (expresion2 -> empty .)


state 138

    (114) compare -> exp compare1 .

    AND             reduce using rule 114 (compare -> exp compare1 .)
    OR              reduce using rule 114 (compare -> exp compare1 .)
    SEMICOLON       reduce using rule 114 (compare -> exp compare1 .)
    RPAREN          reduce using rule 114 (compare -> exp compare1 .)
    RBRACKET        reduce using rule 114 (compare -> exp compare1 .)
    COMMA           reduce using rule 114 (compare -> exp compare1 .)


state 139

    (115) compare1 -> GREATERTHAN . puntoPushOperador exp puntoOperacionRelacional
    (133) puntoPushOperador -> .

    LPAREN          reduce using rule 133 (puntoPushOperador -> .)
    MINUS           reduce using rule 133 (puntoPushOperador -> .)
    NOT             reduce using rule 133 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 133 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 133 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 133 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 133 (puntoPushOperador -> .)
    ID              reduce using rule 133 (puntoPushOperador -> .)
    CALL            reduce using rule 133 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 172

state 140

    (116) compare1 -> LESSTHAN . puntoPushOperador exp puntoOperacionRelacional
    (133) puntoPushOperador -> .

    LPAREN          reduce using rule 133 (puntoPushOperador -> .)
    MINUS           reduce using rule 133 (puntoPushOperador -> .)
    NOT             reduce using rule 133 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 133 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 133 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 133 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 133 (puntoPushOperador -> .)
    ID              reduce using rule 133 (puntoPushOperador -> .)
    CALL            reduce using rule 133 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 173

state 141

    (117) compare1 -> GREATERTHANEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (133) puntoPushOperador -> .

    LPAREN          reduce using rule 133 (puntoPushOperador -> .)
    MINUS           reduce using rule 133 (puntoPushOperador -> .)
    NOT             reduce using rule 133 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 133 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 133 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 133 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 133 (puntoPushOperador -> .)
    ID              reduce using rule 133 (puntoPushOperador -> .)
    CALL            reduce using rule 133 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 174

state 142

    (118) compare1 -> LESSTHANEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (133) puntoPushOperador -> .

    LPAREN          reduce using rule 133 (puntoPushOperador -> .)
    MINUS           reduce using rule 133 (puntoPushOperador -> .)
    NOT             reduce using rule 133 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 133 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 133 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 133 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 133 (puntoPushOperador -> .)
    ID              reduce using rule 133 (puntoPushOperador -> .)
    CALL            reduce using rule 133 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 175

state 143

    (119) compare1 -> EQUALEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (133) puntoPushOperador -> .

    LPAREN          reduce using rule 133 (puntoPushOperador -> .)
    MINUS           reduce using rule 133 (puntoPushOperador -> .)
    NOT             reduce using rule 133 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 133 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 133 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 133 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 133 (puntoPushOperador -> .)
    ID              reduce using rule 133 (puntoPushOperador -> .)
    CALL            reduce using rule 133 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 176

state 144

    (120) compare1 -> NOTEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (133) puntoPushOperador -> .

    LPAREN          reduce using rule 133 (puntoPushOperador -> .)
    MINUS           reduce using rule 133 (puntoPushOperador -> .)
    NOT             reduce using rule 133 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 133 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 133 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 133 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 133 (puntoPushOperador -> .)
    ID              reduce using rule 133 (puntoPushOperador -> .)
    CALL            reduce using rule 133 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 177

state 145

    (121) compare1 -> empty .

    AND             reduce using rule 121 (compare1 -> empty .)
    OR              reduce using rule 121 (compare1 -> empty .)
    SEMICOLON       reduce using rule 121 (compare1 -> empty .)
    RPAREN          reduce using rule 121 (compare1 -> empty .)
    RBRACKET        reduce using rule 121 (compare1 -> empty .)
    COMMA           reduce using rule 121 (compare1 -> empty .)


state 146

    (123) exp -> termino puntoSumaResta . exp1
    (124) exp1 -> . PLUS puntoPushOperador termino puntoSumaResta exp1
    (125) exp1 -> . MINUS puntoPushOperador termino puntoSumaResta exp1
    (126) exp1 -> . empty
    (151) empty -> .

    PLUS            shift and go to state 179
    MINUS           shift and go to state 180
    GREATERTHAN     reduce using rule 151 (empty -> .)
    LESSTHAN        reduce using rule 151 (empty -> .)
    GREATERTHANEQUAL reduce using rule 151 (empty -> .)
    LESSTHANEQUAL   reduce using rule 151 (empty -> .)
    EQUALEQUAL      reduce using rule 151 (empty -> .)
    NOTEQUAL        reduce using rule 151 (empty -> .)
    AND             reduce using rule 151 (empty -> .)
    OR              reduce using rule 151 (empty -> .)
    SEMICOLON       reduce using rule 151 (empty -> .)
    RPAREN          reduce using rule 151 (empty -> .)
    RBRACKET        reduce using rule 151 (empty -> .)
    COMMA           reduce using rule 151 (empty -> .)

    exp1                           shift and go to state 178
    empty                          shift and go to state 181

state 147

    (128) termino -> factor puntoMultDivide . termino1
    (129) termino1 -> . TIMES puntoPushOperador factor puntoMultDivide termino1
    (130) termino1 -> . DIVIDE puntoPushOperador factor puntoMultDivide termino1
    (131) termino1 -> . empty
    (151) empty -> .

    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 184
    PLUS            reduce using rule 151 (empty -> .)
    MINUS           reduce using rule 151 (empty -> .)
    GREATERTHAN     reduce using rule 151 (empty -> .)
    LESSTHAN        reduce using rule 151 (empty -> .)
    GREATERTHANEQUAL reduce using rule 151 (empty -> .)
    LESSTHANEQUAL   reduce using rule 151 (empty -> .)
    EQUALEQUAL      reduce using rule 151 (empty -> .)
    NOTEQUAL        reduce using rule 151 (empty -> .)
    AND             reduce using rule 151 (empty -> .)
    OR              reduce using rule 151 (empty -> .)
    SEMICOLON       reduce using rule 151 (empty -> .)
    RPAREN          reduce using rule 151 (empty -> .)
    RBRACKET        reduce using rule 151 (empty -> .)
    COMMA           reduce using rule 151 (empty -> .)

    termino1                       shift and go to state 182
    empty                          shift and go to state 185

state 148

    (134) factor -> LPAREN puntoPushFondoFalso . expresion RPAREN puntoPopFondoFalso
    (110) expresion -> . compare expresion2
    (114) compare -> . exp compare1
    (123) exp -> . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    expresion                      shift and go to state 186
    compare                        shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 149

    (136) factor -> MINUS tipo_cte .

    TIMES           reduce using rule 136 (factor -> MINUS tipo_cte .)
    DIVIDE          reduce using rule 136 (factor -> MINUS tipo_cte .)
    PLUS            reduce using rule 136 (factor -> MINUS tipo_cte .)
    MINUS           reduce using rule 136 (factor -> MINUS tipo_cte .)
    GREATERTHAN     reduce using rule 136 (factor -> MINUS tipo_cte .)
    LESSTHAN        reduce using rule 136 (factor -> MINUS tipo_cte .)
    GREATERTHANEQUAL reduce using rule 136 (factor -> MINUS tipo_cte .)
    LESSTHANEQUAL   reduce using rule 136 (factor -> MINUS tipo_cte .)
    EQUALEQUAL      reduce using rule 136 (factor -> MINUS tipo_cte .)
    NOTEQUAL        reduce using rule 136 (factor -> MINUS tipo_cte .)
    AND             reduce using rule 136 (factor -> MINUS tipo_cte .)
    OR              reduce using rule 136 (factor -> MINUS tipo_cte .)
    SEMICOLON       reduce using rule 136 (factor -> MINUS tipo_cte .)
    RPAREN          reduce using rule 136 (factor -> MINUS tipo_cte .)
    RBRACKET        reduce using rule 136 (factor -> MINUS tipo_cte .)
    COMMA           reduce using rule 136 (factor -> MINUS tipo_cte .)


state 150

    (137) factor -> NOT tipo_cte .

    TIMES           reduce using rule 137 (factor -> NOT tipo_cte .)
    DIVIDE          reduce using rule 137 (factor -> NOT tipo_cte .)
    PLUS            reduce using rule 137 (factor -> NOT tipo_cte .)
    MINUS           reduce using rule 137 (factor -> NOT tipo_cte .)
    GREATERTHAN     reduce using rule 137 (factor -> NOT tipo_cte .)
    LESSTHAN        reduce using rule 137 (factor -> NOT tipo_cte .)
    GREATERTHANEQUAL reduce using rule 137 (factor -> NOT tipo_cte .)
    LESSTHANEQUAL   reduce using rule 137 (factor -> NOT tipo_cte .)
    EQUALEQUAL      reduce using rule 137 (factor -> NOT tipo_cte .)
    NOTEQUAL        reduce using rule 137 (factor -> NOT tipo_cte .)
    AND             reduce using rule 137 (factor -> NOT tipo_cte .)
    OR              reduce using rule 137 (factor -> NOT tipo_cte .)
    SEMICOLON       reduce using rule 137 (factor -> NOT tipo_cte .)
    RPAREN          reduce using rule 137 (factor -> NOT tipo_cte .)
    RBRACKET        reduce using rule 137 (factor -> NOT tipo_cte .)
    COMMA           reduce using rule 137 (factor -> NOT tipo_cte .)


state 151

    (28) tipo_cte -> CTE_INT puntoPushInt .

    TIMES           reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    DIVIDE          reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    PLUS            reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    MINUS           reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    GREATERTHAN     reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    LESSTHAN        reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    GREATERTHANEQUAL reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    LESSTHANEQUAL   reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    EQUALEQUAL      reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    NOTEQUAL        reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    AND             reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    OR              reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    SEMICOLON       reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    RPAREN          reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    RBRACKET        reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    COMMA           reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)


state 152

    (29) tipo_cte -> CTE_FLOAT puntoPushFloat .

    TIMES           reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    DIVIDE          reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    PLUS            reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    MINUS           reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    GREATERTHAN     reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    LESSTHAN        reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    GREATERTHANEQUAL reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    LESSTHANEQUAL   reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    EQUALEQUAL      reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    NOTEQUAL        reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    AND             reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    OR              reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    SEMICOLON       reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    RPAREN          reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    RBRACKET        reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    COMMA           reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)


state 153

    (30) tipo_cte -> CTE_BOOL puntoPushBool .

    TIMES           reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    DIVIDE          reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    PLUS            reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    MINUS           reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    GREATERTHAN     reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    LESSTHAN        reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    GREATERTHANEQUAL reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    LESSTHANEQUAL   reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    EQUALEQUAL      reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    NOTEQUAL        reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    AND             reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    OR              reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    SEMICOLON       reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    RPAREN          reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    RBRACKET        reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    COMMA           reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)


state 154

    (31) tipo_cte -> CTE_CHAR puntoPushChar .

    TIMES           reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    DIVIDE          reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    PLUS            reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    MINUS           reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    GREATERTHAN     reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    LESSTHAN        reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    GREATERTHANEQUAL reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    LESSTHANEQUAL   reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    EQUALEQUAL      reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    NOTEQUAL        reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    AND             reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    OR              reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    SEMICOLON       reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    RPAREN          reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    RBRACKET        reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    COMMA           reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)


state 155

    (32) tipo_cte -> ID puntoPushID . tipo_cte1
    (34) tipo_cte1 -> . LBRACKET CTE_INT RBRACKET
    (35) tipo_cte1 -> . funciones_arr
    (36) tipo_cte1 -> . empty
    (140) funciones_arr -> . PUNTO funciones_arr1 LPAREN RPAREN
    (151) empty -> .

    LBRACKET        shift and go to state 188
    PUNTO           shift and go to state 191
    TIMES           reduce using rule 151 (empty -> .)
    DIVIDE          reduce using rule 151 (empty -> .)
    PLUS            reduce using rule 151 (empty -> .)
    MINUS           reduce using rule 151 (empty -> .)
    GREATERTHAN     reduce using rule 151 (empty -> .)
    LESSTHAN        reduce using rule 151 (empty -> .)
    GREATERTHANEQUAL reduce using rule 151 (empty -> .)
    LESSTHANEQUAL   reduce using rule 151 (empty -> .)
    EQUALEQUAL      reduce using rule 151 (empty -> .)
    NOTEQUAL        reduce using rule 151 (empty -> .)
    AND             reduce using rule 151 (empty -> .)
    OR              reduce using rule 151 (empty -> .)
    SEMICOLON       reduce using rule 151 (empty -> .)
    RPAREN          reduce using rule 151 (empty -> .)
    RBRACKET        reduce using rule 151 (empty -> .)
    COMMA           reduce using rule 151 (empty -> .)

    tipo_cte1                      shift and go to state 187
    funciones_arr                  shift and go to state 189
    empty                          shift and go to state 190

state 156

    (103) while -> WHILE puntoPushSaltoWhile LPAREN . expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (110) expresion -> . compare expresion2
    (114) compare -> . exp compare1
    (123) exp -> . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    expresion                      shift and go to state 192
    compare                        shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 157

    (107) do_while -> DO puntoPushSaltoDoWhile bloque . WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad

    WHILE           shift and go to state 193


state 158

    (64) bloque -> LBLOQUE . bloque1 RBLOQUE
    (65) bloque1 -> . estatuto bloque1
    (66) bloque1 -> . empty
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . return
    (71) estatuto -> . while
    (72) estatuto -> . do_while
    (73) estatuto -> . llamada SEMICOLON
    (151) empty -> .
    (74) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (82) condicion -> . IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (88) escritura -> . PRINT LPAREN escritura1 RPAREN SEMICOLON
    (101) return -> . RETURN expresion puntoReturnQuad SEMICOLON
    (103) while -> . WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (107) do_while -> . DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    RBLOQUE         reduce using rule 151 (empty -> .)
    ID              shift and go to state 90
    IF              shift and go to state 91
    PRINT           shift and go to state 92
    RETURN          shift and go to state 93
    WHILE           shift and go to state 94
    DO              shift and go to state 95
    CALL            shift and go to state 96

    bloque1                        shift and go to state 194
    estatuto                       shift and go to state 195
    empty                          shift and go to state 196
    asignacion                     shift and go to state 83
    condicion                      shift and go to state 84
    escritura                      shift and go to state 85
    return                         shift and go to state 86
    while                          shift and go to state 87
    do_while                       shift and go to state 88
    llamada                        shift and go to state 89

state 159

    (93) llamada -> CALL PUNTO puntoPushFondoFalso . ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    ID              shift and go to state 197


state 160

    (48) funciones2 -> tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3 .

    RPAREN          reduce using rule 48 (funciones2 -> tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3 .)


state 161

    (50) funciones3 -> COMMA . tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (23) tipo -> . INT puntoCurrentType
    (24) tipo -> . FLOAT puntoCurrentType
    (25) tipo -> . BOOL puntoCurrentType
    (26) tipo -> . CHAR puntoCurrentType

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 25
    CHAR            shift and go to state 26

    tipo                           shift and go to state 198

state 162

    (51) funciones3 -> empty .

    RPAREN          reduce using rule 51 (funciones3 -> empty .)


state 163

    (74) asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS . asignacion2 SEMICOLON
    (77) asignacion2 -> . expresion puntoCreateAsignacionQuad
    (78) asignacion2 -> . leida
    (110) expresion -> . compare expresion2
    (81) leida -> . INPUT LPAREN RPAREN
    (114) compare -> . exp compare1
    (123) exp -> . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    INPUT           shift and go to state 202
    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    asignacion2                    shift and go to state 199
    expresion                      shift and go to state 200
    leida                          shift and go to state 201
    compare                        shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 164

    (75) asignacion1 -> LBRACKET expresion . RBRACKET

    RBRACKET        shift and go to state 203


state 165

    (82) condicion -> IF LPAREN expresion RPAREN . puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (85) puntoCreateIfQuad -> .

    LBLOQUE         reduce using rule 85 (puntoCreateIfQuad -> .)

    puntoCreateIfQuad              shift and go to state 204

state 166

    (88) escritura -> PRINT LPAREN escritura1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 205


state 167

    (89) escritura1 -> expresion puntoCreatePrintQuad .

    RPAREN          reduce using rule 89 (escritura1 -> expresion puntoCreatePrintQuad .)


state 168

    (90) escritura1 -> CTE_STRING puntoCreatePrintConstantQuad .

    RPAREN          reduce using rule 90 (escritura1 -> CTE_STRING puntoCreatePrintConstantQuad .)


state 169

    (101) return -> RETURN expresion puntoReturnQuad SEMICOLON .

    ID              reduce using rule 101 (return -> RETURN expresion puntoReturnQuad SEMICOLON .)
    IF              reduce using rule 101 (return -> RETURN expresion puntoReturnQuad SEMICOLON .)
    PRINT           reduce using rule 101 (return -> RETURN expresion puntoReturnQuad SEMICOLON .)
    RETURN          reduce using rule 101 (return -> RETURN expresion puntoReturnQuad SEMICOLON .)
    WHILE           reduce using rule 101 (return -> RETURN expresion puntoReturnQuad SEMICOLON .)
    DO              reduce using rule 101 (return -> RETURN expresion puntoReturnQuad SEMICOLON .)
    CALL            reduce using rule 101 (return -> RETURN expresion puntoReturnQuad SEMICOLON .)
    RBLOQUE         reduce using rule 101 (return -> RETURN expresion puntoReturnQuad SEMICOLON .)


state 170

    (111) expresion2 -> AND compare .

    SEMICOLON       reduce using rule 111 (expresion2 -> AND compare .)
    RPAREN          reduce using rule 111 (expresion2 -> AND compare .)
    RBRACKET        reduce using rule 111 (expresion2 -> AND compare .)
    COMMA           reduce using rule 111 (expresion2 -> AND compare .)


state 171

    (112) expresion2 -> OR compare .

    SEMICOLON       reduce using rule 112 (expresion2 -> OR compare .)
    RPAREN          reduce using rule 112 (expresion2 -> OR compare .)
    RBRACKET        reduce using rule 112 (expresion2 -> OR compare .)
    COMMA           reduce using rule 112 (expresion2 -> OR compare .)


state 172

    (115) compare1 -> GREATERTHAN puntoPushOperador . exp puntoOperacionRelacional
    (123) exp -> . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    exp                            shift and go to state 206
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 173

    (116) compare1 -> LESSTHAN puntoPushOperador . exp puntoOperacionRelacional
    (123) exp -> . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    exp                            shift and go to state 207
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 174

    (117) compare1 -> GREATERTHANEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (123) exp -> . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    exp                            shift and go to state 208
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 175

    (118) compare1 -> LESSTHANEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (123) exp -> . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    exp                            shift and go to state 209
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 176

    (119) compare1 -> EQUALEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (123) exp -> . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    exp                            shift and go to state 210
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 177

    (120) compare1 -> NOTEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (123) exp -> . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    exp                            shift and go to state 211
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 178

    (123) exp -> termino puntoSumaResta exp1 .

    GREATERTHAN     reduce using rule 123 (exp -> termino puntoSumaResta exp1 .)
    LESSTHAN        reduce using rule 123 (exp -> termino puntoSumaResta exp1 .)
    GREATERTHANEQUAL reduce using rule 123 (exp -> termino puntoSumaResta exp1 .)
    LESSTHANEQUAL   reduce using rule 123 (exp -> termino puntoSumaResta exp1 .)
    EQUALEQUAL      reduce using rule 123 (exp -> termino puntoSumaResta exp1 .)
    NOTEQUAL        reduce using rule 123 (exp -> termino puntoSumaResta exp1 .)
    AND             reduce using rule 123 (exp -> termino puntoSumaResta exp1 .)
    OR              reduce using rule 123 (exp -> termino puntoSumaResta exp1 .)
    SEMICOLON       reduce using rule 123 (exp -> termino puntoSumaResta exp1 .)
    RPAREN          reduce using rule 123 (exp -> termino puntoSumaResta exp1 .)
    RBRACKET        reduce using rule 123 (exp -> termino puntoSumaResta exp1 .)
    COMMA           reduce using rule 123 (exp -> termino puntoSumaResta exp1 .)


state 179

    (124) exp1 -> PLUS . puntoPushOperador termino puntoSumaResta exp1
    (133) puntoPushOperador -> .

    LPAREN          reduce using rule 133 (puntoPushOperador -> .)
    MINUS           reduce using rule 133 (puntoPushOperador -> .)
    NOT             reduce using rule 133 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 133 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 133 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 133 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 133 (puntoPushOperador -> .)
    ID              reduce using rule 133 (puntoPushOperador -> .)
    CALL            reduce using rule 133 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 212

state 180

    (125) exp1 -> MINUS . puntoPushOperador termino puntoSumaResta exp1
    (133) puntoPushOperador -> .

    LPAREN          reduce using rule 133 (puntoPushOperador -> .)
    MINUS           reduce using rule 133 (puntoPushOperador -> .)
    NOT             reduce using rule 133 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 133 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 133 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 133 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 133 (puntoPushOperador -> .)
    ID              reduce using rule 133 (puntoPushOperador -> .)
    CALL            reduce using rule 133 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 213

state 181

    (126) exp1 -> empty .

    GREATERTHAN     reduce using rule 126 (exp1 -> empty .)
    LESSTHAN        reduce using rule 126 (exp1 -> empty .)
    GREATERTHANEQUAL reduce using rule 126 (exp1 -> empty .)
    LESSTHANEQUAL   reduce using rule 126 (exp1 -> empty .)
    EQUALEQUAL      reduce using rule 126 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 126 (exp1 -> empty .)
    AND             reduce using rule 126 (exp1 -> empty .)
    OR              reduce using rule 126 (exp1 -> empty .)
    SEMICOLON       reduce using rule 126 (exp1 -> empty .)
    RPAREN          reduce using rule 126 (exp1 -> empty .)
    RBRACKET        reduce using rule 126 (exp1 -> empty .)
    COMMA           reduce using rule 126 (exp1 -> empty .)


state 182

    (128) termino -> factor puntoMultDivide termino1 .

    PLUS            reduce using rule 128 (termino -> factor puntoMultDivide termino1 .)
    MINUS           reduce using rule 128 (termino -> factor puntoMultDivide termino1 .)
    GREATERTHAN     reduce using rule 128 (termino -> factor puntoMultDivide termino1 .)
    LESSTHAN        reduce using rule 128 (termino -> factor puntoMultDivide termino1 .)
    GREATERTHANEQUAL reduce using rule 128 (termino -> factor puntoMultDivide termino1 .)
    LESSTHANEQUAL   reduce using rule 128 (termino -> factor puntoMultDivide termino1 .)
    EQUALEQUAL      reduce using rule 128 (termino -> factor puntoMultDivide termino1 .)
    NOTEQUAL        reduce using rule 128 (termino -> factor puntoMultDivide termino1 .)
    AND             reduce using rule 128 (termino -> factor puntoMultDivide termino1 .)
    OR              reduce using rule 128 (termino -> factor puntoMultDivide termino1 .)
    SEMICOLON       reduce using rule 128 (termino -> factor puntoMultDivide termino1 .)
    RPAREN          reduce using rule 128 (termino -> factor puntoMultDivide termino1 .)
    RBRACKET        reduce using rule 128 (termino -> factor puntoMultDivide termino1 .)
    COMMA           reduce using rule 128 (termino -> factor puntoMultDivide termino1 .)


state 183

    (129) termino1 -> TIMES . puntoPushOperador factor puntoMultDivide termino1
    (133) puntoPushOperador -> .

    LPAREN          reduce using rule 133 (puntoPushOperador -> .)
    MINUS           reduce using rule 133 (puntoPushOperador -> .)
    NOT             reduce using rule 133 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 133 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 133 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 133 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 133 (puntoPushOperador -> .)
    ID              reduce using rule 133 (puntoPushOperador -> .)
    CALL            reduce using rule 133 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 214

state 184

    (130) termino1 -> DIVIDE . puntoPushOperador factor puntoMultDivide termino1
    (133) puntoPushOperador -> .

    LPAREN          reduce using rule 133 (puntoPushOperador -> .)
    MINUS           reduce using rule 133 (puntoPushOperador -> .)
    NOT             reduce using rule 133 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 133 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 133 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 133 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 133 (puntoPushOperador -> .)
    ID              reduce using rule 133 (puntoPushOperador -> .)
    CALL            reduce using rule 133 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 215

state 185

    (131) termino1 -> empty .

    PLUS            reduce using rule 131 (termino1 -> empty .)
    MINUS           reduce using rule 131 (termino1 -> empty .)
    GREATERTHAN     reduce using rule 131 (termino1 -> empty .)
    LESSTHAN        reduce using rule 131 (termino1 -> empty .)
    GREATERTHANEQUAL reduce using rule 131 (termino1 -> empty .)
    LESSTHANEQUAL   reduce using rule 131 (termino1 -> empty .)
    EQUALEQUAL      reduce using rule 131 (termino1 -> empty .)
    NOTEQUAL        reduce using rule 131 (termino1 -> empty .)
    AND             reduce using rule 131 (termino1 -> empty .)
    OR              reduce using rule 131 (termino1 -> empty .)
    SEMICOLON       reduce using rule 131 (termino1 -> empty .)
    RPAREN          reduce using rule 131 (termino1 -> empty .)
    RBRACKET        reduce using rule 131 (termino1 -> empty .)
    COMMA           reduce using rule 131 (termino1 -> empty .)


state 186

    (134) factor -> LPAREN puntoPushFondoFalso expresion . RPAREN puntoPopFondoFalso

    RPAREN          shift and go to state 216


state 187

    (32) tipo_cte -> ID puntoPushID tipo_cte1 .

    TIMES           reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    DIVIDE          reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    PLUS            reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    MINUS           reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    GREATERTHAN     reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    LESSTHAN        reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    GREATERTHANEQUAL reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    LESSTHANEQUAL   reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    EQUALEQUAL      reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    NOTEQUAL        reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    AND             reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    OR              reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    SEMICOLON       reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    RPAREN          reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    RBRACKET        reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    COMMA           reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)


state 188

    (34) tipo_cte1 -> LBRACKET . CTE_INT RBRACKET

    CTE_INT         shift and go to state 217


state 189

    (35) tipo_cte1 -> funciones_arr .

    TIMES           reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    DIVIDE          reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    PLUS            reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    MINUS           reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    GREATERTHAN     reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    LESSTHAN        reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    GREATERTHANEQUAL reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    LESSTHANEQUAL   reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    EQUALEQUAL      reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    NOTEQUAL        reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    AND             reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    OR              reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    SEMICOLON       reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    RPAREN          reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    RBRACKET        reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    COMMA           reduce using rule 35 (tipo_cte1 -> funciones_arr .)


state 190

    (36) tipo_cte1 -> empty .

    TIMES           reduce using rule 36 (tipo_cte1 -> empty .)
    DIVIDE          reduce using rule 36 (tipo_cte1 -> empty .)
    PLUS            reduce using rule 36 (tipo_cte1 -> empty .)
    MINUS           reduce using rule 36 (tipo_cte1 -> empty .)
    GREATERTHAN     reduce using rule 36 (tipo_cte1 -> empty .)
    LESSTHAN        reduce using rule 36 (tipo_cte1 -> empty .)
    GREATERTHANEQUAL reduce using rule 36 (tipo_cte1 -> empty .)
    LESSTHANEQUAL   reduce using rule 36 (tipo_cte1 -> empty .)
    EQUALEQUAL      reduce using rule 36 (tipo_cte1 -> empty .)
    NOTEQUAL        reduce using rule 36 (tipo_cte1 -> empty .)
    AND             reduce using rule 36 (tipo_cte1 -> empty .)
    OR              reduce using rule 36 (tipo_cte1 -> empty .)
    SEMICOLON       reduce using rule 36 (tipo_cte1 -> empty .)
    RPAREN          reduce using rule 36 (tipo_cte1 -> empty .)
    RBRACKET        reduce using rule 36 (tipo_cte1 -> empty .)
    COMMA           reduce using rule 36 (tipo_cte1 -> empty .)


state 191

    (140) funciones_arr -> PUNTO . funciones_arr1 LPAREN RPAREN
    (141) funciones_arr1 -> . MAX
    (142) funciones_arr1 -> . MIN
    (143) funciones_arr1 -> . RANGE
    (144) funciones_arr1 -> . MEDIAN
    (145) funciones_arr1 -> . AVERAGE
    (146) funciones_arr1 -> . IQRANGE
    (147) funciones_arr1 -> . STDEV
    (148) funciones_arr1 -> . VARIANCE
    (149) funciones_arr1 -> . MODIFY
    (150) funciones_arr1 -> . DRAW

    MAX             shift and go to state 219
    MIN             shift and go to state 220
    RANGE           shift and go to state 221
    MEDIAN          shift and go to state 222
    AVERAGE         shift and go to state 223
    IQRANGE         shift and go to state 224
    STDEV           shift and go to state 225
    VARIANCE        shift and go to state 226
    MODIFY          shift and go to state 227
    DRAW            shift and go to state 228

    funciones_arr1                 shift and go to state 218

state 192

    (103) while -> WHILE puntoPushSaltoWhile LPAREN expresion . RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad

    RPAREN          shift and go to state 229


state 193

    (107) do_while -> DO puntoPushSaltoDoWhile bloque WHILE . LPAREN expresion RPAREN puntoCreateDoWhileQuad

    LPAREN          shift and go to state 230


state 194

    (64) bloque -> LBLOQUE bloque1 . RBLOQUE

    RBLOQUE         shift and go to state 231


state 195

    (65) bloque1 -> estatuto . bloque1
    (65) bloque1 -> . estatuto bloque1
    (66) bloque1 -> . empty
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . return
    (71) estatuto -> . while
    (72) estatuto -> . do_while
    (73) estatuto -> . llamada SEMICOLON
    (151) empty -> .
    (74) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (82) condicion -> . IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (88) escritura -> . PRINT LPAREN escritura1 RPAREN SEMICOLON
    (101) return -> . RETURN expresion puntoReturnQuad SEMICOLON
    (103) while -> . WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (107) do_while -> . DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    RBLOQUE         reduce using rule 151 (empty -> .)
    ID              shift and go to state 90
    IF              shift and go to state 91
    PRINT           shift and go to state 92
    RETURN          shift and go to state 93
    WHILE           shift and go to state 94
    DO              shift and go to state 95
    CALL            shift and go to state 96

    estatuto                       shift and go to state 195
    bloque1                        shift and go to state 232
    empty                          shift and go to state 196
    asignacion                     shift and go to state 83
    condicion                      shift and go to state 84
    escritura                      shift and go to state 85
    return                         shift and go to state 86
    while                          shift and go to state 87
    do_while                       shift and go to state 88
    llamada                        shift and go to state 89

state 196

    (66) bloque1 -> empty .

    RBLOQUE         reduce using rule 66 (bloque1 -> empty .)


state 197

    (93) llamada -> CALL PUNTO puntoPushFondoFalso ID . puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad
    (98) puntoVerifyLlamada -> .

    LPAREN          reduce using rule 98 (puntoVerifyLlamada -> .)

    puntoVerifyLlamada             shift and go to state 233

state 198

    (50) funciones3 -> COMMA tipo . ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3

    ID              shift and go to state 234


state 199

    (74) asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 . SEMICOLON

    SEMICOLON       shift and go to state 235


state 200

    (77) asignacion2 -> expresion . puntoCreateAsignacionQuad
    (80) puntoCreateAsignacionQuad -> .

    SEMICOLON       reduce using rule 80 (puntoCreateAsignacionQuad -> .)

    puntoCreateAsignacionQuad      shift and go to state 236

state 201

    (78) asignacion2 -> leida .

    SEMICOLON       reduce using rule 78 (asignacion2 -> leida .)


state 202

    (81) leida -> INPUT . LPAREN RPAREN

    LPAREN          shift and go to state 237


state 203

    (75) asignacion1 -> LBRACKET expresion RBRACKET .

    EQUALS          reduce using rule 75 (asignacion1 -> LBRACKET expresion RBRACKET .)


state 204

    (82) condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad . bloque condicion1 puntoFillIfQuad
    (64) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 158

    bloque                         shift and go to state 238

state 205

    (88) escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .

    ID              reduce using rule 88 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    IF              reduce using rule 88 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    PRINT           reduce using rule 88 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 88 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 88 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    DO              reduce using rule 88 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    CALL            reduce using rule 88 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    RBLOQUE         reduce using rule 88 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)


state 206

    (115) compare1 -> GREATERTHAN puntoPushOperador exp . puntoOperacionRelacional
    (122) puntoOperacionRelacional -> .

    AND             reduce using rule 122 (puntoOperacionRelacional -> .)
    OR              reduce using rule 122 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 122 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 122 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 122 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 122 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 239

state 207

    (116) compare1 -> LESSTHAN puntoPushOperador exp . puntoOperacionRelacional
    (122) puntoOperacionRelacional -> .

    AND             reduce using rule 122 (puntoOperacionRelacional -> .)
    OR              reduce using rule 122 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 122 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 122 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 122 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 122 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 240

state 208

    (117) compare1 -> GREATERTHANEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (122) puntoOperacionRelacional -> .

    AND             reduce using rule 122 (puntoOperacionRelacional -> .)
    OR              reduce using rule 122 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 122 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 122 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 122 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 122 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 241

state 209

    (118) compare1 -> LESSTHANEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (122) puntoOperacionRelacional -> .

    AND             reduce using rule 122 (puntoOperacionRelacional -> .)
    OR              reduce using rule 122 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 122 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 122 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 122 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 122 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 242

state 210

    (119) compare1 -> EQUALEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (122) puntoOperacionRelacional -> .

    AND             reduce using rule 122 (puntoOperacionRelacional -> .)
    OR              reduce using rule 122 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 122 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 122 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 122 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 122 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 243

state 211

    (120) compare1 -> NOTEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (122) puntoOperacionRelacional -> .

    AND             reduce using rule 122 (puntoOperacionRelacional -> .)
    OR              reduce using rule 122 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 122 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 122 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 122 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 122 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 244

state 212

    (124) exp1 -> PLUS puntoPushOperador . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    termino                        shift and go to state 245
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 213

    (125) exp1 -> MINUS puntoPushOperador . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    termino                        shift and go to state 246
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 214

    (129) termino1 -> TIMES puntoPushOperador . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    factor                         shift and go to state 247
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 215

    (130) termino1 -> DIVIDE puntoPushOperador . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    factor                         shift and go to state 248
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 216

    (134) factor -> LPAREN puntoPushFondoFalso expresion RPAREN . puntoPopFondoFalso
    (139) puntoPopFondoFalso -> .

    TIMES           reduce using rule 139 (puntoPopFondoFalso -> .)
    DIVIDE          reduce using rule 139 (puntoPopFondoFalso -> .)
    PLUS            reduce using rule 139 (puntoPopFondoFalso -> .)
    MINUS           reduce using rule 139 (puntoPopFondoFalso -> .)
    GREATERTHAN     reduce using rule 139 (puntoPopFondoFalso -> .)
    LESSTHAN        reduce using rule 139 (puntoPopFondoFalso -> .)
    GREATERTHANEQUAL reduce using rule 139 (puntoPopFondoFalso -> .)
    LESSTHANEQUAL   reduce using rule 139 (puntoPopFondoFalso -> .)
    EQUALEQUAL      reduce using rule 139 (puntoPopFondoFalso -> .)
    NOTEQUAL        reduce using rule 139 (puntoPopFondoFalso -> .)
    AND             reduce using rule 139 (puntoPopFondoFalso -> .)
    OR              reduce using rule 139 (puntoPopFondoFalso -> .)
    SEMICOLON       reduce using rule 139 (puntoPopFondoFalso -> .)
    RPAREN          reduce using rule 139 (puntoPopFondoFalso -> .)
    RBRACKET        reduce using rule 139 (puntoPopFondoFalso -> .)
    COMMA           reduce using rule 139 (puntoPopFondoFalso -> .)

    puntoPopFondoFalso             shift and go to state 249

state 217

    (34) tipo_cte1 -> LBRACKET CTE_INT . RBRACKET

    RBRACKET        shift and go to state 250


state 218

    (140) funciones_arr -> PUNTO funciones_arr1 . LPAREN RPAREN

    LPAREN          shift and go to state 251


state 219

    (141) funciones_arr1 -> MAX .

    LPAREN          reduce using rule 141 (funciones_arr1 -> MAX .)


state 220

    (142) funciones_arr1 -> MIN .

    LPAREN          reduce using rule 142 (funciones_arr1 -> MIN .)


state 221

    (143) funciones_arr1 -> RANGE .

    LPAREN          reduce using rule 143 (funciones_arr1 -> RANGE .)


state 222

    (144) funciones_arr1 -> MEDIAN .

    LPAREN          reduce using rule 144 (funciones_arr1 -> MEDIAN .)


state 223

    (145) funciones_arr1 -> AVERAGE .

    LPAREN          reduce using rule 145 (funciones_arr1 -> AVERAGE .)


state 224

    (146) funciones_arr1 -> IQRANGE .

    LPAREN          reduce using rule 146 (funciones_arr1 -> IQRANGE .)


state 225

    (147) funciones_arr1 -> STDEV .

    LPAREN          reduce using rule 147 (funciones_arr1 -> STDEV .)


state 226

    (148) funciones_arr1 -> VARIANCE .

    LPAREN          reduce using rule 148 (funciones_arr1 -> VARIANCE .)


state 227

    (149) funciones_arr1 -> MODIFY .

    LPAREN          reduce using rule 149 (funciones_arr1 -> MODIFY .)


state 228

    (150) funciones_arr1 -> DRAW .

    LPAREN          reduce using rule 150 (funciones_arr1 -> DRAW .)


state 229

    (103) while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN . puntoCreateWhileQuad bloque puntoEndWhileQuad
    (105) puntoCreateWhileQuad -> .

    LBLOQUE         reduce using rule 105 (puntoCreateWhileQuad -> .)

    puntoCreateWhileQuad           shift and go to state 252

state 230

    (107) do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN . expresion RPAREN puntoCreateDoWhileQuad
    (110) expresion -> . compare expresion2
    (114) compare -> . exp compare1
    (123) exp -> . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    expresion                      shift and go to state 253
    compare                        shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 231

    (64) bloque -> LBLOQUE bloque1 RBLOQUE .

    WHILE           reduce using rule 64 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    ELSE            reduce using rule 64 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    ID              reduce using rule 64 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    IF              reduce using rule 64 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    PRINT           reduce using rule 64 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    RETURN          reduce using rule 64 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    DO              reduce using rule 64 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    CALL            reduce using rule 64 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    RBLOQUE         reduce using rule 64 (bloque -> LBLOQUE bloque1 RBLOQUE .)


state 232

    (65) bloque1 -> estatuto bloque1 .

    RBLOQUE         reduce using rule 65 (bloque1 -> estatuto bloque1 .)


state 233

    (93) llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada . LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 254


state 234

    (50) funciones3 -> COMMA tipo ID . puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (20) puntoCreateVar -> .

    COMMA           reduce using rule 20 (puntoCreateVar -> .)
    RPAREN          reduce using rule 20 (puntoCreateVar -> .)

    puntoCreateVar                 shift and go to state 255

state 235

    (74) asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .

    ID              reduce using rule 74 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    IF              reduce using rule 74 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    PRINT           reduce using rule 74 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    RETURN          reduce using rule 74 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    WHILE           reduce using rule 74 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    DO              reduce using rule 74 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    CALL            reduce using rule 74 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    RBLOQUE         reduce using rule 74 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)


state 236

    (77) asignacion2 -> expresion puntoCreateAsignacionQuad .

    SEMICOLON       reduce using rule 77 (asignacion2 -> expresion puntoCreateAsignacionQuad .)


state 237

    (81) leida -> INPUT LPAREN . RPAREN

    RPAREN          shift and go to state 256


state 238

    (82) condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque . condicion1 puntoFillIfQuad
    (83) condicion1 -> . ELSE puntoCreateElseQuad bloque
    (84) condicion1 -> . empty
    (151) empty -> .

    ELSE            shift and go to state 258
    ID              reduce using rule 151 (empty -> .)
    IF              reduce using rule 151 (empty -> .)
    PRINT           reduce using rule 151 (empty -> .)
    RETURN          reduce using rule 151 (empty -> .)
    WHILE           reduce using rule 151 (empty -> .)
    DO              reduce using rule 151 (empty -> .)
    CALL            reduce using rule 151 (empty -> .)
    RBLOQUE         reduce using rule 151 (empty -> .)

    condicion1                     shift and go to state 257
    empty                          shift and go to state 259

state 239

    (115) compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 115 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 115 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 115 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 115 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 115 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 115 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)


state 240

    (116) compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 116 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 116 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 116 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 116 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 116 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 116 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)


state 241

    (117) compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 117 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 117 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 117 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 117 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 117 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 117 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 242

    (118) compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 118 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 118 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 118 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 118 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 118 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 118 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 243

    (119) compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 119 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 119 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 119 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 119 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 119 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 119 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 244

    (120) compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 120 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 120 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 120 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 120 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 120 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 120 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 245

    (124) exp1 -> PLUS puntoPushOperador termino . puntoSumaResta exp1
    (127) puntoSumaResta -> .

    PLUS            reduce using rule 127 (puntoSumaResta -> .)
    MINUS           reduce using rule 127 (puntoSumaResta -> .)
    GREATERTHAN     reduce using rule 127 (puntoSumaResta -> .)
    LESSTHAN        reduce using rule 127 (puntoSumaResta -> .)
    GREATERTHANEQUAL reduce using rule 127 (puntoSumaResta -> .)
    LESSTHANEQUAL   reduce using rule 127 (puntoSumaResta -> .)
    EQUALEQUAL      reduce using rule 127 (puntoSumaResta -> .)
    NOTEQUAL        reduce using rule 127 (puntoSumaResta -> .)
    AND             reduce using rule 127 (puntoSumaResta -> .)
    OR              reduce using rule 127 (puntoSumaResta -> .)
    SEMICOLON       reduce using rule 127 (puntoSumaResta -> .)
    RPAREN          reduce using rule 127 (puntoSumaResta -> .)
    RBRACKET        reduce using rule 127 (puntoSumaResta -> .)
    COMMA           reduce using rule 127 (puntoSumaResta -> .)

    puntoSumaResta                 shift and go to state 260

state 246

    (125) exp1 -> MINUS puntoPushOperador termino . puntoSumaResta exp1
    (127) puntoSumaResta -> .

    PLUS            reduce using rule 127 (puntoSumaResta -> .)
    MINUS           reduce using rule 127 (puntoSumaResta -> .)
    GREATERTHAN     reduce using rule 127 (puntoSumaResta -> .)
    LESSTHAN        reduce using rule 127 (puntoSumaResta -> .)
    GREATERTHANEQUAL reduce using rule 127 (puntoSumaResta -> .)
    LESSTHANEQUAL   reduce using rule 127 (puntoSumaResta -> .)
    EQUALEQUAL      reduce using rule 127 (puntoSumaResta -> .)
    NOTEQUAL        reduce using rule 127 (puntoSumaResta -> .)
    AND             reduce using rule 127 (puntoSumaResta -> .)
    OR              reduce using rule 127 (puntoSumaResta -> .)
    SEMICOLON       reduce using rule 127 (puntoSumaResta -> .)
    RPAREN          reduce using rule 127 (puntoSumaResta -> .)
    RBRACKET        reduce using rule 127 (puntoSumaResta -> .)
    COMMA           reduce using rule 127 (puntoSumaResta -> .)

    puntoSumaResta                 shift and go to state 261

state 247

    (129) termino1 -> TIMES puntoPushOperador factor . puntoMultDivide termino1
    (132) puntoMultDivide -> .

    TIMES           reduce using rule 132 (puntoMultDivide -> .)
    DIVIDE          reduce using rule 132 (puntoMultDivide -> .)
    PLUS            reduce using rule 132 (puntoMultDivide -> .)
    MINUS           reduce using rule 132 (puntoMultDivide -> .)
    GREATERTHAN     reduce using rule 132 (puntoMultDivide -> .)
    LESSTHAN        reduce using rule 132 (puntoMultDivide -> .)
    GREATERTHANEQUAL reduce using rule 132 (puntoMultDivide -> .)
    LESSTHANEQUAL   reduce using rule 132 (puntoMultDivide -> .)
    EQUALEQUAL      reduce using rule 132 (puntoMultDivide -> .)
    NOTEQUAL        reduce using rule 132 (puntoMultDivide -> .)
    AND             reduce using rule 132 (puntoMultDivide -> .)
    OR              reduce using rule 132 (puntoMultDivide -> .)
    SEMICOLON       reduce using rule 132 (puntoMultDivide -> .)
    RPAREN          reduce using rule 132 (puntoMultDivide -> .)
    RBRACKET        reduce using rule 132 (puntoMultDivide -> .)
    COMMA           reduce using rule 132 (puntoMultDivide -> .)

    puntoMultDivide                shift and go to state 262

state 248

    (130) termino1 -> DIVIDE puntoPushOperador factor . puntoMultDivide termino1
    (132) puntoMultDivide -> .

    TIMES           reduce using rule 132 (puntoMultDivide -> .)
    DIVIDE          reduce using rule 132 (puntoMultDivide -> .)
    PLUS            reduce using rule 132 (puntoMultDivide -> .)
    MINUS           reduce using rule 132 (puntoMultDivide -> .)
    GREATERTHAN     reduce using rule 132 (puntoMultDivide -> .)
    LESSTHAN        reduce using rule 132 (puntoMultDivide -> .)
    GREATERTHANEQUAL reduce using rule 132 (puntoMultDivide -> .)
    LESSTHANEQUAL   reduce using rule 132 (puntoMultDivide -> .)
    EQUALEQUAL      reduce using rule 132 (puntoMultDivide -> .)
    NOTEQUAL        reduce using rule 132 (puntoMultDivide -> .)
    AND             reduce using rule 132 (puntoMultDivide -> .)
    OR              reduce using rule 132 (puntoMultDivide -> .)
    SEMICOLON       reduce using rule 132 (puntoMultDivide -> .)
    RPAREN          reduce using rule 132 (puntoMultDivide -> .)
    RBRACKET        reduce using rule 132 (puntoMultDivide -> .)
    COMMA           reduce using rule 132 (puntoMultDivide -> .)

    puntoMultDivide                shift and go to state 263

state 249

    (134) factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .

    TIMES           reduce using rule 134 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    DIVIDE          reduce using rule 134 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    PLUS            reduce using rule 134 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    MINUS           reduce using rule 134 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    GREATERTHAN     reduce using rule 134 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    LESSTHAN        reduce using rule 134 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    GREATERTHANEQUAL reduce using rule 134 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    LESSTHANEQUAL   reduce using rule 134 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    EQUALEQUAL      reduce using rule 134 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    NOTEQUAL        reduce using rule 134 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    AND             reduce using rule 134 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    OR              reduce using rule 134 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    SEMICOLON       reduce using rule 134 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    RPAREN          reduce using rule 134 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    RBRACKET        reduce using rule 134 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    COMMA           reduce using rule 134 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)


state 250

    (34) tipo_cte1 -> LBRACKET CTE_INT RBRACKET .

    TIMES           reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    DIVIDE          reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    PLUS            reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    MINUS           reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    GREATERTHAN     reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    LESSTHAN        reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    GREATERTHANEQUAL reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    LESSTHANEQUAL   reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    EQUALEQUAL      reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    NOTEQUAL        reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    AND             reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    OR              reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    SEMICOLON       reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    RPAREN          reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    RBRACKET        reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    COMMA           reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)


state 251

    (140) funciones_arr -> PUNTO funciones_arr1 LPAREN . RPAREN

    RPAREN          shift and go to state 264


state 252

    (103) while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad . bloque puntoEndWhileQuad
    (64) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 158

    bloque                         shift and go to state 265

state 253

    (107) do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion . RPAREN puntoCreateDoWhileQuad

    RPAREN          shift and go to state 266


state 254

    (93) llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN . llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad
    (94) llamada1 -> . expresion puntoVerifyArgumento llamada2
    (95) llamada1 -> . empty
    (110) expresion -> . compare expresion2
    (151) empty -> .
    (114) compare -> . exp compare1
    (123) exp -> . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    RPAREN          reduce using rule 151 (empty -> .)
    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    llamada1                       shift and go to state 267
    expresion                      shift and go to state 268
    empty                          shift and go to state 269
    compare                        shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 255

    (50) funciones3 -> COMMA tipo ID puntoCreateVar . puntoCreateVarType puntoPushParam funciones3
    (21) puntoCreateVarType -> .

    COMMA           reduce using rule 21 (puntoCreateVarType -> .)
    RPAREN          reduce using rule 21 (puntoCreateVarType -> .)

    puntoCreateVarType             shift and go to state 270

state 256

    (81) leida -> INPUT LPAREN RPAREN .

    SEMICOLON       reduce using rule 81 (leida -> INPUT LPAREN RPAREN .)


state 257

    (82) condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 . puntoFillIfQuad
    (86) puntoFillIfQuad -> .

    ID              reduce using rule 86 (puntoFillIfQuad -> .)
    IF              reduce using rule 86 (puntoFillIfQuad -> .)
    PRINT           reduce using rule 86 (puntoFillIfQuad -> .)
    RETURN          reduce using rule 86 (puntoFillIfQuad -> .)
    WHILE           reduce using rule 86 (puntoFillIfQuad -> .)
    DO              reduce using rule 86 (puntoFillIfQuad -> .)
    CALL            reduce using rule 86 (puntoFillIfQuad -> .)
    RBLOQUE         reduce using rule 86 (puntoFillIfQuad -> .)

    puntoFillIfQuad                shift and go to state 271

state 258

    (83) condicion1 -> ELSE . puntoCreateElseQuad bloque
    (87) puntoCreateElseQuad -> .

    LBLOQUE         reduce using rule 87 (puntoCreateElseQuad -> .)

    puntoCreateElseQuad            shift and go to state 272

state 259

    (84) condicion1 -> empty .

    ID              reduce using rule 84 (condicion1 -> empty .)
    IF              reduce using rule 84 (condicion1 -> empty .)
    PRINT           reduce using rule 84 (condicion1 -> empty .)
    RETURN          reduce using rule 84 (condicion1 -> empty .)
    WHILE           reduce using rule 84 (condicion1 -> empty .)
    DO              reduce using rule 84 (condicion1 -> empty .)
    CALL            reduce using rule 84 (condicion1 -> empty .)
    RBLOQUE         reduce using rule 84 (condicion1 -> empty .)


state 260

    (124) exp1 -> PLUS puntoPushOperador termino puntoSumaResta . exp1
    (124) exp1 -> . PLUS puntoPushOperador termino puntoSumaResta exp1
    (125) exp1 -> . MINUS puntoPushOperador termino puntoSumaResta exp1
    (126) exp1 -> . empty
    (151) empty -> .

    PLUS            shift and go to state 179
    MINUS           shift and go to state 180
    GREATERTHAN     reduce using rule 151 (empty -> .)
    LESSTHAN        reduce using rule 151 (empty -> .)
    GREATERTHANEQUAL reduce using rule 151 (empty -> .)
    LESSTHANEQUAL   reduce using rule 151 (empty -> .)
    EQUALEQUAL      reduce using rule 151 (empty -> .)
    NOTEQUAL        reduce using rule 151 (empty -> .)
    AND             reduce using rule 151 (empty -> .)
    OR              reduce using rule 151 (empty -> .)
    SEMICOLON       reduce using rule 151 (empty -> .)
    RPAREN          reduce using rule 151 (empty -> .)
    RBRACKET        reduce using rule 151 (empty -> .)
    COMMA           reduce using rule 151 (empty -> .)

    exp1                           shift and go to state 273
    empty                          shift and go to state 181

state 261

    (125) exp1 -> MINUS puntoPushOperador termino puntoSumaResta . exp1
    (124) exp1 -> . PLUS puntoPushOperador termino puntoSumaResta exp1
    (125) exp1 -> . MINUS puntoPushOperador termino puntoSumaResta exp1
    (126) exp1 -> . empty
    (151) empty -> .

    PLUS            shift and go to state 179
    MINUS           shift and go to state 180
    GREATERTHAN     reduce using rule 151 (empty -> .)
    LESSTHAN        reduce using rule 151 (empty -> .)
    GREATERTHANEQUAL reduce using rule 151 (empty -> .)
    LESSTHANEQUAL   reduce using rule 151 (empty -> .)
    EQUALEQUAL      reduce using rule 151 (empty -> .)
    NOTEQUAL        reduce using rule 151 (empty -> .)
    AND             reduce using rule 151 (empty -> .)
    OR              reduce using rule 151 (empty -> .)
    SEMICOLON       reduce using rule 151 (empty -> .)
    RPAREN          reduce using rule 151 (empty -> .)
    RBRACKET        reduce using rule 151 (empty -> .)
    COMMA           reduce using rule 151 (empty -> .)

    exp1                           shift and go to state 274
    empty                          shift and go to state 181

state 262

    (129) termino1 -> TIMES puntoPushOperador factor puntoMultDivide . termino1
    (129) termino1 -> . TIMES puntoPushOperador factor puntoMultDivide termino1
    (130) termino1 -> . DIVIDE puntoPushOperador factor puntoMultDivide termino1
    (131) termino1 -> . empty
    (151) empty -> .

    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 184
    PLUS            reduce using rule 151 (empty -> .)
    MINUS           reduce using rule 151 (empty -> .)
    GREATERTHAN     reduce using rule 151 (empty -> .)
    LESSTHAN        reduce using rule 151 (empty -> .)
    GREATERTHANEQUAL reduce using rule 151 (empty -> .)
    LESSTHANEQUAL   reduce using rule 151 (empty -> .)
    EQUALEQUAL      reduce using rule 151 (empty -> .)
    NOTEQUAL        reduce using rule 151 (empty -> .)
    AND             reduce using rule 151 (empty -> .)
    OR              reduce using rule 151 (empty -> .)
    SEMICOLON       reduce using rule 151 (empty -> .)
    RPAREN          reduce using rule 151 (empty -> .)
    RBRACKET        reduce using rule 151 (empty -> .)
    COMMA           reduce using rule 151 (empty -> .)

    termino1                       shift and go to state 275
    empty                          shift and go to state 185

state 263

    (130) termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide . termino1
    (129) termino1 -> . TIMES puntoPushOperador factor puntoMultDivide termino1
    (130) termino1 -> . DIVIDE puntoPushOperador factor puntoMultDivide termino1
    (131) termino1 -> . empty
    (151) empty -> .

    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 184
    PLUS            reduce using rule 151 (empty -> .)
    MINUS           reduce using rule 151 (empty -> .)
    GREATERTHAN     reduce using rule 151 (empty -> .)
    LESSTHAN        reduce using rule 151 (empty -> .)
    GREATERTHANEQUAL reduce using rule 151 (empty -> .)
    LESSTHANEQUAL   reduce using rule 151 (empty -> .)
    EQUALEQUAL      reduce using rule 151 (empty -> .)
    NOTEQUAL        reduce using rule 151 (empty -> .)
    AND             reduce using rule 151 (empty -> .)
    OR              reduce using rule 151 (empty -> .)
    SEMICOLON       reduce using rule 151 (empty -> .)
    RPAREN          reduce using rule 151 (empty -> .)
    RBRACKET        reduce using rule 151 (empty -> .)
    COMMA           reduce using rule 151 (empty -> .)

    termino1                       shift and go to state 276
    empty                          shift and go to state 185

state 264

    (140) funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .

    TIMES           reduce using rule 140 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    DIVIDE          reduce using rule 140 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    PLUS            reduce using rule 140 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    MINUS           reduce using rule 140 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    GREATERTHAN     reduce using rule 140 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    LESSTHAN        reduce using rule 140 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    GREATERTHANEQUAL reduce using rule 140 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    LESSTHANEQUAL   reduce using rule 140 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    EQUALEQUAL      reduce using rule 140 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 140 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    AND             reduce using rule 140 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    OR              reduce using rule 140 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    SEMICOLON       reduce using rule 140 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    RPAREN          reduce using rule 140 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    RBRACKET        reduce using rule 140 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    COMMA           reduce using rule 140 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)


state 265

    (103) while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque . puntoEndWhileQuad
    (106) puntoEndWhileQuad -> .

    ID              reduce using rule 106 (puntoEndWhileQuad -> .)
    IF              reduce using rule 106 (puntoEndWhileQuad -> .)
    PRINT           reduce using rule 106 (puntoEndWhileQuad -> .)
    RETURN          reduce using rule 106 (puntoEndWhileQuad -> .)
    WHILE           reduce using rule 106 (puntoEndWhileQuad -> .)
    DO              reduce using rule 106 (puntoEndWhileQuad -> .)
    CALL            reduce using rule 106 (puntoEndWhileQuad -> .)
    RBLOQUE         reduce using rule 106 (puntoEndWhileQuad -> .)

    puntoEndWhileQuad              shift and go to state 277

state 266

    (107) do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN . puntoCreateDoWhileQuad
    (109) puntoCreateDoWhileQuad -> .

    ID              reduce using rule 109 (puntoCreateDoWhileQuad -> .)
    IF              reduce using rule 109 (puntoCreateDoWhileQuad -> .)
    PRINT           reduce using rule 109 (puntoCreateDoWhileQuad -> .)
    RETURN          reduce using rule 109 (puntoCreateDoWhileQuad -> .)
    WHILE           reduce using rule 109 (puntoCreateDoWhileQuad -> .)
    DO              reduce using rule 109 (puntoCreateDoWhileQuad -> .)
    CALL            reduce using rule 109 (puntoCreateDoWhileQuad -> .)
    RBLOQUE         reduce using rule 109 (puntoCreateDoWhileQuad -> .)

    puntoCreateDoWhileQuad         shift and go to state 278

state 267

    (93) llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 . RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    RPAREN          shift and go to state 279


state 268

    (94) llamada1 -> expresion . puntoVerifyArgumento llamada2
    (99) puntoVerifyArgumento -> .

    COMMA           reduce using rule 99 (puntoVerifyArgumento -> .)
    RPAREN          reduce using rule 99 (puntoVerifyArgumento -> .)

    puntoVerifyArgumento           shift and go to state 280

state 269

    (95) llamada1 -> empty .

    RPAREN          reduce using rule 95 (llamada1 -> empty .)


state 270

    (50) funciones3 -> COMMA tipo ID puntoCreateVar puntoCreateVarType . puntoPushParam funciones3
    (55) puntoPushParam -> .

    COMMA           reduce using rule 55 (puntoPushParam -> .)
    RPAREN          reduce using rule 55 (puntoPushParam -> .)

    puntoPushParam                 shift and go to state 281

state 271

    (82) condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .

    ID              reduce using rule 82 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    IF              reduce using rule 82 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    PRINT           reduce using rule 82 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    RETURN          reduce using rule 82 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    WHILE           reduce using rule 82 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    DO              reduce using rule 82 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    CALL            reduce using rule 82 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    RBLOQUE         reduce using rule 82 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)


state 272

    (83) condicion1 -> ELSE puntoCreateElseQuad . bloque
    (64) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 158

    bloque                         shift and go to state 282

state 273

    (124) exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .

    GREATERTHAN     reduce using rule 124 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHAN        reduce using rule 124 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    GREATERTHANEQUAL reduce using rule 124 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHANEQUAL   reduce using rule 124 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    EQUALEQUAL      reduce using rule 124 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    NOTEQUAL        reduce using rule 124 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    AND             reduce using rule 124 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    OR              reduce using rule 124 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    SEMICOLON       reduce using rule 124 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    RPAREN          reduce using rule 124 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    RBRACKET        reduce using rule 124 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    COMMA           reduce using rule 124 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)


state 274

    (125) exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .

    GREATERTHAN     reduce using rule 125 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHAN        reduce using rule 125 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    GREATERTHANEQUAL reduce using rule 125 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHANEQUAL   reduce using rule 125 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    EQUALEQUAL      reduce using rule 125 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    NOTEQUAL        reduce using rule 125 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    AND             reduce using rule 125 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    OR              reduce using rule 125 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    SEMICOLON       reduce using rule 125 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    RPAREN          reduce using rule 125 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    RBRACKET        reduce using rule 125 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    COMMA           reduce using rule 125 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)


state 275

    (129) termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .

    PLUS            reduce using rule 129 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    MINUS           reduce using rule 129 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHAN     reduce using rule 129 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHAN        reduce using rule 129 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHANEQUAL reduce using rule 129 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHANEQUAL   reduce using rule 129 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    EQUALEQUAL      reduce using rule 129 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    NOTEQUAL        reduce using rule 129 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    AND             reduce using rule 129 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    OR              reduce using rule 129 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    SEMICOLON       reduce using rule 129 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    RPAREN          reduce using rule 129 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    RBRACKET        reduce using rule 129 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    COMMA           reduce using rule 129 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)


state 276

    (130) termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .

    PLUS            reduce using rule 130 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    MINUS           reduce using rule 130 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHAN     reduce using rule 130 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHAN        reduce using rule 130 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHANEQUAL reduce using rule 130 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHANEQUAL   reduce using rule 130 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    EQUALEQUAL      reduce using rule 130 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    NOTEQUAL        reduce using rule 130 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    AND             reduce using rule 130 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    OR              reduce using rule 130 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    SEMICOLON       reduce using rule 130 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    RPAREN          reduce using rule 130 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    RBRACKET        reduce using rule 130 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    COMMA           reduce using rule 130 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)


state 277

    (103) while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .

    ID              reduce using rule 103 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    IF              reduce using rule 103 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    PRINT           reduce using rule 103 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    RETURN          reduce using rule 103 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    WHILE           reduce using rule 103 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    DO              reduce using rule 103 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    CALL            reduce using rule 103 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    RBLOQUE         reduce using rule 103 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)


state 278

    (107) do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .

    ID              reduce using rule 107 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    IF              reduce using rule 107 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    PRINT           reduce using rule 107 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    RETURN          reduce using rule 107 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    WHILE           reduce using rule 107 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    DO              reduce using rule 107 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    CALL            reduce using rule 107 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    RBLOQUE         reduce using rule 107 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)


state 279

    (93) llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN . puntoPopFondoFalso puntoCreateGoSubQuad
    (139) puntoPopFondoFalso -> .

    SEMICOLON       reduce using rule 139 (puntoPopFondoFalso -> .)
    TIMES           reduce using rule 139 (puntoPopFondoFalso -> .)
    DIVIDE          reduce using rule 139 (puntoPopFondoFalso -> .)
    PLUS            reduce using rule 139 (puntoPopFondoFalso -> .)
    MINUS           reduce using rule 139 (puntoPopFondoFalso -> .)
    GREATERTHAN     reduce using rule 139 (puntoPopFondoFalso -> .)
    LESSTHAN        reduce using rule 139 (puntoPopFondoFalso -> .)
    GREATERTHANEQUAL reduce using rule 139 (puntoPopFondoFalso -> .)
    LESSTHANEQUAL   reduce using rule 139 (puntoPopFondoFalso -> .)
    EQUALEQUAL      reduce using rule 139 (puntoPopFondoFalso -> .)
    NOTEQUAL        reduce using rule 139 (puntoPopFondoFalso -> .)
    AND             reduce using rule 139 (puntoPopFondoFalso -> .)
    OR              reduce using rule 139 (puntoPopFondoFalso -> .)
    RPAREN          reduce using rule 139 (puntoPopFondoFalso -> .)
    RBRACKET        reduce using rule 139 (puntoPopFondoFalso -> .)
    COMMA           reduce using rule 139 (puntoPopFondoFalso -> .)

    puntoPopFondoFalso             shift and go to state 283

state 280

    (94) llamada1 -> expresion puntoVerifyArgumento . llamada2
    (96) llamada2 -> . COMMA expresion puntoVerifyArgumento llamada2
    (97) llamada2 -> . empty
    (151) empty -> .

    COMMA           shift and go to state 285
    RPAREN          reduce using rule 151 (empty -> .)

    llamada2                       shift and go to state 284
    empty                          shift and go to state 286

state 281

    (50) funciones3 -> COMMA tipo ID puntoCreateVar puntoCreateVarType puntoPushParam . funciones3
    (50) funciones3 -> . COMMA tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (51) funciones3 -> . empty
    (151) empty -> .

    COMMA           shift and go to state 161
    RPAREN          reduce using rule 151 (empty -> .)

    funciones3                     shift and go to state 287
    empty                          shift and go to state 162

state 282

    (83) condicion1 -> ELSE puntoCreateElseQuad bloque .

    ID              reduce using rule 83 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    IF              reduce using rule 83 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    PRINT           reduce using rule 83 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    RETURN          reduce using rule 83 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    WHILE           reduce using rule 83 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    DO              reduce using rule 83 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    CALL            reduce using rule 83 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    RBLOQUE         reduce using rule 83 (condicion1 -> ELSE puntoCreateElseQuad bloque .)


state 283

    (93) llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso . puntoCreateGoSubQuad
    (100) puntoCreateGoSubQuad -> .

    SEMICOLON       reduce using rule 100 (puntoCreateGoSubQuad -> .)
    TIMES           reduce using rule 100 (puntoCreateGoSubQuad -> .)
    DIVIDE          reduce using rule 100 (puntoCreateGoSubQuad -> .)
    PLUS            reduce using rule 100 (puntoCreateGoSubQuad -> .)
    MINUS           reduce using rule 100 (puntoCreateGoSubQuad -> .)
    GREATERTHAN     reduce using rule 100 (puntoCreateGoSubQuad -> .)
    LESSTHAN        reduce using rule 100 (puntoCreateGoSubQuad -> .)
    GREATERTHANEQUAL reduce using rule 100 (puntoCreateGoSubQuad -> .)
    LESSTHANEQUAL   reduce using rule 100 (puntoCreateGoSubQuad -> .)
    EQUALEQUAL      reduce using rule 100 (puntoCreateGoSubQuad -> .)
    NOTEQUAL        reduce using rule 100 (puntoCreateGoSubQuad -> .)
    AND             reduce using rule 100 (puntoCreateGoSubQuad -> .)
    OR              reduce using rule 100 (puntoCreateGoSubQuad -> .)
    RPAREN          reduce using rule 100 (puntoCreateGoSubQuad -> .)
    RBRACKET        reduce using rule 100 (puntoCreateGoSubQuad -> .)
    COMMA           reduce using rule 100 (puntoCreateGoSubQuad -> .)

    puntoCreateGoSubQuad           shift and go to state 288

state 284

    (94) llamada1 -> expresion puntoVerifyArgumento llamada2 .

    RPAREN          reduce using rule 94 (llamada1 -> expresion puntoVerifyArgumento llamada2 .)


state 285

    (96) llamada2 -> COMMA . expresion puntoVerifyArgumento llamada2
    (110) expresion -> . compare expresion2
    (114) compare -> . exp compare1
    (123) exp -> . termino puntoSumaResta exp1
    (128) termino -> . factor puntoMultDivide termino1
    (134) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (135) factor -> . tipo_cte
    (136) factor -> . MINUS tipo_cte
    (137) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (93) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 111
    MINUS           shift and go to state 113
    NOT             shift and go to state 114
    CTE_INT         shift and go to state 115
    CTE_FLOAT       shift and go to state 116
    CTE_BOOL        shift and go to state 117
    CTE_CHAR        shift and go to state 118
    ID              shift and go to state 119
    CALL            shift and go to state 96

    expresion                      shift and go to state 289
    compare                        shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    tipo_cte                       shift and go to state 112
    llamada                        shift and go to state 120

state 286

    (97) llamada2 -> empty .

    RPAREN          reduce using rule 97 (llamada2 -> empty .)


state 287

    (50) funciones3 -> COMMA tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3 .

    RPAREN          reduce using rule 50 (funciones3 -> COMMA tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3 .)


state 288

    (93) llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .

    SEMICOLON       reduce using rule 93 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    TIMES           reduce using rule 93 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    DIVIDE          reduce using rule 93 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    PLUS            reduce using rule 93 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    MINUS           reduce using rule 93 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    GREATERTHAN     reduce using rule 93 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    LESSTHAN        reduce using rule 93 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    GREATERTHANEQUAL reduce using rule 93 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    LESSTHANEQUAL   reduce using rule 93 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    EQUALEQUAL      reduce using rule 93 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    NOTEQUAL        reduce using rule 93 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    AND             reduce using rule 93 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    OR              reduce using rule 93 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    RPAREN          reduce using rule 93 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    RBRACKET        reduce using rule 93 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    COMMA           reduce using rule 93 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)


state 289

    (96) llamada2 -> COMMA expresion . puntoVerifyArgumento llamada2
    (99) puntoVerifyArgumento -> .

    COMMA           reduce using rule 99 (puntoVerifyArgumento -> .)
    RPAREN          reduce using rule 99 (puntoVerifyArgumento -> .)

    puntoVerifyArgumento           shift and go to state 290

state 290

    (96) llamada2 -> COMMA expresion puntoVerifyArgumento . llamada2
    (96) llamada2 -> . COMMA expresion puntoVerifyArgumento llamada2
    (97) llamada2 -> . empty
    (151) empty -> .

    COMMA           shift and go to state 285
    RPAREN          reduce using rule 151 (empty -> .)

    llamada2                       shift and go to state 291
    empty                          shift and go to state 286

state 291

    (96) llamada2 -> COMMA expresion puntoVerifyArgumento llamada2 .

    RPAREN          reduce using rule 96 (llamada2 -> COMMA expresion puntoVerifyArgumento llamada2 .)

