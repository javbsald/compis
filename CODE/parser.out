Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
Rule 2     programa1 -> vars programa1
Rule 3     programa1 -> empty
Rule 4     programa2 -> funciones programa2
Rule 5     programa2 -> empty
Rule 6     puntoFillMainQuad -> <empty>
Rule 7     puntoCreateProgram -> <empty>
Rule 8     puntoChangeStateLocal -> <empty>
Rule 9     puntoPrintFinal -> <empty>
Rule 10    vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
Rule 11    vars1 -> COMMA ID puntoCreateVar vars1
Rule 12    vars1 -> empty
Rule 13    vars2 -> tipo puntoCreateVarType
Rule 14    vars2 -> tipo_graph
Rule 15    vars3 -> LBRACKET CTE_INT puntoChangeDimension RBRACKET
Rule 16    vars3 -> empty
Rule 17    puntoChangeDimension -> <empty>
Rule 18    puntoCreateVarTable -> <empty>
Rule 19    puntoCreateVarTableState -> <empty>
Rule 20    puntoCreateVar -> <empty>
Rule 21    puntoCreateVarType -> <empty>
Rule 22    puntoCreateDimension -> <empty>
Rule 23    tipo -> INT puntoCurrentType
Rule 24    tipo -> FLOAT puntoCurrentType
Rule 25    tipo -> BOOL puntoCurrentType
Rule 26    tipo -> CHAR puntoCurrentType
Rule 27    puntoCurrentType -> <empty>
Rule 28    tipo_cte -> CTE_INT puntoPushInt
Rule 29    tipo_cte -> CTE_FLOAT puntoPushFloat
Rule 30    tipo_cte -> CTE_BOOL puntoPushBool
Rule 31    tipo_cte -> CTE_CHAR puntoPushChar
Rule 32    tipo_cte -> ID puntoPushID tipo_cte1
Rule 33    tipo_cte -> llamada
Rule 34    tipo_cte1 -> LBRACKET CTE_INT RBRACKET
Rule 35    tipo_cte1 -> funciones_arr
Rule 36    tipo_cte1 -> empty
Rule 37    puntoPushInt -> <empty>
Rule 38    puntoPushFloat -> <empty>
Rule 39    puntoPushBool -> <empty>
Rule 40    puntoPushChar -> <empty>
Rule 41    puntoPushID -> <empty>
Rule 42    tipo_graph -> PIECHART
Rule 43    tipo_graph -> BARGRAPH
Rule 44    tipo_graph -> PLOTLINE
Rule 45    funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
Rule 46    funciones1 -> VOID
Rule 47    funciones1 -> tipo
Rule 48    funciones2 -> tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
Rule 49    funciones2 -> empty
Rule 50    funciones3 -> COMMA tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
Rule 51    funciones3 -> empty
Rule 52    puntoChangeStateFuncion -> <empty>
Rule 53    puntoCreateParamTable -> <empty>
Rule 54    puntoPushParam -> <empty>
Rule 55    puntoCreateParamCount -> <empty>
Rule 56    puntoFinalFuncQuad -> <empty>
Rule 57    main -> VOID MAIN LPAREN RPAREN bloque_modular
Rule 58    bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE
Rule 59    bloque_modular1 -> vars bloque_modular1
Rule 60    bloque_modular1 -> empty
Rule 61    bloque_modular2 -> estatuto bloque_modular2
Rule 62    bloque_modular2 -> empty
Rule 63    bloque -> LBLOQUE bloque1 RBLOQUE
Rule 64    bloque1 -> estatuto bloque1
Rule 65    bloque1 -> empty
Rule 66    estatuto -> asignacion
Rule 67    estatuto -> condicion
Rule 68    estatuto -> escritura
Rule 69    estatuto -> return
Rule 70    estatuto -> while
Rule 71    estatuto -> do_while
Rule 72    estatuto -> llamada SEMICOLON
Rule 73    asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
Rule 74    asignacion1 -> LBRACKET expresion RBRACKET
Rule 75    asignacion1 -> empty
Rule 76    asignacion2 -> expresion puntoCreateAsignacionQuad
Rule 77    asignacion2 -> leida
Rule 78    puntoSaveIDAsignacion -> <empty>
Rule 79    puntoCreateAsignacionQuad -> <empty>
Rule 80    leida -> INPUT LPAREN RPAREN
Rule 81    condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
Rule 82    condicion1 -> ELSE puntoCreateElseQuad bloque
Rule 83    condicion1 -> empty
Rule 84    puntoCreateIfQuad -> <empty>
Rule 85    puntoFillIfQuad -> <empty>
Rule 86    puntoCreateElseQuad -> <empty>
Rule 87    escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON
Rule 88    escritura1 -> expresion puntoCreatePrintQuad
Rule 89    escritura1 -> CTE_STRING puntoCreatePrintConstantQuad
Rule 90    puntoCreatePrintQuad -> <empty>
Rule 91    puntoCreatePrintConstantQuad -> <empty>
Rule 92    llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad
Rule 93    llamada1 -> expresion puntoVerifyArgumento llamada2
Rule 94    llamada1 -> empty
Rule 95    llamada2 -> COMMA expresion puntoVerifyArgumento llamada2
Rule 96    llamada2 -> empty
Rule 97    puntoVerifyLlamada -> <empty>
Rule 98    puntoVerifyArgumento -> <empty>
Rule 99    puntoCreateGoSubQuad -> <empty>
Rule 100   return -> RETURN expresion SEMICOLON
Rule 101   while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
Rule 102   puntoPushSaltoWhile -> <empty>
Rule 103   puntoCreateWhileQuad -> <empty>
Rule 104   puntoEndWhileQuad -> <empty>
Rule 105   do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
Rule 106   puntoPushSaltoDoWhile -> <empty>
Rule 107   puntoCreateDoWhileQuad -> <empty>
Rule 108   expresion -> compare expresion2
Rule 109   expresion2 -> AND compare
Rule 110   expresion2 -> OR compare
Rule 111   expresion2 -> empty
Rule 112   compare -> exp compare1
Rule 113   compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional
Rule 114   compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional
Rule 115   compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 116   compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 117   compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 118   compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 119   compare1 -> empty
Rule 120   puntoOperacionRelacional -> <empty>
Rule 121   exp -> termino puntoSumaResta exp1
Rule 122   exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1
Rule 123   exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1
Rule 124   exp1 -> empty
Rule 125   puntoSumaResta -> <empty>
Rule 126   termino -> factor puntoMultDivide termino1
Rule 127   termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1
Rule 128   termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1
Rule 129   termino1 -> empty
Rule 130   puntoMultDivide -> <empty>
Rule 131   puntoPushOperador -> <empty>
Rule 132   factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
Rule 133   factor -> tipo_cte
Rule 134   factor -> MINUS tipo_cte
Rule 135   factor -> NOT tipo_cte
Rule 136   puntoPushFondoFalso -> <empty>
Rule 137   puntoPopFondoFalso -> <empty>
Rule 138   funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN
Rule 139   funciones_arr1 -> MAX
Rule 140   funciones_arr1 -> MIN
Rule 141   funciones_arr1 -> RANGE
Rule 142   funciones_arr1 -> MEDIAN
Rule 143   funciones_arr1 -> AVERAGE
Rule 144   funciones_arr1 -> IQRANGE
Rule 145   funciones_arr1 -> STDEV
Rule 146   funciones_arr1 -> VARIANCE
Rule 147   funciones_arr1 -> MODIFY
Rule 148   funciones_arr1 -> DRAW
Rule 149   empty -> <empty>

Terminals, with rules where they appear

AND                  : 109
AS                   : 10
AVERAGE              : 143
BARGRAPH             : 43
BOOL                 : 25
CALL                 : 92
CHAR                 : 26
COMMA                : 11 50 95
CTE_BOOL             : 30
CTE_CHAR             : 31
CTE_FLOAT            : 29
CTE_INT              : 15 28 34
CTE_STRING           : 89
DIVIDE               : 128
DO                   : 105
DRAW                 : 148
ELSE                 : 82
EQUALEQUAL           : 117
EQUALS               : 73
FLOAT                : 24
FUNC                 : 45
GREATERTHAN          : 113
GREATERTHANEQUAL     : 115
ID                   : 1 10 11 32 45 48 50 73 92
IF                   : 81
INPUT                : 80
INT                  : 23
IQRANGE              : 144
LBLOQUE              : 58 63
LBRACKET             : 15 34 74
LESSTHAN             : 114
LESSTHANEQUAL        : 116
LPAREN               : 45 57 80 81 87 92 101 105 132 138
MAIN                 : 57
MAX                  : 139
MEDIAN               : 142
MIN                  : 140
MINUS                : 123 134
MODIFY               : 147
NOT                  : 135
NOTEQUAL             : 118
OR                   : 110
PIECHART             : 42
PLOTLINE             : 44
PLUS                 : 122
PRINT                : 87
PROGRAM              : 1
PUNTO                : 92 138
RANGE                : 141
RBLOQUE              : 58 63
RBRACKET             : 15 34 74
RETURN               : 100
RPAREN               : 45 57 80 81 87 92 101 105 132 138
SEMICOLON            : 1 10 72 73 87 100
STDEV                : 145
TIMES                : 127
VAR                  : 10
VARIANCE             : 146
VOID                 : 46 57
WHILE                : 101 105
error                : 

Nonterminals, with rules where they appear

asignacion           : 66
asignacion1          : 73
asignacion2          : 73
bloque               : 81 82 101 105
bloque1              : 63 64
bloque_modular       : 45 57
bloque_modular1      : 58 59
bloque_modular2      : 58 61
compare              : 108 109 110
compare1             : 112
condicion            : 67
condicion1           : 81
do_while             : 71
empty                : 3 5 12 16 36 49 51 60 62 65 75 83 94 96 111 119 124 129
escritura            : 68
escritura1           : 87
estatuto             : 61 64
exp                  : 112 113 114 115 116 117 118
exp1                 : 121 122 123
expresion            : 74 76 81 88 93 95 100 101 105 132
expresion2           : 108
factor               : 126 127 128
funciones            : 4
funciones1           : 45
funciones2           : 45
funciones3           : 48 50
funciones_arr        : 35
funciones_arr1       : 138
leida                : 77
llamada              : 33 72
llamada1             : 92
llamada2             : 93 95
main                 : 1
programa             : 0
programa1            : 1 2
programa2            : 1 4
puntoChangeDimension : 15
puntoChangeStateFuncion : 45
puntoChangeStateLocal : 1
puntoCreateAsignacionQuad : 76
puntoCreateDimension : 10
puntoCreateDoWhileQuad : 105
puntoCreateElseQuad  : 82
puntoCreateGoSubQuad : 92
puntoCreateIfQuad    : 81
puntoCreateParamCount : 45
puntoCreateParamTable : 45
puntoCreatePrintConstantQuad : 89
puntoCreatePrintQuad : 88
puntoCreateProgram   : 1
puntoCreateVar       : 10 11 48 50
puntoCreateVarTable  : 1
puntoCreateVarTableState : 1 1 45
puntoCreateVarType   : 13 48 50
puntoCreateWhileQuad : 101
puntoCurrentType     : 23 24 25 26
puntoEndWhileQuad    : 101
puntoFillIfQuad      : 81
puntoFillMainQuad    : 1
puntoFinalFuncQuad   : 45
puntoMultDivide      : 126 127 128
puntoOperacionRelacional : 113 114 115 116 117 118
puntoPopFondoFalso   : 132
puntoPrintFinal      : 1
puntoPushBool        : 30
puntoPushChar        : 31
puntoPushFloat       : 29
puntoPushFondoFalso  : 132
puntoPushID          : 32
puntoPushInt         : 28
puntoPushOperador    : 113 114 115 116 117 118 122 123 127 128
puntoPushParam       : 48 50
puntoPushSaltoDoWhile : 105
puntoPushSaltoWhile  : 101
puntoSaveIDAsignacion : 73
puntoSumaResta       : 121 122 123
puntoVerifyArgumento : 93 95
puntoVerifyLlamada   : 92
return               : 69
termino              : 121 122 123
termino1             : 126 127 128
tipo                 : 13 47 48 50
tipo_cte             : 133 134 135
tipo_cte1            : 32
tipo_graph           : 14
vars                 : 2 59
vars1                : 10 11
vars2                : 10
vars3                : 10
while                : 70

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (7) puntoCreateProgram -> .

    SEMICOLON       reduce using rule 7 (puntoCreateProgram -> .)

    puntoCreateProgram             shift and go to state 4

state 4

    (1) programa -> PROGRAM ID puntoCreateProgram . SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON . puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (18) puntoCreateVarTable -> .

    VAR             reduce using rule 18 (puntoCreateVarTable -> .)
    FUNC            reduce using rule 18 (puntoCreateVarTable -> .)
    VOID            reduce using rule 18 (puntoCreateVarTable -> .)

    puntoCreateVarTable            shift and go to state 6

state 6

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable . puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (19) puntoCreateVarTableState -> .

    VAR             reduce using rule 19 (puntoCreateVarTableState -> .)
    FUNC            reduce using rule 19 (puntoCreateVarTableState -> .)
    VOID            reduce using rule 19 (puntoCreateVarTableState -> .)

    puntoCreateVarTableState       shift and go to state 7

state 7

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState . programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (2) programa1 -> . vars programa1
    (3) programa1 -> . empty
    (10) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (149) empty -> .

    VAR             shift and go to state 11
    FUNC            reduce using rule 149 (empty -> .)
    VOID            reduce using rule 149 (empty -> .)

    programa1                      shift and go to state 8
    vars                           shift and go to state 9
    empty                          shift and go to state 10

state 8

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 . programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (4) programa2 -> . funciones programa2
    (5) programa2 -> . empty
    (45) funciones -> . FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (149) empty -> .

    FUNC            shift and go to state 15
    VOID            reduce using rule 149 (empty -> .)

    programa2                      shift and go to state 12
    funciones                      shift and go to state 13
    empty                          shift and go to state 14

state 9

    (2) programa1 -> vars . programa1
    (2) programa1 -> . vars programa1
    (3) programa1 -> . empty
    (10) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (149) empty -> .

    VAR             shift and go to state 11
    FUNC            reduce using rule 149 (empty -> .)
    VOID            reduce using rule 149 (empty -> .)

    vars                           shift and go to state 9
    programa1                      shift and go to state 16
    empty                          shift and go to state 10

state 10

    (3) programa1 -> empty .

    FUNC            reduce using rule 3 (programa1 -> empty .)
    VOID            reduce using rule 3 (programa1 -> empty .)


state 11

    (10) vars -> VAR . ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON

    ID              shift and go to state 17


state 12

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 . puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (8) puntoChangeStateLocal -> .

    VOID            reduce using rule 8 (puntoChangeStateLocal -> .)

    puntoChangeStateLocal          shift and go to state 18

state 13

    (4) programa2 -> funciones . programa2
    (4) programa2 -> . funciones programa2
    (5) programa2 -> . empty
    (45) funciones -> . FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (149) empty -> .

    FUNC            shift and go to state 15
    VOID            reduce using rule 149 (empty -> .)

    funciones                      shift and go to state 13
    programa2                      shift and go to state 19
    empty                          shift and go to state 14

state 14

    (5) programa2 -> empty .

    VOID            reduce using rule 5 (programa2 -> empty .)


state 15

    (45) funciones -> FUNC . funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (46) funciones1 -> . VOID
    (47) funciones1 -> . tipo
    (23) tipo -> . INT puntoCurrentType
    (24) tipo -> . FLOAT puntoCurrentType
    (25) tipo -> . BOOL puntoCurrentType
    (26) tipo -> . CHAR puntoCurrentType

    VOID            shift and go to state 21
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 25
    CHAR            shift and go to state 26

    funciones1                     shift and go to state 20
    tipo                           shift and go to state 22

state 16

    (2) programa1 -> vars programa1 .

    FUNC            reduce using rule 2 (programa1 -> vars programa1 .)
    VOID            reduce using rule 2 (programa1 -> vars programa1 .)


state 17

    (10) vars -> VAR ID . puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (20) puntoCreateVar -> .

    COMMA           reduce using rule 20 (puntoCreateVar -> .)
    AS              reduce using rule 20 (puntoCreateVar -> .)

    puntoCreateVar                 shift and go to state 27

state 18

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal . puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (19) puntoCreateVarTableState -> .

    VOID            reduce using rule 19 (puntoCreateVarTableState -> .)

    puntoCreateVarTableState       shift and go to state 28

state 19

    (4) programa2 -> funciones programa2 .

    VOID            reduce using rule 4 (programa2 -> funciones programa2 .)


state 20

    (45) funciones -> FUNC funciones1 . ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad

    ID              shift and go to state 29


state 21

    (46) funciones1 -> VOID .

    ID              reduce using rule 46 (funciones1 -> VOID .)


state 22

    (47) funciones1 -> tipo .

    ID              reduce using rule 47 (funciones1 -> tipo .)


state 23

    (23) tipo -> INT . puntoCurrentType
    (27) puntoCurrentType -> .

    ID              reduce using rule 27 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 27 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 27 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 30

state 24

    (24) tipo -> FLOAT . puntoCurrentType
    (27) puntoCurrentType -> .

    ID              reduce using rule 27 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 27 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 27 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 31

state 25

    (25) tipo -> BOOL . puntoCurrentType
    (27) puntoCurrentType -> .

    ID              reduce using rule 27 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 27 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 27 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 32

state 26

    (26) tipo -> CHAR . puntoCurrentType
    (27) puntoCurrentType -> .

    ID              reduce using rule 27 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 27 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 27 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 33

state 27

    (10) vars -> VAR ID puntoCreateVar . vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (11) vars1 -> . COMMA ID puntoCreateVar vars1
    (12) vars1 -> . empty
    (149) empty -> .

    COMMA           shift and go to state 35
    AS              reduce using rule 149 (empty -> .)

    vars1                          shift and go to state 34
    empty                          shift and go to state 36

state 28

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState . puntoFillMainQuad main puntoPrintFinal
    (6) puntoFillMainQuad -> .

    VOID            reduce using rule 6 (puntoFillMainQuad -> .)

    puntoFillMainQuad              shift and go to state 37

state 29

    (45) funciones -> FUNC funciones1 ID . puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (52) puntoChangeStateFuncion -> .

    LPAREN          reduce using rule 52 (puntoChangeStateFuncion -> .)

    puntoChangeStateFuncion        shift and go to state 38

state 30

    (23) tipo -> INT puntoCurrentType .

    ID              reduce using rule 23 (tipo -> INT puntoCurrentType .)
    LBRACKET        reduce using rule 23 (tipo -> INT puntoCurrentType .)
    SEMICOLON       reduce using rule 23 (tipo -> INT puntoCurrentType .)


state 31

    (24) tipo -> FLOAT puntoCurrentType .

    ID              reduce using rule 24 (tipo -> FLOAT puntoCurrentType .)
    LBRACKET        reduce using rule 24 (tipo -> FLOAT puntoCurrentType .)
    SEMICOLON       reduce using rule 24 (tipo -> FLOAT puntoCurrentType .)


state 32

    (25) tipo -> BOOL puntoCurrentType .

    ID              reduce using rule 25 (tipo -> BOOL puntoCurrentType .)
    LBRACKET        reduce using rule 25 (tipo -> BOOL puntoCurrentType .)
    SEMICOLON       reduce using rule 25 (tipo -> BOOL puntoCurrentType .)


state 33

    (26) tipo -> CHAR puntoCurrentType .

    ID              reduce using rule 26 (tipo -> CHAR puntoCurrentType .)
    LBRACKET        reduce using rule 26 (tipo -> CHAR puntoCurrentType .)
    SEMICOLON       reduce using rule 26 (tipo -> CHAR puntoCurrentType .)


state 34

    (10) vars -> VAR ID puntoCreateVar vars1 . AS vars2 vars3 puntoCreateDimension SEMICOLON

    AS              shift and go to state 39


state 35

    (11) vars1 -> COMMA . ID puntoCreateVar vars1

    ID              shift and go to state 40


state 36

    (12) vars1 -> empty .

    AS              reduce using rule 12 (vars1 -> empty .)


state 37

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad . main puntoPrintFinal
    (57) main -> . VOID MAIN LPAREN RPAREN bloque_modular

    VOID            shift and go to state 42

    main                           shift and go to state 41

state 38

    (45) funciones -> FUNC funciones1 ID puntoChangeStateFuncion . puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (19) puntoCreateVarTableState -> .

    LPAREN          reduce using rule 19 (puntoCreateVarTableState -> .)

    puntoCreateVarTableState       shift and go to state 43

state 39

    (10) vars -> VAR ID puntoCreateVar vars1 AS . vars2 vars3 puntoCreateDimension SEMICOLON
    (13) vars2 -> . tipo puntoCreateVarType
    (14) vars2 -> . tipo_graph
    (23) tipo -> . INT puntoCurrentType
    (24) tipo -> . FLOAT puntoCurrentType
    (25) tipo -> . BOOL puntoCurrentType
    (26) tipo -> . CHAR puntoCurrentType
    (42) tipo_graph -> . PIECHART
    (43) tipo_graph -> . BARGRAPH
    (44) tipo_graph -> . PLOTLINE

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 25
    CHAR            shift and go to state 26
    PIECHART        shift and go to state 47
    BARGRAPH        shift and go to state 48
    PLOTLINE        shift and go to state 49

    vars2                          shift and go to state 44
    tipo                           shift and go to state 45
    tipo_graph                     shift and go to state 46

state 40

    (11) vars1 -> COMMA ID . puntoCreateVar vars1
    (20) puntoCreateVar -> .

    COMMA           reduce using rule 20 (puntoCreateVar -> .)
    AS              reduce using rule 20 (puntoCreateVar -> .)

    puntoCreateVar                 shift and go to state 50

state 41

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main . puntoPrintFinal
    (9) puntoPrintFinal -> .

    $end            reduce using rule 9 (puntoPrintFinal -> .)

    puntoPrintFinal                shift and go to state 51

state 42

    (57) main -> VOID . MAIN LPAREN RPAREN bloque_modular

    MAIN            shift and go to state 52


state 43

    (45) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState . LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad

    LPAREN          shift and go to state 53


state 44

    (10) vars -> VAR ID puntoCreateVar vars1 AS vars2 . vars3 puntoCreateDimension SEMICOLON
    (15) vars3 -> . LBRACKET CTE_INT puntoChangeDimension RBRACKET
    (16) vars3 -> . empty
    (149) empty -> .

    LBRACKET        shift and go to state 55
    SEMICOLON       reduce using rule 149 (empty -> .)

    vars3                          shift and go to state 54
    empty                          shift and go to state 56

state 45

    (13) vars2 -> tipo . puntoCreateVarType
    (21) puntoCreateVarType -> .

    LBRACKET        reduce using rule 21 (puntoCreateVarType -> .)
    SEMICOLON       reduce using rule 21 (puntoCreateVarType -> .)

    puntoCreateVarType             shift and go to state 57

state 46

    (14) vars2 -> tipo_graph .

    LBRACKET        reduce using rule 14 (vars2 -> tipo_graph .)
    SEMICOLON       reduce using rule 14 (vars2 -> tipo_graph .)


state 47

    (42) tipo_graph -> PIECHART .

    LBRACKET        reduce using rule 42 (tipo_graph -> PIECHART .)
    SEMICOLON       reduce using rule 42 (tipo_graph -> PIECHART .)


state 48

    (43) tipo_graph -> BARGRAPH .

    LBRACKET        reduce using rule 43 (tipo_graph -> BARGRAPH .)
    SEMICOLON       reduce using rule 43 (tipo_graph -> BARGRAPH .)


state 49

    (44) tipo_graph -> PLOTLINE .

    LBRACKET        reduce using rule 44 (tipo_graph -> PLOTLINE .)
    SEMICOLON       reduce using rule 44 (tipo_graph -> PLOTLINE .)


state 50

    (11) vars1 -> COMMA ID puntoCreateVar . vars1
    (11) vars1 -> . COMMA ID puntoCreateVar vars1
    (12) vars1 -> . empty
    (149) empty -> .

    COMMA           shift and go to state 35
    AS              reduce using rule 149 (empty -> .)

    vars1                          shift and go to state 58
    empty                          shift and go to state 36

state 51

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal .

    $end            reduce using rule 1 (programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal .)


state 52

    (57) main -> VOID MAIN . LPAREN RPAREN bloque_modular

    LPAREN          shift and go to state 59


state 53

    (45) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN . puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (53) puntoCreateParamTable -> .

    INT             reduce using rule 53 (puntoCreateParamTable -> .)
    FLOAT           reduce using rule 53 (puntoCreateParamTable -> .)
    BOOL            reduce using rule 53 (puntoCreateParamTable -> .)
    CHAR            reduce using rule 53 (puntoCreateParamTable -> .)
    RPAREN          reduce using rule 53 (puntoCreateParamTable -> .)

    puntoCreateParamTable          shift and go to state 60

state 54

    (10) vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 . puntoCreateDimension SEMICOLON
    (22) puntoCreateDimension -> .

    SEMICOLON       reduce using rule 22 (puntoCreateDimension -> .)

    puntoCreateDimension           shift and go to state 61

state 55

    (15) vars3 -> LBRACKET . CTE_INT puntoChangeDimension RBRACKET

    CTE_INT         shift and go to state 62


state 56

    (16) vars3 -> empty .

    SEMICOLON       reduce using rule 16 (vars3 -> empty .)


state 57

    (13) vars2 -> tipo puntoCreateVarType .

    LBRACKET        reduce using rule 13 (vars2 -> tipo puntoCreateVarType .)
    SEMICOLON       reduce using rule 13 (vars2 -> tipo puntoCreateVarType .)


state 58

    (11) vars1 -> COMMA ID puntoCreateVar vars1 .

    AS              reduce using rule 11 (vars1 -> COMMA ID puntoCreateVar vars1 .)


state 59

    (57) main -> VOID MAIN LPAREN . RPAREN bloque_modular

    RPAREN          shift and go to state 63


state 60

    (45) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable . funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (48) funciones2 -> . tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (49) funciones2 -> . empty
    (23) tipo -> . INT puntoCurrentType
    (24) tipo -> . FLOAT puntoCurrentType
    (25) tipo -> . BOOL puntoCurrentType
    (26) tipo -> . CHAR puntoCurrentType
    (149) empty -> .

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 25
    CHAR            shift and go to state 26
    RPAREN          reduce using rule 149 (empty -> .)

    funciones2                     shift and go to state 64
    tipo                           shift and go to state 65
    empty                          shift and go to state 66

state 61

    (10) vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension . SEMICOLON

    SEMICOLON       shift and go to state 67


state 62

    (15) vars3 -> LBRACKET CTE_INT . puntoChangeDimension RBRACKET
    (17) puntoChangeDimension -> .

    RBRACKET        reduce using rule 17 (puntoChangeDimension -> .)

    puntoChangeDimension           shift and go to state 68

state 63

    (57) main -> VOID MAIN LPAREN RPAREN . bloque_modular
    (58) bloque_modular -> . LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE

    LBLOQUE         shift and go to state 70

    bloque_modular                 shift and go to state 69

state 64

    (45) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 . RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad

    RPAREN          shift and go to state 71


state 65

    (48) funciones2 -> tipo . ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3

    ID              shift and go to state 72


state 66

    (49) funciones2 -> empty .

    RPAREN          reduce using rule 49 (funciones2 -> empty .)


state 67

    (10) vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .

    VAR             reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    FUNC            reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    VOID            reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    ID              reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    IF              reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    PRINT           reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    RETURN          reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    WHILE           reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    DO              reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    CALL            reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    RBLOQUE         reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)


state 68

    (15) vars3 -> LBRACKET CTE_INT puntoChangeDimension . RBRACKET

    RBRACKET        shift and go to state 73


state 69

    (57) main -> VOID MAIN LPAREN RPAREN bloque_modular .

    $end            reduce using rule 57 (main -> VOID MAIN LPAREN RPAREN bloque_modular .)


state 70

    (58) bloque_modular -> LBLOQUE . bloque_modular1 bloque_modular2 RBLOQUE
    (59) bloque_modular1 -> . vars bloque_modular1
    (60) bloque_modular1 -> . empty
    (10) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (149) empty -> .

    VAR             shift and go to state 11
    ID              reduce using rule 149 (empty -> .)
    IF              reduce using rule 149 (empty -> .)
    PRINT           reduce using rule 149 (empty -> .)
    RETURN          reduce using rule 149 (empty -> .)
    WHILE           reduce using rule 149 (empty -> .)
    DO              reduce using rule 149 (empty -> .)
    CALL            reduce using rule 149 (empty -> .)
    RBLOQUE         reduce using rule 149 (empty -> .)

    bloque_modular1                shift and go to state 74
    vars                           shift and go to state 75
    empty                          shift and go to state 76

state 71

    (45) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN . puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (55) puntoCreateParamCount -> .

    LBLOQUE         reduce using rule 55 (puntoCreateParamCount -> .)

    puntoCreateParamCount          shift and go to state 77

state 72

    (48) funciones2 -> tipo ID . puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (20) puntoCreateVar -> .

    COMMA           reduce using rule 20 (puntoCreateVar -> .)
    RPAREN          reduce using rule 20 (puntoCreateVar -> .)

    puntoCreateVar                 shift and go to state 78

state 73

    (15) vars3 -> LBRACKET CTE_INT puntoChangeDimension RBRACKET .

    SEMICOLON       reduce using rule 15 (vars3 -> LBRACKET CTE_INT puntoChangeDimension RBRACKET .)


state 74

    (58) bloque_modular -> LBLOQUE bloque_modular1 . bloque_modular2 RBLOQUE
    (61) bloque_modular2 -> . estatuto bloque_modular2
    (62) bloque_modular2 -> . empty
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . return
    (70) estatuto -> . while
    (71) estatuto -> . do_while
    (72) estatuto -> . llamada SEMICOLON
    (149) empty -> .
    (73) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (81) condicion -> . IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (87) escritura -> . PRINT LPAREN escritura1 RPAREN SEMICOLON
    (100) return -> . RETURN expresion SEMICOLON
    (101) while -> . WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (105) do_while -> . DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    RBLOQUE         reduce using rule 149 (empty -> .)
    ID              shift and go to state 89
    IF              shift and go to state 90
    PRINT           shift and go to state 91
    RETURN          shift and go to state 92
    WHILE           shift and go to state 93
    DO              shift and go to state 94
    CALL            shift and go to state 95

    bloque_modular2                shift and go to state 79
    estatuto                       shift and go to state 80
    empty                          shift and go to state 81
    asignacion                     shift and go to state 82
    condicion                      shift and go to state 83
    escritura                      shift and go to state 84
    return                         shift and go to state 85
    while                          shift and go to state 86
    do_while                       shift and go to state 87
    llamada                        shift and go to state 88

state 75

    (59) bloque_modular1 -> vars . bloque_modular1
    (59) bloque_modular1 -> . vars bloque_modular1
    (60) bloque_modular1 -> . empty
    (10) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (149) empty -> .

    VAR             shift and go to state 11
    ID              reduce using rule 149 (empty -> .)
    IF              reduce using rule 149 (empty -> .)
    PRINT           reduce using rule 149 (empty -> .)
    RETURN          reduce using rule 149 (empty -> .)
    WHILE           reduce using rule 149 (empty -> .)
    DO              reduce using rule 149 (empty -> .)
    CALL            reduce using rule 149 (empty -> .)
    RBLOQUE         reduce using rule 149 (empty -> .)

    vars                           shift and go to state 75
    bloque_modular1                shift and go to state 96
    empty                          shift and go to state 76

state 76

    (60) bloque_modular1 -> empty .

    ID              reduce using rule 60 (bloque_modular1 -> empty .)
    IF              reduce using rule 60 (bloque_modular1 -> empty .)
    PRINT           reduce using rule 60 (bloque_modular1 -> empty .)
    RETURN          reduce using rule 60 (bloque_modular1 -> empty .)
    WHILE           reduce using rule 60 (bloque_modular1 -> empty .)
    DO              reduce using rule 60 (bloque_modular1 -> empty .)
    CALL            reduce using rule 60 (bloque_modular1 -> empty .)
    RBLOQUE         reduce using rule 60 (bloque_modular1 -> empty .)


state 77

    (45) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount . bloque_modular puntoFinalFuncQuad
    (58) bloque_modular -> . LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE

    LBLOQUE         shift and go to state 70

    bloque_modular                 shift and go to state 97

state 78

    (48) funciones2 -> tipo ID puntoCreateVar . puntoCreateVarType puntoPushParam funciones3
    (21) puntoCreateVarType -> .

    COMMA           reduce using rule 21 (puntoCreateVarType -> .)
    RPAREN          reduce using rule 21 (puntoCreateVarType -> .)

    puntoCreateVarType             shift and go to state 98

state 79

    (58) bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 . RBLOQUE

    RBLOQUE         shift and go to state 99


state 80

    (61) bloque_modular2 -> estatuto . bloque_modular2
    (61) bloque_modular2 -> . estatuto bloque_modular2
    (62) bloque_modular2 -> . empty
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . return
    (70) estatuto -> . while
    (71) estatuto -> . do_while
    (72) estatuto -> . llamada SEMICOLON
    (149) empty -> .
    (73) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (81) condicion -> . IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (87) escritura -> . PRINT LPAREN escritura1 RPAREN SEMICOLON
    (100) return -> . RETURN expresion SEMICOLON
    (101) while -> . WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (105) do_while -> . DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    RBLOQUE         reduce using rule 149 (empty -> .)
    ID              shift and go to state 89
    IF              shift and go to state 90
    PRINT           shift and go to state 91
    RETURN          shift and go to state 92
    WHILE           shift and go to state 93
    DO              shift and go to state 94
    CALL            shift and go to state 95

    estatuto                       shift and go to state 80
    bloque_modular2                shift and go to state 100
    empty                          shift and go to state 81
    asignacion                     shift and go to state 82
    condicion                      shift and go to state 83
    escritura                      shift and go to state 84
    return                         shift and go to state 85
    while                          shift and go to state 86
    do_while                       shift and go to state 87
    llamada                        shift and go to state 88

state 81

    (62) bloque_modular2 -> empty .

    RBLOQUE         reduce using rule 62 (bloque_modular2 -> empty .)


state 82

    (66) estatuto -> asignacion .

    ID              reduce using rule 66 (estatuto -> asignacion .)
    IF              reduce using rule 66 (estatuto -> asignacion .)
    PRINT           reduce using rule 66 (estatuto -> asignacion .)
    RETURN          reduce using rule 66 (estatuto -> asignacion .)
    WHILE           reduce using rule 66 (estatuto -> asignacion .)
    DO              reduce using rule 66 (estatuto -> asignacion .)
    CALL            reduce using rule 66 (estatuto -> asignacion .)
    RBLOQUE         reduce using rule 66 (estatuto -> asignacion .)


state 83

    (67) estatuto -> condicion .

    ID              reduce using rule 67 (estatuto -> condicion .)
    IF              reduce using rule 67 (estatuto -> condicion .)
    PRINT           reduce using rule 67 (estatuto -> condicion .)
    RETURN          reduce using rule 67 (estatuto -> condicion .)
    WHILE           reduce using rule 67 (estatuto -> condicion .)
    DO              reduce using rule 67 (estatuto -> condicion .)
    CALL            reduce using rule 67 (estatuto -> condicion .)
    RBLOQUE         reduce using rule 67 (estatuto -> condicion .)


state 84

    (68) estatuto -> escritura .

    ID              reduce using rule 68 (estatuto -> escritura .)
    IF              reduce using rule 68 (estatuto -> escritura .)
    PRINT           reduce using rule 68 (estatuto -> escritura .)
    RETURN          reduce using rule 68 (estatuto -> escritura .)
    WHILE           reduce using rule 68 (estatuto -> escritura .)
    DO              reduce using rule 68 (estatuto -> escritura .)
    CALL            reduce using rule 68 (estatuto -> escritura .)
    RBLOQUE         reduce using rule 68 (estatuto -> escritura .)


state 85

    (69) estatuto -> return .

    ID              reduce using rule 69 (estatuto -> return .)
    IF              reduce using rule 69 (estatuto -> return .)
    PRINT           reduce using rule 69 (estatuto -> return .)
    RETURN          reduce using rule 69 (estatuto -> return .)
    WHILE           reduce using rule 69 (estatuto -> return .)
    DO              reduce using rule 69 (estatuto -> return .)
    CALL            reduce using rule 69 (estatuto -> return .)
    RBLOQUE         reduce using rule 69 (estatuto -> return .)


state 86

    (70) estatuto -> while .

    ID              reduce using rule 70 (estatuto -> while .)
    IF              reduce using rule 70 (estatuto -> while .)
    PRINT           reduce using rule 70 (estatuto -> while .)
    RETURN          reduce using rule 70 (estatuto -> while .)
    WHILE           reduce using rule 70 (estatuto -> while .)
    DO              reduce using rule 70 (estatuto -> while .)
    CALL            reduce using rule 70 (estatuto -> while .)
    RBLOQUE         reduce using rule 70 (estatuto -> while .)


state 87

    (71) estatuto -> do_while .

    ID              reduce using rule 71 (estatuto -> do_while .)
    IF              reduce using rule 71 (estatuto -> do_while .)
    PRINT           reduce using rule 71 (estatuto -> do_while .)
    RETURN          reduce using rule 71 (estatuto -> do_while .)
    WHILE           reduce using rule 71 (estatuto -> do_while .)
    DO              reduce using rule 71 (estatuto -> do_while .)
    CALL            reduce using rule 71 (estatuto -> do_while .)
    RBLOQUE         reduce using rule 71 (estatuto -> do_while .)


state 88

    (72) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 101


state 89

    (73) asignacion -> ID . puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (78) puntoSaveIDAsignacion -> .

    LBRACKET        reduce using rule 78 (puntoSaveIDAsignacion -> .)
    EQUALS          reduce using rule 78 (puntoSaveIDAsignacion -> .)

    puntoSaveIDAsignacion          shift and go to state 102

state 90

    (81) condicion -> IF . LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad

    LPAREN          shift and go to state 103


state 91

    (87) escritura -> PRINT . LPAREN escritura1 RPAREN SEMICOLON

    LPAREN          shift and go to state 104


state 92

    (100) return -> RETURN . expresion SEMICOLON
    (108) expresion -> . compare expresion2
    (112) compare -> . exp compare1
    (121) exp -> . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    expresion                      shift and go to state 105
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 93

    (101) while -> WHILE . puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (102) puntoPushSaltoWhile -> .

    LPAREN          reduce using rule 102 (puntoPushSaltoWhile -> .)

    puntoPushSaltoWhile            shift and go to state 120

state 94

    (105) do_while -> DO . puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (106) puntoPushSaltoDoWhile -> .

    LBLOQUE         reduce using rule 106 (puntoPushSaltoDoWhile -> .)

    puntoPushSaltoDoWhile          shift and go to state 121

state 95

    (92) llamada -> CALL . PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    PUNTO           shift and go to state 122


state 96

    (59) bloque_modular1 -> vars bloque_modular1 .

    ID              reduce using rule 59 (bloque_modular1 -> vars bloque_modular1 .)
    IF              reduce using rule 59 (bloque_modular1 -> vars bloque_modular1 .)
    PRINT           reduce using rule 59 (bloque_modular1 -> vars bloque_modular1 .)
    RETURN          reduce using rule 59 (bloque_modular1 -> vars bloque_modular1 .)
    WHILE           reduce using rule 59 (bloque_modular1 -> vars bloque_modular1 .)
    DO              reduce using rule 59 (bloque_modular1 -> vars bloque_modular1 .)
    CALL            reduce using rule 59 (bloque_modular1 -> vars bloque_modular1 .)
    RBLOQUE         reduce using rule 59 (bloque_modular1 -> vars bloque_modular1 .)


state 97

    (45) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular . puntoFinalFuncQuad
    (56) puntoFinalFuncQuad -> .

    FUNC            reduce using rule 56 (puntoFinalFuncQuad -> .)
    VOID            reduce using rule 56 (puntoFinalFuncQuad -> .)

    puntoFinalFuncQuad             shift and go to state 123

state 98

    (48) funciones2 -> tipo ID puntoCreateVar puntoCreateVarType . puntoPushParam funciones3
    (54) puntoPushParam -> .

    COMMA           reduce using rule 54 (puntoPushParam -> .)
    RPAREN          reduce using rule 54 (puntoPushParam -> .)

    puntoPushParam                 shift and go to state 124

state 99

    (58) bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .

    $end            reduce using rule 58 (bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .)
    FUNC            reduce using rule 58 (bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .)
    VOID            reduce using rule 58 (bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .)


state 100

    (61) bloque_modular2 -> estatuto bloque_modular2 .

    RBLOQUE         reduce using rule 61 (bloque_modular2 -> estatuto bloque_modular2 .)


state 101

    (72) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 72 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 72 (estatuto -> llamada SEMICOLON .)
    PRINT           reduce using rule 72 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 72 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 72 (estatuto -> llamada SEMICOLON .)
    DO              reduce using rule 72 (estatuto -> llamada SEMICOLON .)
    CALL            reduce using rule 72 (estatuto -> llamada SEMICOLON .)
    RBLOQUE         reduce using rule 72 (estatuto -> llamada SEMICOLON .)


state 102

    (73) asignacion -> ID puntoSaveIDAsignacion . asignacion1 EQUALS asignacion2 SEMICOLON
    (74) asignacion1 -> . LBRACKET expresion RBRACKET
    (75) asignacion1 -> . empty
    (149) empty -> .

    LBRACKET        shift and go to state 126
    EQUALS          reduce using rule 149 (empty -> .)

    asignacion1                    shift and go to state 125
    empty                          shift and go to state 127

state 103

    (81) condicion -> IF LPAREN . expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (108) expresion -> . compare expresion2
    (112) compare -> . exp compare1
    (121) exp -> . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    expresion                      shift and go to state 128
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 104

    (87) escritura -> PRINT LPAREN . escritura1 RPAREN SEMICOLON
    (88) escritura1 -> . expresion puntoCreatePrintQuad
    (89) escritura1 -> . CTE_STRING puntoCreatePrintConstantQuad
    (108) expresion -> . compare expresion2
    (112) compare -> . exp compare1
    (121) exp -> . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    CTE_STRING      shift and go to state 131
    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    escritura1                     shift and go to state 129
    expresion                      shift and go to state 130
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 105

    (100) return -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 132


state 106

    (108) expresion -> compare . expresion2
    (109) expresion2 -> . AND compare
    (110) expresion2 -> . OR compare
    (111) expresion2 -> . empty
    (149) empty -> .

    AND             shift and go to state 134
    OR              shift and go to state 135
    SEMICOLON       reduce using rule 149 (empty -> .)
    RPAREN          reduce using rule 149 (empty -> .)
    RBRACKET        reduce using rule 149 (empty -> .)
    COMMA           reduce using rule 149 (empty -> .)

    expresion2                     shift and go to state 133
    empty                          shift and go to state 136

state 107

    (112) compare -> exp . compare1
    (113) compare1 -> . GREATERTHAN puntoPushOperador exp puntoOperacionRelacional
    (114) compare1 -> . LESSTHAN puntoPushOperador exp puntoOperacionRelacional
    (115) compare1 -> . GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
    (116) compare1 -> . LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
    (117) compare1 -> . EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional
    (118) compare1 -> . NOTEQUAL puntoPushOperador exp puntoOperacionRelacional
    (119) compare1 -> . empty
    (149) empty -> .

    GREATERTHAN     shift and go to state 138
    LESSTHAN        shift and go to state 139
    GREATERTHANEQUAL shift and go to state 140
    LESSTHANEQUAL   shift and go to state 141
    EQUALEQUAL      shift and go to state 142
    NOTEQUAL        shift and go to state 143
    AND             reduce using rule 149 (empty -> .)
    OR              reduce using rule 149 (empty -> .)
    SEMICOLON       reduce using rule 149 (empty -> .)
    RPAREN          reduce using rule 149 (empty -> .)
    RBRACKET        reduce using rule 149 (empty -> .)
    COMMA           reduce using rule 149 (empty -> .)

    compare1                       shift and go to state 137
    empty                          shift and go to state 144

state 108

    (121) exp -> termino . puntoSumaResta exp1
    (125) puntoSumaResta -> .

    PLUS            reduce using rule 125 (puntoSumaResta -> .)
    MINUS           reduce using rule 125 (puntoSumaResta -> .)
    GREATERTHAN     reduce using rule 125 (puntoSumaResta -> .)
    LESSTHAN        reduce using rule 125 (puntoSumaResta -> .)
    GREATERTHANEQUAL reduce using rule 125 (puntoSumaResta -> .)
    LESSTHANEQUAL   reduce using rule 125 (puntoSumaResta -> .)
    EQUALEQUAL      reduce using rule 125 (puntoSumaResta -> .)
    NOTEQUAL        reduce using rule 125 (puntoSumaResta -> .)
    AND             reduce using rule 125 (puntoSumaResta -> .)
    OR              reduce using rule 125 (puntoSumaResta -> .)
    SEMICOLON       reduce using rule 125 (puntoSumaResta -> .)
    RPAREN          reduce using rule 125 (puntoSumaResta -> .)
    RBRACKET        reduce using rule 125 (puntoSumaResta -> .)
    COMMA           reduce using rule 125 (puntoSumaResta -> .)

    puntoSumaResta                 shift and go to state 145

state 109

    (126) termino -> factor . puntoMultDivide termino1
    (130) puntoMultDivide -> .

    TIMES           reduce using rule 130 (puntoMultDivide -> .)
    DIVIDE          reduce using rule 130 (puntoMultDivide -> .)
    PLUS            reduce using rule 130 (puntoMultDivide -> .)
    MINUS           reduce using rule 130 (puntoMultDivide -> .)
    GREATERTHAN     reduce using rule 130 (puntoMultDivide -> .)
    LESSTHAN        reduce using rule 130 (puntoMultDivide -> .)
    GREATERTHANEQUAL reduce using rule 130 (puntoMultDivide -> .)
    LESSTHANEQUAL   reduce using rule 130 (puntoMultDivide -> .)
    EQUALEQUAL      reduce using rule 130 (puntoMultDivide -> .)
    NOTEQUAL        reduce using rule 130 (puntoMultDivide -> .)
    AND             reduce using rule 130 (puntoMultDivide -> .)
    OR              reduce using rule 130 (puntoMultDivide -> .)
    SEMICOLON       reduce using rule 130 (puntoMultDivide -> .)
    RPAREN          reduce using rule 130 (puntoMultDivide -> .)
    RBRACKET        reduce using rule 130 (puntoMultDivide -> .)
    COMMA           reduce using rule 130 (puntoMultDivide -> .)

    puntoMultDivide                shift and go to state 146

state 110

    (132) factor -> LPAREN . puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (136) puntoPushFondoFalso -> .

    LPAREN          reduce using rule 136 (puntoPushFondoFalso -> .)
    MINUS           reduce using rule 136 (puntoPushFondoFalso -> .)
    NOT             reduce using rule 136 (puntoPushFondoFalso -> .)
    CTE_INT         reduce using rule 136 (puntoPushFondoFalso -> .)
    CTE_FLOAT       reduce using rule 136 (puntoPushFondoFalso -> .)
    CTE_BOOL        reduce using rule 136 (puntoPushFondoFalso -> .)
    CTE_CHAR        reduce using rule 136 (puntoPushFondoFalso -> .)
    ID              reduce using rule 136 (puntoPushFondoFalso -> .)
    CALL            reduce using rule 136 (puntoPushFondoFalso -> .)

    puntoPushFondoFalso            shift and go to state 147

state 111

    (133) factor -> tipo_cte .

    TIMES           reduce using rule 133 (factor -> tipo_cte .)
    DIVIDE          reduce using rule 133 (factor -> tipo_cte .)
    PLUS            reduce using rule 133 (factor -> tipo_cte .)
    MINUS           reduce using rule 133 (factor -> tipo_cte .)
    GREATERTHAN     reduce using rule 133 (factor -> tipo_cte .)
    LESSTHAN        reduce using rule 133 (factor -> tipo_cte .)
    GREATERTHANEQUAL reduce using rule 133 (factor -> tipo_cte .)
    LESSTHANEQUAL   reduce using rule 133 (factor -> tipo_cte .)
    EQUALEQUAL      reduce using rule 133 (factor -> tipo_cte .)
    NOTEQUAL        reduce using rule 133 (factor -> tipo_cte .)
    AND             reduce using rule 133 (factor -> tipo_cte .)
    OR              reduce using rule 133 (factor -> tipo_cte .)
    SEMICOLON       reduce using rule 133 (factor -> tipo_cte .)
    RPAREN          reduce using rule 133 (factor -> tipo_cte .)
    RBRACKET        reduce using rule 133 (factor -> tipo_cte .)
    COMMA           reduce using rule 133 (factor -> tipo_cte .)


state 112

    (134) factor -> MINUS . tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    tipo_cte                       shift and go to state 148
    llamada                        shift and go to state 119

state 113

    (135) factor -> NOT . tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    tipo_cte                       shift and go to state 149
    llamada                        shift and go to state 119

state 114

    (28) tipo_cte -> CTE_INT . puntoPushInt
    (37) puntoPushInt -> .

    TIMES           reduce using rule 37 (puntoPushInt -> .)
    DIVIDE          reduce using rule 37 (puntoPushInt -> .)
    PLUS            reduce using rule 37 (puntoPushInt -> .)
    MINUS           reduce using rule 37 (puntoPushInt -> .)
    GREATERTHAN     reduce using rule 37 (puntoPushInt -> .)
    LESSTHAN        reduce using rule 37 (puntoPushInt -> .)
    GREATERTHANEQUAL reduce using rule 37 (puntoPushInt -> .)
    LESSTHANEQUAL   reduce using rule 37 (puntoPushInt -> .)
    EQUALEQUAL      reduce using rule 37 (puntoPushInt -> .)
    NOTEQUAL        reduce using rule 37 (puntoPushInt -> .)
    AND             reduce using rule 37 (puntoPushInt -> .)
    OR              reduce using rule 37 (puntoPushInt -> .)
    SEMICOLON       reduce using rule 37 (puntoPushInt -> .)
    RPAREN          reduce using rule 37 (puntoPushInt -> .)
    RBRACKET        reduce using rule 37 (puntoPushInt -> .)
    COMMA           reduce using rule 37 (puntoPushInt -> .)

    puntoPushInt                   shift and go to state 150

state 115

    (29) tipo_cte -> CTE_FLOAT . puntoPushFloat
    (38) puntoPushFloat -> .

    TIMES           reduce using rule 38 (puntoPushFloat -> .)
    DIVIDE          reduce using rule 38 (puntoPushFloat -> .)
    PLUS            reduce using rule 38 (puntoPushFloat -> .)
    MINUS           reduce using rule 38 (puntoPushFloat -> .)
    GREATERTHAN     reduce using rule 38 (puntoPushFloat -> .)
    LESSTHAN        reduce using rule 38 (puntoPushFloat -> .)
    GREATERTHANEQUAL reduce using rule 38 (puntoPushFloat -> .)
    LESSTHANEQUAL   reduce using rule 38 (puntoPushFloat -> .)
    EQUALEQUAL      reduce using rule 38 (puntoPushFloat -> .)
    NOTEQUAL        reduce using rule 38 (puntoPushFloat -> .)
    AND             reduce using rule 38 (puntoPushFloat -> .)
    OR              reduce using rule 38 (puntoPushFloat -> .)
    SEMICOLON       reduce using rule 38 (puntoPushFloat -> .)
    RPAREN          reduce using rule 38 (puntoPushFloat -> .)
    RBRACKET        reduce using rule 38 (puntoPushFloat -> .)
    COMMA           reduce using rule 38 (puntoPushFloat -> .)

    puntoPushFloat                 shift and go to state 151

state 116

    (30) tipo_cte -> CTE_BOOL . puntoPushBool
    (39) puntoPushBool -> .

    TIMES           reduce using rule 39 (puntoPushBool -> .)
    DIVIDE          reduce using rule 39 (puntoPushBool -> .)
    PLUS            reduce using rule 39 (puntoPushBool -> .)
    MINUS           reduce using rule 39 (puntoPushBool -> .)
    GREATERTHAN     reduce using rule 39 (puntoPushBool -> .)
    LESSTHAN        reduce using rule 39 (puntoPushBool -> .)
    GREATERTHANEQUAL reduce using rule 39 (puntoPushBool -> .)
    LESSTHANEQUAL   reduce using rule 39 (puntoPushBool -> .)
    EQUALEQUAL      reduce using rule 39 (puntoPushBool -> .)
    NOTEQUAL        reduce using rule 39 (puntoPushBool -> .)
    AND             reduce using rule 39 (puntoPushBool -> .)
    OR              reduce using rule 39 (puntoPushBool -> .)
    SEMICOLON       reduce using rule 39 (puntoPushBool -> .)
    RPAREN          reduce using rule 39 (puntoPushBool -> .)
    RBRACKET        reduce using rule 39 (puntoPushBool -> .)
    COMMA           reduce using rule 39 (puntoPushBool -> .)

    puntoPushBool                  shift and go to state 152

state 117

    (31) tipo_cte -> CTE_CHAR . puntoPushChar
    (40) puntoPushChar -> .

    TIMES           reduce using rule 40 (puntoPushChar -> .)
    DIVIDE          reduce using rule 40 (puntoPushChar -> .)
    PLUS            reduce using rule 40 (puntoPushChar -> .)
    MINUS           reduce using rule 40 (puntoPushChar -> .)
    GREATERTHAN     reduce using rule 40 (puntoPushChar -> .)
    LESSTHAN        reduce using rule 40 (puntoPushChar -> .)
    GREATERTHANEQUAL reduce using rule 40 (puntoPushChar -> .)
    LESSTHANEQUAL   reduce using rule 40 (puntoPushChar -> .)
    EQUALEQUAL      reduce using rule 40 (puntoPushChar -> .)
    NOTEQUAL        reduce using rule 40 (puntoPushChar -> .)
    AND             reduce using rule 40 (puntoPushChar -> .)
    OR              reduce using rule 40 (puntoPushChar -> .)
    SEMICOLON       reduce using rule 40 (puntoPushChar -> .)
    RPAREN          reduce using rule 40 (puntoPushChar -> .)
    RBRACKET        reduce using rule 40 (puntoPushChar -> .)
    COMMA           reduce using rule 40 (puntoPushChar -> .)

    puntoPushChar                  shift and go to state 153

state 118

    (32) tipo_cte -> ID . puntoPushID tipo_cte1
    (41) puntoPushID -> .

    LBRACKET        reduce using rule 41 (puntoPushID -> .)
    PUNTO           reduce using rule 41 (puntoPushID -> .)
    TIMES           reduce using rule 41 (puntoPushID -> .)
    DIVIDE          reduce using rule 41 (puntoPushID -> .)
    PLUS            reduce using rule 41 (puntoPushID -> .)
    MINUS           reduce using rule 41 (puntoPushID -> .)
    GREATERTHAN     reduce using rule 41 (puntoPushID -> .)
    LESSTHAN        reduce using rule 41 (puntoPushID -> .)
    GREATERTHANEQUAL reduce using rule 41 (puntoPushID -> .)
    LESSTHANEQUAL   reduce using rule 41 (puntoPushID -> .)
    EQUALEQUAL      reduce using rule 41 (puntoPushID -> .)
    NOTEQUAL        reduce using rule 41 (puntoPushID -> .)
    AND             reduce using rule 41 (puntoPushID -> .)
    OR              reduce using rule 41 (puntoPushID -> .)
    SEMICOLON       reduce using rule 41 (puntoPushID -> .)
    RPAREN          reduce using rule 41 (puntoPushID -> .)
    RBRACKET        reduce using rule 41 (puntoPushID -> .)
    COMMA           reduce using rule 41 (puntoPushID -> .)

    puntoPushID                    shift and go to state 154

state 119

    (33) tipo_cte -> llamada .

    TIMES           reduce using rule 33 (tipo_cte -> llamada .)
    DIVIDE          reduce using rule 33 (tipo_cte -> llamada .)
    PLUS            reduce using rule 33 (tipo_cte -> llamada .)
    MINUS           reduce using rule 33 (tipo_cte -> llamada .)
    GREATERTHAN     reduce using rule 33 (tipo_cte -> llamada .)
    LESSTHAN        reduce using rule 33 (tipo_cte -> llamada .)
    GREATERTHANEQUAL reduce using rule 33 (tipo_cte -> llamada .)
    LESSTHANEQUAL   reduce using rule 33 (tipo_cte -> llamada .)
    EQUALEQUAL      reduce using rule 33 (tipo_cte -> llamada .)
    NOTEQUAL        reduce using rule 33 (tipo_cte -> llamada .)
    AND             reduce using rule 33 (tipo_cte -> llamada .)
    OR              reduce using rule 33 (tipo_cte -> llamada .)
    SEMICOLON       reduce using rule 33 (tipo_cte -> llamada .)
    RPAREN          reduce using rule 33 (tipo_cte -> llamada .)
    RBRACKET        reduce using rule 33 (tipo_cte -> llamada .)
    COMMA           reduce using rule 33 (tipo_cte -> llamada .)


state 120

    (101) while -> WHILE puntoPushSaltoWhile . LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad

    LPAREN          shift and go to state 155


state 121

    (105) do_while -> DO puntoPushSaltoDoWhile . bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (63) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 157

    bloque                         shift and go to state 156

state 122

    (92) llamada -> CALL PUNTO . ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    ID              shift and go to state 158


state 123

    (45) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad .

    FUNC            reduce using rule 45 (funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad .)
    VOID            reduce using rule 45 (funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad .)


state 124

    (48) funciones2 -> tipo ID puntoCreateVar puntoCreateVarType puntoPushParam . funciones3
    (50) funciones3 -> . COMMA tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (51) funciones3 -> . empty
    (149) empty -> .

    COMMA           shift and go to state 160
    RPAREN          reduce using rule 149 (empty -> .)

    funciones3                     shift and go to state 159
    empty                          shift and go to state 161

state 125

    (73) asignacion -> ID puntoSaveIDAsignacion asignacion1 . EQUALS asignacion2 SEMICOLON

    EQUALS          shift and go to state 162


state 126

    (74) asignacion1 -> LBRACKET . expresion RBRACKET
    (108) expresion -> . compare expresion2
    (112) compare -> . exp compare1
    (121) exp -> . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    expresion                      shift and go to state 163
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 127

    (75) asignacion1 -> empty .

    EQUALS          reduce using rule 75 (asignacion1 -> empty .)


state 128

    (81) condicion -> IF LPAREN expresion . RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad

    RPAREN          shift and go to state 164


state 129

    (87) escritura -> PRINT LPAREN escritura1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 165


state 130

    (88) escritura1 -> expresion . puntoCreatePrintQuad
    (90) puntoCreatePrintQuad -> .

    RPAREN          reduce using rule 90 (puntoCreatePrintQuad -> .)

    puntoCreatePrintQuad           shift and go to state 166

state 131

    (89) escritura1 -> CTE_STRING . puntoCreatePrintConstantQuad
    (91) puntoCreatePrintConstantQuad -> .

    RPAREN          reduce using rule 91 (puntoCreatePrintConstantQuad -> .)

    puntoCreatePrintConstantQuad   shift and go to state 167

state 132

    (100) return -> RETURN expresion SEMICOLON .

    ID              reduce using rule 100 (return -> RETURN expresion SEMICOLON .)
    IF              reduce using rule 100 (return -> RETURN expresion SEMICOLON .)
    PRINT           reduce using rule 100 (return -> RETURN expresion SEMICOLON .)
    RETURN          reduce using rule 100 (return -> RETURN expresion SEMICOLON .)
    WHILE           reduce using rule 100 (return -> RETURN expresion SEMICOLON .)
    DO              reduce using rule 100 (return -> RETURN expresion SEMICOLON .)
    CALL            reduce using rule 100 (return -> RETURN expresion SEMICOLON .)
    RBLOQUE         reduce using rule 100 (return -> RETURN expresion SEMICOLON .)


state 133

    (108) expresion -> compare expresion2 .

    SEMICOLON       reduce using rule 108 (expresion -> compare expresion2 .)
    RPAREN          reduce using rule 108 (expresion -> compare expresion2 .)
    RBRACKET        reduce using rule 108 (expresion -> compare expresion2 .)
    COMMA           reduce using rule 108 (expresion -> compare expresion2 .)


state 134

    (109) expresion2 -> AND . compare
    (112) compare -> . exp compare1
    (121) exp -> . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    compare                        shift and go to state 168
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 135

    (110) expresion2 -> OR . compare
    (112) compare -> . exp compare1
    (121) exp -> . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    compare                        shift and go to state 169
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 136

    (111) expresion2 -> empty .

    SEMICOLON       reduce using rule 111 (expresion2 -> empty .)
    RPAREN          reduce using rule 111 (expresion2 -> empty .)
    RBRACKET        reduce using rule 111 (expresion2 -> empty .)
    COMMA           reduce using rule 111 (expresion2 -> empty .)


state 137

    (112) compare -> exp compare1 .

    AND             reduce using rule 112 (compare -> exp compare1 .)
    OR              reduce using rule 112 (compare -> exp compare1 .)
    SEMICOLON       reduce using rule 112 (compare -> exp compare1 .)
    RPAREN          reduce using rule 112 (compare -> exp compare1 .)
    RBRACKET        reduce using rule 112 (compare -> exp compare1 .)
    COMMA           reduce using rule 112 (compare -> exp compare1 .)


state 138

    (113) compare1 -> GREATERTHAN . puntoPushOperador exp puntoOperacionRelacional
    (131) puntoPushOperador -> .

    LPAREN          reduce using rule 131 (puntoPushOperador -> .)
    MINUS           reduce using rule 131 (puntoPushOperador -> .)
    NOT             reduce using rule 131 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 131 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 131 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 131 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 131 (puntoPushOperador -> .)
    ID              reduce using rule 131 (puntoPushOperador -> .)
    CALL            reduce using rule 131 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 170

state 139

    (114) compare1 -> LESSTHAN . puntoPushOperador exp puntoOperacionRelacional
    (131) puntoPushOperador -> .

    LPAREN          reduce using rule 131 (puntoPushOperador -> .)
    MINUS           reduce using rule 131 (puntoPushOperador -> .)
    NOT             reduce using rule 131 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 131 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 131 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 131 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 131 (puntoPushOperador -> .)
    ID              reduce using rule 131 (puntoPushOperador -> .)
    CALL            reduce using rule 131 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 171

state 140

    (115) compare1 -> GREATERTHANEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (131) puntoPushOperador -> .

    LPAREN          reduce using rule 131 (puntoPushOperador -> .)
    MINUS           reduce using rule 131 (puntoPushOperador -> .)
    NOT             reduce using rule 131 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 131 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 131 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 131 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 131 (puntoPushOperador -> .)
    ID              reduce using rule 131 (puntoPushOperador -> .)
    CALL            reduce using rule 131 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 172

state 141

    (116) compare1 -> LESSTHANEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (131) puntoPushOperador -> .

    LPAREN          reduce using rule 131 (puntoPushOperador -> .)
    MINUS           reduce using rule 131 (puntoPushOperador -> .)
    NOT             reduce using rule 131 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 131 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 131 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 131 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 131 (puntoPushOperador -> .)
    ID              reduce using rule 131 (puntoPushOperador -> .)
    CALL            reduce using rule 131 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 173

state 142

    (117) compare1 -> EQUALEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (131) puntoPushOperador -> .

    LPAREN          reduce using rule 131 (puntoPushOperador -> .)
    MINUS           reduce using rule 131 (puntoPushOperador -> .)
    NOT             reduce using rule 131 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 131 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 131 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 131 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 131 (puntoPushOperador -> .)
    ID              reduce using rule 131 (puntoPushOperador -> .)
    CALL            reduce using rule 131 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 174

state 143

    (118) compare1 -> NOTEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (131) puntoPushOperador -> .

    LPAREN          reduce using rule 131 (puntoPushOperador -> .)
    MINUS           reduce using rule 131 (puntoPushOperador -> .)
    NOT             reduce using rule 131 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 131 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 131 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 131 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 131 (puntoPushOperador -> .)
    ID              reduce using rule 131 (puntoPushOperador -> .)
    CALL            reduce using rule 131 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 175

state 144

    (119) compare1 -> empty .

    AND             reduce using rule 119 (compare1 -> empty .)
    OR              reduce using rule 119 (compare1 -> empty .)
    SEMICOLON       reduce using rule 119 (compare1 -> empty .)
    RPAREN          reduce using rule 119 (compare1 -> empty .)
    RBRACKET        reduce using rule 119 (compare1 -> empty .)
    COMMA           reduce using rule 119 (compare1 -> empty .)


state 145

    (121) exp -> termino puntoSumaResta . exp1
    (122) exp1 -> . PLUS puntoPushOperador termino puntoSumaResta exp1
    (123) exp1 -> . MINUS puntoPushOperador termino puntoSumaResta exp1
    (124) exp1 -> . empty
    (149) empty -> .

    PLUS            shift and go to state 177
    MINUS           shift and go to state 178
    GREATERTHAN     reduce using rule 149 (empty -> .)
    LESSTHAN        reduce using rule 149 (empty -> .)
    GREATERTHANEQUAL reduce using rule 149 (empty -> .)
    LESSTHANEQUAL   reduce using rule 149 (empty -> .)
    EQUALEQUAL      reduce using rule 149 (empty -> .)
    NOTEQUAL        reduce using rule 149 (empty -> .)
    AND             reduce using rule 149 (empty -> .)
    OR              reduce using rule 149 (empty -> .)
    SEMICOLON       reduce using rule 149 (empty -> .)
    RPAREN          reduce using rule 149 (empty -> .)
    RBRACKET        reduce using rule 149 (empty -> .)
    COMMA           reduce using rule 149 (empty -> .)

    exp1                           shift and go to state 176
    empty                          shift and go to state 179

state 146

    (126) termino -> factor puntoMultDivide . termino1
    (127) termino1 -> . TIMES puntoPushOperador factor puntoMultDivide termino1
    (128) termino1 -> . DIVIDE puntoPushOperador factor puntoMultDivide termino1
    (129) termino1 -> . empty
    (149) empty -> .

    TIMES           shift and go to state 181
    DIVIDE          shift and go to state 182
    PLUS            reduce using rule 149 (empty -> .)
    MINUS           reduce using rule 149 (empty -> .)
    GREATERTHAN     reduce using rule 149 (empty -> .)
    LESSTHAN        reduce using rule 149 (empty -> .)
    GREATERTHANEQUAL reduce using rule 149 (empty -> .)
    LESSTHANEQUAL   reduce using rule 149 (empty -> .)
    EQUALEQUAL      reduce using rule 149 (empty -> .)
    NOTEQUAL        reduce using rule 149 (empty -> .)
    AND             reduce using rule 149 (empty -> .)
    OR              reduce using rule 149 (empty -> .)
    SEMICOLON       reduce using rule 149 (empty -> .)
    RPAREN          reduce using rule 149 (empty -> .)
    RBRACKET        reduce using rule 149 (empty -> .)
    COMMA           reduce using rule 149 (empty -> .)

    termino1                       shift and go to state 180
    empty                          shift and go to state 183

state 147

    (132) factor -> LPAREN puntoPushFondoFalso . expresion RPAREN puntoPopFondoFalso
    (108) expresion -> . compare expresion2
    (112) compare -> . exp compare1
    (121) exp -> . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    expresion                      shift and go to state 184
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 148

    (134) factor -> MINUS tipo_cte .

    TIMES           reduce using rule 134 (factor -> MINUS tipo_cte .)
    DIVIDE          reduce using rule 134 (factor -> MINUS tipo_cte .)
    PLUS            reduce using rule 134 (factor -> MINUS tipo_cte .)
    MINUS           reduce using rule 134 (factor -> MINUS tipo_cte .)
    GREATERTHAN     reduce using rule 134 (factor -> MINUS tipo_cte .)
    LESSTHAN        reduce using rule 134 (factor -> MINUS tipo_cte .)
    GREATERTHANEQUAL reduce using rule 134 (factor -> MINUS tipo_cte .)
    LESSTHANEQUAL   reduce using rule 134 (factor -> MINUS tipo_cte .)
    EQUALEQUAL      reduce using rule 134 (factor -> MINUS tipo_cte .)
    NOTEQUAL        reduce using rule 134 (factor -> MINUS tipo_cte .)
    AND             reduce using rule 134 (factor -> MINUS tipo_cte .)
    OR              reduce using rule 134 (factor -> MINUS tipo_cte .)
    SEMICOLON       reduce using rule 134 (factor -> MINUS tipo_cte .)
    RPAREN          reduce using rule 134 (factor -> MINUS tipo_cte .)
    RBRACKET        reduce using rule 134 (factor -> MINUS tipo_cte .)
    COMMA           reduce using rule 134 (factor -> MINUS tipo_cte .)


state 149

    (135) factor -> NOT tipo_cte .

    TIMES           reduce using rule 135 (factor -> NOT tipo_cte .)
    DIVIDE          reduce using rule 135 (factor -> NOT tipo_cte .)
    PLUS            reduce using rule 135 (factor -> NOT tipo_cte .)
    MINUS           reduce using rule 135 (factor -> NOT tipo_cte .)
    GREATERTHAN     reduce using rule 135 (factor -> NOT tipo_cte .)
    LESSTHAN        reduce using rule 135 (factor -> NOT tipo_cte .)
    GREATERTHANEQUAL reduce using rule 135 (factor -> NOT tipo_cte .)
    LESSTHANEQUAL   reduce using rule 135 (factor -> NOT tipo_cte .)
    EQUALEQUAL      reduce using rule 135 (factor -> NOT tipo_cte .)
    NOTEQUAL        reduce using rule 135 (factor -> NOT tipo_cte .)
    AND             reduce using rule 135 (factor -> NOT tipo_cte .)
    OR              reduce using rule 135 (factor -> NOT tipo_cte .)
    SEMICOLON       reduce using rule 135 (factor -> NOT tipo_cte .)
    RPAREN          reduce using rule 135 (factor -> NOT tipo_cte .)
    RBRACKET        reduce using rule 135 (factor -> NOT tipo_cte .)
    COMMA           reduce using rule 135 (factor -> NOT tipo_cte .)


state 150

    (28) tipo_cte -> CTE_INT puntoPushInt .

    TIMES           reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    DIVIDE          reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    PLUS            reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    MINUS           reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    GREATERTHAN     reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    LESSTHAN        reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    GREATERTHANEQUAL reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    LESSTHANEQUAL   reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    EQUALEQUAL      reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    NOTEQUAL        reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    AND             reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    OR              reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    SEMICOLON       reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    RPAREN          reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    RBRACKET        reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    COMMA           reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)


state 151

    (29) tipo_cte -> CTE_FLOAT puntoPushFloat .

    TIMES           reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    DIVIDE          reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    PLUS            reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    MINUS           reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    GREATERTHAN     reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    LESSTHAN        reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    GREATERTHANEQUAL reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    LESSTHANEQUAL   reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    EQUALEQUAL      reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    NOTEQUAL        reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    AND             reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    OR              reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    SEMICOLON       reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    RPAREN          reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    RBRACKET        reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    COMMA           reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)


state 152

    (30) tipo_cte -> CTE_BOOL puntoPushBool .

    TIMES           reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    DIVIDE          reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    PLUS            reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    MINUS           reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    GREATERTHAN     reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    LESSTHAN        reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    GREATERTHANEQUAL reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    LESSTHANEQUAL   reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    EQUALEQUAL      reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    NOTEQUAL        reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    AND             reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    OR              reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    SEMICOLON       reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    RPAREN          reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    RBRACKET        reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    COMMA           reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)


state 153

    (31) tipo_cte -> CTE_CHAR puntoPushChar .

    TIMES           reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    DIVIDE          reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    PLUS            reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    MINUS           reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    GREATERTHAN     reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    LESSTHAN        reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    GREATERTHANEQUAL reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    LESSTHANEQUAL   reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    EQUALEQUAL      reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    NOTEQUAL        reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    AND             reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    OR              reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    SEMICOLON       reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    RPAREN          reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    RBRACKET        reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    COMMA           reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)


state 154

    (32) tipo_cte -> ID puntoPushID . tipo_cte1
    (34) tipo_cte1 -> . LBRACKET CTE_INT RBRACKET
    (35) tipo_cte1 -> . funciones_arr
    (36) tipo_cte1 -> . empty
    (138) funciones_arr -> . PUNTO funciones_arr1 LPAREN RPAREN
    (149) empty -> .

    LBRACKET        shift and go to state 186
    PUNTO           shift and go to state 189
    TIMES           reduce using rule 149 (empty -> .)
    DIVIDE          reduce using rule 149 (empty -> .)
    PLUS            reduce using rule 149 (empty -> .)
    MINUS           reduce using rule 149 (empty -> .)
    GREATERTHAN     reduce using rule 149 (empty -> .)
    LESSTHAN        reduce using rule 149 (empty -> .)
    GREATERTHANEQUAL reduce using rule 149 (empty -> .)
    LESSTHANEQUAL   reduce using rule 149 (empty -> .)
    EQUALEQUAL      reduce using rule 149 (empty -> .)
    NOTEQUAL        reduce using rule 149 (empty -> .)
    AND             reduce using rule 149 (empty -> .)
    OR              reduce using rule 149 (empty -> .)
    SEMICOLON       reduce using rule 149 (empty -> .)
    RPAREN          reduce using rule 149 (empty -> .)
    RBRACKET        reduce using rule 149 (empty -> .)
    COMMA           reduce using rule 149 (empty -> .)

    tipo_cte1                      shift and go to state 185
    funciones_arr                  shift and go to state 187
    empty                          shift and go to state 188

state 155

    (101) while -> WHILE puntoPushSaltoWhile LPAREN . expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (108) expresion -> . compare expresion2
    (112) compare -> . exp compare1
    (121) exp -> . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    expresion                      shift and go to state 190
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 156

    (105) do_while -> DO puntoPushSaltoDoWhile bloque . WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad

    WHILE           shift and go to state 191


state 157

    (63) bloque -> LBLOQUE . bloque1 RBLOQUE
    (64) bloque1 -> . estatuto bloque1
    (65) bloque1 -> . empty
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . return
    (70) estatuto -> . while
    (71) estatuto -> . do_while
    (72) estatuto -> . llamada SEMICOLON
    (149) empty -> .
    (73) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (81) condicion -> . IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (87) escritura -> . PRINT LPAREN escritura1 RPAREN SEMICOLON
    (100) return -> . RETURN expresion SEMICOLON
    (101) while -> . WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (105) do_while -> . DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    RBLOQUE         reduce using rule 149 (empty -> .)
    ID              shift and go to state 89
    IF              shift and go to state 90
    PRINT           shift and go to state 91
    RETURN          shift and go to state 92
    WHILE           shift and go to state 93
    DO              shift and go to state 94
    CALL            shift and go to state 95

    bloque1                        shift and go to state 192
    estatuto                       shift and go to state 193
    empty                          shift and go to state 194
    asignacion                     shift and go to state 82
    condicion                      shift and go to state 83
    escritura                      shift and go to state 84
    return                         shift and go to state 85
    while                          shift and go to state 86
    do_while                       shift and go to state 87
    llamada                        shift and go to state 88

state 158

    (92) llamada -> CALL PUNTO ID . puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad
    (97) puntoVerifyLlamada -> .

    LPAREN          reduce using rule 97 (puntoVerifyLlamada -> .)

    puntoVerifyLlamada             shift and go to state 195

state 159

    (48) funciones2 -> tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3 .

    RPAREN          reduce using rule 48 (funciones2 -> tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3 .)


state 160

    (50) funciones3 -> COMMA . tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (23) tipo -> . INT puntoCurrentType
    (24) tipo -> . FLOAT puntoCurrentType
    (25) tipo -> . BOOL puntoCurrentType
    (26) tipo -> . CHAR puntoCurrentType

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 25
    CHAR            shift and go to state 26

    tipo                           shift and go to state 196

state 161

    (51) funciones3 -> empty .

    RPAREN          reduce using rule 51 (funciones3 -> empty .)


state 162

    (73) asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS . asignacion2 SEMICOLON
    (76) asignacion2 -> . expresion puntoCreateAsignacionQuad
    (77) asignacion2 -> . leida
    (108) expresion -> . compare expresion2
    (80) leida -> . INPUT LPAREN RPAREN
    (112) compare -> . exp compare1
    (121) exp -> . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    INPUT           shift and go to state 200
    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    asignacion2                    shift and go to state 197
    expresion                      shift and go to state 198
    leida                          shift and go to state 199
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 163

    (74) asignacion1 -> LBRACKET expresion . RBRACKET

    RBRACKET        shift and go to state 201


state 164

    (81) condicion -> IF LPAREN expresion RPAREN . puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (84) puntoCreateIfQuad -> .

    LBLOQUE         reduce using rule 84 (puntoCreateIfQuad -> .)

    puntoCreateIfQuad              shift and go to state 202

state 165

    (87) escritura -> PRINT LPAREN escritura1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 203


state 166

    (88) escritura1 -> expresion puntoCreatePrintQuad .

    RPAREN          reduce using rule 88 (escritura1 -> expresion puntoCreatePrintQuad .)


state 167

    (89) escritura1 -> CTE_STRING puntoCreatePrintConstantQuad .

    RPAREN          reduce using rule 89 (escritura1 -> CTE_STRING puntoCreatePrintConstantQuad .)


state 168

    (109) expresion2 -> AND compare .

    SEMICOLON       reduce using rule 109 (expresion2 -> AND compare .)
    RPAREN          reduce using rule 109 (expresion2 -> AND compare .)
    RBRACKET        reduce using rule 109 (expresion2 -> AND compare .)
    COMMA           reduce using rule 109 (expresion2 -> AND compare .)


state 169

    (110) expresion2 -> OR compare .

    SEMICOLON       reduce using rule 110 (expresion2 -> OR compare .)
    RPAREN          reduce using rule 110 (expresion2 -> OR compare .)
    RBRACKET        reduce using rule 110 (expresion2 -> OR compare .)
    COMMA           reduce using rule 110 (expresion2 -> OR compare .)


state 170

    (113) compare1 -> GREATERTHAN puntoPushOperador . exp puntoOperacionRelacional
    (121) exp -> . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    exp                            shift and go to state 204
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 171

    (114) compare1 -> LESSTHAN puntoPushOperador . exp puntoOperacionRelacional
    (121) exp -> . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    exp                            shift and go to state 205
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 172

    (115) compare1 -> GREATERTHANEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (121) exp -> . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    exp                            shift and go to state 206
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 173

    (116) compare1 -> LESSTHANEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (121) exp -> . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    exp                            shift and go to state 207
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 174

    (117) compare1 -> EQUALEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (121) exp -> . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    exp                            shift and go to state 208
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 175

    (118) compare1 -> NOTEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (121) exp -> . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    exp                            shift and go to state 209
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 176

    (121) exp -> termino puntoSumaResta exp1 .

    GREATERTHAN     reduce using rule 121 (exp -> termino puntoSumaResta exp1 .)
    LESSTHAN        reduce using rule 121 (exp -> termino puntoSumaResta exp1 .)
    GREATERTHANEQUAL reduce using rule 121 (exp -> termino puntoSumaResta exp1 .)
    LESSTHANEQUAL   reduce using rule 121 (exp -> termino puntoSumaResta exp1 .)
    EQUALEQUAL      reduce using rule 121 (exp -> termino puntoSumaResta exp1 .)
    NOTEQUAL        reduce using rule 121 (exp -> termino puntoSumaResta exp1 .)
    AND             reduce using rule 121 (exp -> termino puntoSumaResta exp1 .)
    OR              reduce using rule 121 (exp -> termino puntoSumaResta exp1 .)
    SEMICOLON       reduce using rule 121 (exp -> termino puntoSumaResta exp1 .)
    RPAREN          reduce using rule 121 (exp -> termino puntoSumaResta exp1 .)
    RBRACKET        reduce using rule 121 (exp -> termino puntoSumaResta exp1 .)
    COMMA           reduce using rule 121 (exp -> termino puntoSumaResta exp1 .)


state 177

    (122) exp1 -> PLUS . puntoPushOperador termino puntoSumaResta exp1
    (131) puntoPushOperador -> .

    LPAREN          reduce using rule 131 (puntoPushOperador -> .)
    MINUS           reduce using rule 131 (puntoPushOperador -> .)
    NOT             reduce using rule 131 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 131 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 131 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 131 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 131 (puntoPushOperador -> .)
    ID              reduce using rule 131 (puntoPushOperador -> .)
    CALL            reduce using rule 131 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 210

state 178

    (123) exp1 -> MINUS . puntoPushOperador termino puntoSumaResta exp1
    (131) puntoPushOperador -> .

    LPAREN          reduce using rule 131 (puntoPushOperador -> .)
    MINUS           reduce using rule 131 (puntoPushOperador -> .)
    NOT             reduce using rule 131 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 131 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 131 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 131 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 131 (puntoPushOperador -> .)
    ID              reduce using rule 131 (puntoPushOperador -> .)
    CALL            reduce using rule 131 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 211

state 179

    (124) exp1 -> empty .

    GREATERTHAN     reduce using rule 124 (exp1 -> empty .)
    LESSTHAN        reduce using rule 124 (exp1 -> empty .)
    GREATERTHANEQUAL reduce using rule 124 (exp1 -> empty .)
    LESSTHANEQUAL   reduce using rule 124 (exp1 -> empty .)
    EQUALEQUAL      reduce using rule 124 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 124 (exp1 -> empty .)
    AND             reduce using rule 124 (exp1 -> empty .)
    OR              reduce using rule 124 (exp1 -> empty .)
    SEMICOLON       reduce using rule 124 (exp1 -> empty .)
    RPAREN          reduce using rule 124 (exp1 -> empty .)
    RBRACKET        reduce using rule 124 (exp1 -> empty .)
    COMMA           reduce using rule 124 (exp1 -> empty .)


state 180

    (126) termino -> factor puntoMultDivide termino1 .

    PLUS            reduce using rule 126 (termino -> factor puntoMultDivide termino1 .)
    MINUS           reduce using rule 126 (termino -> factor puntoMultDivide termino1 .)
    GREATERTHAN     reduce using rule 126 (termino -> factor puntoMultDivide termino1 .)
    LESSTHAN        reduce using rule 126 (termino -> factor puntoMultDivide termino1 .)
    GREATERTHANEQUAL reduce using rule 126 (termino -> factor puntoMultDivide termino1 .)
    LESSTHANEQUAL   reduce using rule 126 (termino -> factor puntoMultDivide termino1 .)
    EQUALEQUAL      reduce using rule 126 (termino -> factor puntoMultDivide termino1 .)
    NOTEQUAL        reduce using rule 126 (termino -> factor puntoMultDivide termino1 .)
    AND             reduce using rule 126 (termino -> factor puntoMultDivide termino1 .)
    OR              reduce using rule 126 (termino -> factor puntoMultDivide termino1 .)
    SEMICOLON       reduce using rule 126 (termino -> factor puntoMultDivide termino1 .)
    RPAREN          reduce using rule 126 (termino -> factor puntoMultDivide termino1 .)
    RBRACKET        reduce using rule 126 (termino -> factor puntoMultDivide termino1 .)
    COMMA           reduce using rule 126 (termino -> factor puntoMultDivide termino1 .)


state 181

    (127) termino1 -> TIMES . puntoPushOperador factor puntoMultDivide termino1
    (131) puntoPushOperador -> .

    LPAREN          reduce using rule 131 (puntoPushOperador -> .)
    MINUS           reduce using rule 131 (puntoPushOperador -> .)
    NOT             reduce using rule 131 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 131 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 131 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 131 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 131 (puntoPushOperador -> .)
    ID              reduce using rule 131 (puntoPushOperador -> .)
    CALL            reduce using rule 131 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 212

state 182

    (128) termino1 -> DIVIDE . puntoPushOperador factor puntoMultDivide termino1
    (131) puntoPushOperador -> .

    LPAREN          reduce using rule 131 (puntoPushOperador -> .)
    MINUS           reduce using rule 131 (puntoPushOperador -> .)
    NOT             reduce using rule 131 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 131 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 131 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 131 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 131 (puntoPushOperador -> .)
    ID              reduce using rule 131 (puntoPushOperador -> .)
    CALL            reduce using rule 131 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 213

state 183

    (129) termino1 -> empty .

    PLUS            reduce using rule 129 (termino1 -> empty .)
    MINUS           reduce using rule 129 (termino1 -> empty .)
    GREATERTHAN     reduce using rule 129 (termino1 -> empty .)
    LESSTHAN        reduce using rule 129 (termino1 -> empty .)
    GREATERTHANEQUAL reduce using rule 129 (termino1 -> empty .)
    LESSTHANEQUAL   reduce using rule 129 (termino1 -> empty .)
    EQUALEQUAL      reduce using rule 129 (termino1 -> empty .)
    NOTEQUAL        reduce using rule 129 (termino1 -> empty .)
    AND             reduce using rule 129 (termino1 -> empty .)
    OR              reduce using rule 129 (termino1 -> empty .)
    SEMICOLON       reduce using rule 129 (termino1 -> empty .)
    RPAREN          reduce using rule 129 (termino1 -> empty .)
    RBRACKET        reduce using rule 129 (termino1 -> empty .)
    COMMA           reduce using rule 129 (termino1 -> empty .)


state 184

    (132) factor -> LPAREN puntoPushFondoFalso expresion . RPAREN puntoPopFondoFalso

    RPAREN          shift and go to state 214


state 185

    (32) tipo_cte -> ID puntoPushID tipo_cte1 .

    TIMES           reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    DIVIDE          reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    PLUS            reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    MINUS           reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    GREATERTHAN     reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    LESSTHAN        reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    GREATERTHANEQUAL reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    LESSTHANEQUAL   reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    EQUALEQUAL      reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    NOTEQUAL        reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    AND             reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    OR              reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    SEMICOLON       reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    RPAREN          reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    RBRACKET        reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    COMMA           reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)


state 186

    (34) tipo_cte1 -> LBRACKET . CTE_INT RBRACKET

    CTE_INT         shift and go to state 215


state 187

    (35) tipo_cte1 -> funciones_arr .

    TIMES           reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    DIVIDE          reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    PLUS            reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    MINUS           reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    GREATERTHAN     reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    LESSTHAN        reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    GREATERTHANEQUAL reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    LESSTHANEQUAL   reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    EQUALEQUAL      reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    NOTEQUAL        reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    AND             reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    OR              reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    SEMICOLON       reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    RPAREN          reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    RBRACKET        reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    COMMA           reduce using rule 35 (tipo_cte1 -> funciones_arr .)


state 188

    (36) tipo_cte1 -> empty .

    TIMES           reduce using rule 36 (tipo_cte1 -> empty .)
    DIVIDE          reduce using rule 36 (tipo_cte1 -> empty .)
    PLUS            reduce using rule 36 (tipo_cte1 -> empty .)
    MINUS           reduce using rule 36 (tipo_cte1 -> empty .)
    GREATERTHAN     reduce using rule 36 (tipo_cte1 -> empty .)
    LESSTHAN        reduce using rule 36 (tipo_cte1 -> empty .)
    GREATERTHANEQUAL reduce using rule 36 (tipo_cte1 -> empty .)
    LESSTHANEQUAL   reduce using rule 36 (tipo_cte1 -> empty .)
    EQUALEQUAL      reduce using rule 36 (tipo_cte1 -> empty .)
    NOTEQUAL        reduce using rule 36 (tipo_cte1 -> empty .)
    AND             reduce using rule 36 (tipo_cte1 -> empty .)
    OR              reduce using rule 36 (tipo_cte1 -> empty .)
    SEMICOLON       reduce using rule 36 (tipo_cte1 -> empty .)
    RPAREN          reduce using rule 36 (tipo_cte1 -> empty .)
    RBRACKET        reduce using rule 36 (tipo_cte1 -> empty .)
    COMMA           reduce using rule 36 (tipo_cte1 -> empty .)


state 189

    (138) funciones_arr -> PUNTO . funciones_arr1 LPAREN RPAREN
    (139) funciones_arr1 -> . MAX
    (140) funciones_arr1 -> . MIN
    (141) funciones_arr1 -> . RANGE
    (142) funciones_arr1 -> . MEDIAN
    (143) funciones_arr1 -> . AVERAGE
    (144) funciones_arr1 -> . IQRANGE
    (145) funciones_arr1 -> . STDEV
    (146) funciones_arr1 -> . VARIANCE
    (147) funciones_arr1 -> . MODIFY
    (148) funciones_arr1 -> . DRAW

    MAX             shift and go to state 217
    MIN             shift and go to state 218
    RANGE           shift and go to state 219
    MEDIAN          shift and go to state 220
    AVERAGE         shift and go to state 221
    IQRANGE         shift and go to state 222
    STDEV           shift and go to state 223
    VARIANCE        shift and go to state 224
    MODIFY          shift and go to state 225
    DRAW            shift and go to state 226

    funciones_arr1                 shift and go to state 216

state 190

    (101) while -> WHILE puntoPushSaltoWhile LPAREN expresion . RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad

    RPAREN          shift and go to state 227


state 191

    (105) do_while -> DO puntoPushSaltoDoWhile bloque WHILE . LPAREN expresion RPAREN puntoCreateDoWhileQuad

    LPAREN          shift and go to state 228


state 192

    (63) bloque -> LBLOQUE bloque1 . RBLOQUE

    RBLOQUE         shift and go to state 229


state 193

    (64) bloque1 -> estatuto . bloque1
    (64) bloque1 -> . estatuto bloque1
    (65) bloque1 -> . empty
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . return
    (70) estatuto -> . while
    (71) estatuto -> . do_while
    (72) estatuto -> . llamada SEMICOLON
    (149) empty -> .
    (73) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (81) condicion -> . IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (87) escritura -> . PRINT LPAREN escritura1 RPAREN SEMICOLON
    (100) return -> . RETURN expresion SEMICOLON
    (101) while -> . WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (105) do_while -> . DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    RBLOQUE         reduce using rule 149 (empty -> .)
    ID              shift and go to state 89
    IF              shift and go to state 90
    PRINT           shift and go to state 91
    RETURN          shift and go to state 92
    WHILE           shift and go to state 93
    DO              shift and go to state 94
    CALL            shift and go to state 95

    estatuto                       shift and go to state 193
    bloque1                        shift and go to state 230
    empty                          shift and go to state 194
    asignacion                     shift and go to state 82
    condicion                      shift and go to state 83
    escritura                      shift and go to state 84
    return                         shift and go to state 85
    while                          shift and go to state 86
    do_while                       shift and go to state 87
    llamada                        shift and go to state 88

state 194

    (65) bloque1 -> empty .

    RBLOQUE         reduce using rule 65 (bloque1 -> empty .)


state 195

    (92) llamada -> CALL PUNTO ID puntoVerifyLlamada . LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 231


state 196

    (50) funciones3 -> COMMA tipo . ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3

    ID              shift and go to state 232


state 197

    (73) asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 . SEMICOLON

    SEMICOLON       shift and go to state 233


state 198

    (76) asignacion2 -> expresion . puntoCreateAsignacionQuad
    (79) puntoCreateAsignacionQuad -> .

    SEMICOLON       reduce using rule 79 (puntoCreateAsignacionQuad -> .)

    puntoCreateAsignacionQuad      shift and go to state 234

state 199

    (77) asignacion2 -> leida .

    SEMICOLON       reduce using rule 77 (asignacion2 -> leida .)


state 200

    (80) leida -> INPUT . LPAREN RPAREN

    LPAREN          shift and go to state 235


state 201

    (74) asignacion1 -> LBRACKET expresion RBRACKET .

    EQUALS          reduce using rule 74 (asignacion1 -> LBRACKET expresion RBRACKET .)


state 202

    (81) condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad . bloque condicion1 puntoFillIfQuad
    (63) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 157

    bloque                         shift and go to state 236

state 203

    (87) escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .

    ID              reduce using rule 87 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    IF              reduce using rule 87 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    PRINT           reduce using rule 87 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 87 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 87 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    DO              reduce using rule 87 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    CALL            reduce using rule 87 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    RBLOQUE         reduce using rule 87 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)


state 204

    (113) compare1 -> GREATERTHAN puntoPushOperador exp . puntoOperacionRelacional
    (120) puntoOperacionRelacional -> .

    AND             reduce using rule 120 (puntoOperacionRelacional -> .)
    OR              reduce using rule 120 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 120 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 120 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 120 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 120 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 237

state 205

    (114) compare1 -> LESSTHAN puntoPushOperador exp . puntoOperacionRelacional
    (120) puntoOperacionRelacional -> .

    AND             reduce using rule 120 (puntoOperacionRelacional -> .)
    OR              reduce using rule 120 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 120 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 120 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 120 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 120 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 238

state 206

    (115) compare1 -> GREATERTHANEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (120) puntoOperacionRelacional -> .

    AND             reduce using rule 120 (puntoOperacionRelacional -> .)
    OR              reduce using rule 120 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 120 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 120 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 120 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 120 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 239

state 207

    (116) compare1 -> LESSTHANEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (120) puntoOperacionRelacional -> .

    AND             reduce using rule 120 (puntoOperacionRelacional -> .)
    OR              reduce using rule 120 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 120 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 120 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 120 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 120 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 240

state 208

    (117) compare1 -> EQUALEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (120) puntoOperacionRelacional -> .

    AND             reduce using rule 120 (puntoOperacionRelacional -> .)
    OR              reduce using rule 120 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 120 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 120 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 120 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 120 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 241

state 209

    (118) compare1 -> NOTEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (120) puntoOperacionRelacional -> .

    AND             reduce using rule 120 (puntoOperacionRelacional -> .)
    OR              reduce using rule 120 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 120 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 120 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 120 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 120 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 242

state 210

    (122) exp1 -> PLUS puntoPushOperador . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    termino                        shift and go to state 243
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 211

    (123) exp1 -> MINUS puntoPushOperador . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    termino                        shift and go to state 244
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 212

    (127) termino1 -> TIMES puntoPushOperador . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    factor                         shift and go to state 245
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 213

    (128) termino1 -> DIVIDE puntoPushOperador . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    factor                         shift and go to state 246
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 214

    (132) factor -> LPAREN puntoPushFondoFalso expresion RPAREN . puntoPopFondoFalso
    (137) puntoPopFondoFalso -> .

    TIMES           reduce using rule 137 (puntoPopFondoFalso -> .)
    DIVIDE          reduce using rule 137 (puntoPopFondoFalso -> .)
    PLUS            reduce using rule 137 (puntoPopFondoFalso -> .)
    MINUS           reduce using rule 137 (puntoPopFondoFalso -> .)
    GREATERTHAN     reduce using rule 137 (puntoPopFondoFalso -> .)
    LESSTHAN        reduce using rule 137 (puntoPopFondoFalso -> .)
    GREATERTHANEQUAL reduce using rule 137 (puntoPopFondoFalso -> .)
    LESSTHANEQUAL   reduce using rule 137 (puntoPopFondoFalso -> .)
    EQUALEQUAL      reduce using rule 137 (puntoPopFondoFalso -> .)
    NOTEQUAL        reduce using rule 137 (puntoPopFondoFalso -> .)
    AND             reduce using rule 137 (puntoPopFondoFalso -> .)
    OR              reduce using rule 137 (puntoPopFondoFalso -> .)
    SEMICOLON       reduce using rule 137 (puntoPopFondoFalso -> .)
    RPAREN          reduce using rule 137 (puntoPopFondoFalso -> .)
    RBRACKET        reduce using rule 137 (puntoPopFondoFalso -> .)
    COMMA           reduce using rule 137 (puntoPopFondoFalso -> .)

    puntoPopFondoFalso             shift and go to state 247

state 215

    (34) tipo_cte1 -> LBRACKET CTE_INT . RBRACKET

    RBRACKET        shift and go to state 248


state 216

    (138) funciones_arr -> PUNTO funciones_arr1 . LPAREN RPAREN

    LPAREN          shift and go to state 249


state 217

    (139) funciones_arr1 -> MAX .

    LPAREN          reduce using rule 139 (funciones_arr1 -> MAX .)


state 218

    (140) funciones_arr1 -> MIN .

    LPAREN          reduce using rule 140 (funciones_arr1 -> MIN .)


state 219

    (141) funciones_arr1 -> RANGE .

    LPAREN          reduce using rule 141 (funciones_arr1 -> RANGE .)


state 220

    (142) funciones_arr1 -> MEDIAN .

    LPAREN          reduce using rule 142 (funciones_arr1 -> MEDIAN .)


state 221

    (143) funciones_arr1 -> AVERAGE .

    LPAREN          reduce using rule 143 (funciones_arr1 -> AVERAGE .)


state 222

    (144) funciones_arr1 -> IQRANGE .

    LPAREN          reduce using rule 144 (funciones_arr1 -> IQRANGE .)


state 223

    (145) funciones_arr1 -> STDEV .

    LPAREN          reduce using rule 145 (funciones_arr1 -> STDEV .)


state 224

    (146) funciones_arr1 -> VARIANCE .

    LPAREN          reduce using rule 146 (funciones_arr1 -> VARIANCE .)


state 225

    (147) funciones_arr1 -> MODIFY .

    LPAREN          reduce using rule 147 (funciones_arr1 -> MODIFY .)


state 226

    (148) funciones_arr1 -> DRAW .

    LPAREN          reduce using rule 148 (funciones_arr1 -> DRAW .)


state 227

    (101) while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN . puntoCreateWhileQuad bloque puntoEndWhileQuad
    (103) puntoCreateWhileQuad -> .

    LBLOQUE         reduce using rule 103 (puntoCreateWhileQuad -> .)

    puntoCreateWhileQuad           shift and go to state 250

state 228

    (105) do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN . expresion RPAREN puntoCreateDoWhileQuad
    (108) expresion -> . compare expresion2
    (112) compare -> . exp compare1
    (121) exp -> . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    expresion                      shift and go to state 251
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 229

    (63) bloque -> LBLOQUE bloque1 RBLOQUE .

    WHILE           reduce using rule 63 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    ELSE            reduce using rule 63 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    ID              reduce using rule 63 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    IF              reduce using rule 63 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    PRINT           reduce using rule 63 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    RETURN          reduce using rule 63 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    DO              reduce using rule 63 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    CALL            reduce using rule 63 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    RBLOQUE         reduce using rule 63 (bloque -> LBLOQUE bloque1 RBLOQUE .)


state 230

    (64) bloque1 -> estatuto bloque1 .

    RBLOQUE         reduce using rule 64 (bloque1 -> estatuto bloque1 .)


state 231

    (92) llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN . llamada1 RPAREN puntoCreateGoSubQuad
    (93) llamada1 -> . expresion puntoVerifyArgumento llamada2
    (94) llamada1 -> . empty
    (108) expresion -> . compare expresion2
    (149) empty -> .
    (112) compare -> . exp compare1
    (121) exp -> . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    RPAREN          reduce using rule 149 (empty -> .)
    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    llamada1                       shift and go to state 252
    expresion                      shift and go to state 253
    empty                          shift and go to state 254
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 232

    (50) funciones3 -> COMMA tipo ID . puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (20) puntoCreateVar -> .

    COMMA           reduce using rule 20 (puntoCreateVar -> .)
    RPAREN          reduce using rule 20 (puntoCreateVar -> .)

    puntoCreateVar                 shift and go to state 255

state 233

    (73) asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .

    ID              reduce using rule 73 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    IF              reduce using rule 73 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    PRINT           reduce using rule 73 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    RETURN          reduce using rule 73 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    WHILE           reduce using rule 73 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    DO              reduce using rule 73 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    CALL            reduce using rule 73 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    RBLOQUE         reduce using rule 73 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)


state 234

    (76) asignacion2 -> expresion puntoCreateAsignacionQuad .

    SEMICOLON       reduce using rule 76 (asignacion2 -> expresion puntoCreateAsignacionQuad .)


state 235

    (80) leida -> INPUT LPAREN . RPAREN

    RPAREN          shift and go to state 256


state 236

    (81) condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque . condicion1 puntoFillIfQuad
    (82) condicion1 -> . ELSE puntoCreateElseQuad bloque
    (83) condicion1 -> . empty
    (149) empty -> .

    ELSE            shift and go to state 258
    ID              reduce using rule 149 (empty -> .)
    IF              reduce using rule 149 (empty -> .)
    PRINT           reduce using rule 149 (empty -> .)
    RETURN          reduce using rule 149 (empty -> .)
    WHILE           reduce using rule 149 (empty -> .)
    DO              reduce using rule 149 (empty -> .)
    CALL            reduce using rule 149 (empty -> .)
    RBLOQUE         reduce using rule 149 (empty -> .)

    condicion1                     shift and go to state 257
    empty                          shift and go to state 259

state 237

    (113) compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 113 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 113 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 113 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 113 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 113 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 113 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)


state 238

    (114) compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 114 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 114 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 114 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 114 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 114 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 114 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)


state 239

    (115) compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 115 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 115 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 115 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 115 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 115 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 115 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 240

    (116) compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 116 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 116 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 116 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 116 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 116 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 116 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 241

    (117) compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 117 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 117 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 117 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 117 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 117 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 117 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 242

    (118) compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 118 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 118 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 118 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 118 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 118 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 118 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 243

    (122) exp1 -> PLUS puntoPushOperador termino . puntoSumaResta exp1
    (125) puntoSumaResta -> .

    PLUS            reduce using rule 125 (puntoSumaResta -> .)
    MINUS           reduce using rule 125 (puntoSumaResta -> .)
    GREATERTHAN     reduce using rule 125 (puntoSumaResta -> .)
    LESSTHAN        reduce using rule 125 (puntoSumaResta -> .)
    GREATERTHANEQUAL reduce using rule 125 (puntoSumaResta -> .)
    LESSTHANEQUAL   reduce using rule 125 (puntoSumaResta -> .)
    EQUALEQUAL      reduce using rule 125 (puntoSumaResta -> .)
    NOTEQUAL        reduce using rule 125 (puntoSumaResta -> .)
    AND             reduce using rule 125 (puntoSumaResta -> .)
    OR              reduce using rule 125 (puntoSumaResta -> .)
    SEMICOLON       reduce using rule 125 (puntoSumaResta -> .)
    RPAREN          reduce using rule 125 (puntoSumaResta -> .)
    RBRACKET        reduce using rule 125 (puntoSumaResta -> .)
    COMMA           reduce using rule 125 (puntoSumaResta -> .)

    puntoSumaResta                 shift and go to state 260

state 244

    (123) exp1 -> MINUS puntoPushOperador termino . puntoSumaResta exp1
    (125) puntoSumaResta -> .

    PLUS            reduce using rule 125 (puntoSumaResta -> .)
    MINUS           reduce using rule 125 (puntoSumaResta -> .)
    GREATERTHAN     reduce using rule 125 (puntoSumaResta -> .)
    LESSTHAN        reduce using rule 125 (puntoSumaResta -> .)
    GREATERTHANEQUAL reduce using rule 125 (puntoSumaResta -> .)
    LESSTHANEQUAL   reduce using rule 125 (puntoSumaResta -> .)
    EQUALEQUAL      reduce using rule 125 (puntoSumaResta -> .)
    NOTEQUAL        reduce using rule 125 (puntoSumaResta -> .)
    AND             reduce using rule 125 (puntoSumaResta -> .)
    OR              reduce using rule 125 (puntoSumaResta -> .)
    SEMICOLON       reduce using rule 125 (puntoSumaResta -> .)
    RPAREN          reduce using rule 125 (puntoSumaResta -> .)
    RBRACKET        reduce using rule 125 (puntoSumaResta -> .)
    COMMA           reduce using rule 125 (puntoSumaResta -> .)

    puntoSumaResta                 shift and go to state 261

state 245

    (127) termino1 -> TIMES puntoPushOperador factor . puntoMultDivide termino1
    (130) puntoMultDivide -> .

    TIMES           reduce using rule 130 (puntoMultDivide -> .)
    DIVIDE          reduce using rule 130 (puntoMultDivide -> .)
    PLUS            reduce using rule 130 (puntoMultDivide -> .)
    MINUS           reduce using rule 130 (puntoMultDivide -> .)
    GREATERTHAN     reduce using rule 130 (puntoMultDivide -> .)
    LESSTHAN        reduce using rule 130 (puntoMultDivide -> .)
    GREATERTHANEQUAL reduce using rule 130 (puntoMultDivide -> .)
    LESSTHANEQUAL   reduce using rule 130 (puntoMultDivide -> .)
    EQUALEQUAL      reduce using rule 130 (puntoMultDivide -> .)
    NOTEQUAL        reduce using rule 130 (puntoMultDivide -> .)
    AND             reduce using rule 130 (puntoMultDivide -> .)
    OR              reduce using rule 130 (puntoMultDivide -> .)
    SEMICOLON       reduce using rule 130 (puntoMultDivide -> .)
    RPAREN          reduce using rule 130 (puntoMultDivide -> .)
    RBRACKET        reduce using rule 130 (puntoMultDivide -> .)
    COMMA           reduce using rule 130 (puntoMultDivide -> .)

    puntoMultDivide                shift and go to state 262

state 246

    (128) termino1 -> DIVIDE puntoPushOperador factor . puntoMultDivide termino1
    (130) puntoMultDivide -> .

    TIMES           reduce using rule 130 (puntoMultDivide -> .)
    DIVIDE          reduce using rule 130 (puntoMultDivide -> .)
    PLUS            reduce using rule 130 (puntoMultDivide -> .)
    MINUS           reduce using rule 130 (puntoMultDivide -> .)
    GREATERTHAN     reduce using rule 130 (puntoMultDivide -> .)
    LESSTHAN        reduce using rule 130 (puntoMultDivide -> .)
    GREATERTHANEQUAL reduce using rule 130 (puntoMultDivide -> .)
    LESSTHANEQUAL   reduce using rule 130 (puntoMultDivide -> .)
    EQUALEQUAL      reduce using rule 130 (puntoMultDivide -> .)
    NOTEQUAL        reduce using rule 130 (puntoMultDivide -> .)
    AND             reduce using rule 130 (puntoMultDivide -> .)
    OR              reduce using rule 130 (puntoMultDivide -> .)
    SEMICOLON       reduce using rule 130 (puntoMultDivide -> .)
    RPAREN          reduce using rule 130 (puntoMultDivide -> .)
    RBRACKET        reduce using rule 130 (puntoMultDivide -> .)
    COMMA           reduce using rule 130 (puntoMultDivide -> .)

    puntoMultDivide                shift and go to state 263

state 247

    (132) factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .

    TIMES           reduce using rule 132 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    DIVIDE          reduce using rule 132 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    PLUS            reduce using rule 132 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    MINUS           reduce using rule 132 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    GREATERTHAN     reduce using rule 132 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    LESSTHAN        reduce using rule 132 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    GREATERTHANEQUAL reduce using rule 132 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    LESSTHANEQUAL   reduce using rule 132 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    EQUALEQUAL      reduce using rule 132 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    NOTEQUAL        reduce using rule 132 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    AND             reduce using rule 132 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    OR              reduce using rule 132 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    SEMICOLON       reduce using rule 132 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    RPAREN          reduce using rule 132 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    RBRACKET        reduce using rule 132 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    COMMA           reduce using rule 132 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)


state 248

    (34) tipo_cte1 -> LBRACKET CTE_INT RBRACKET .

    TIMES           reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    DIVIDE          reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    PLUS            reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    MINUS           reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    GREATERTHAN     reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    LESSTHAN        reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    GREATERTHANEQUAL reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    LESSTHANEQUAL   reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    EQUALEQUAL      reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    NOTEQUAL        reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    AND             reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    OR              reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    SEMICOLON       reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    RPAREN          reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    RBRACKET        reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    COMMA           reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)


state 249

    (138) funciones_arr -> PUNTO funciones_arr1 LPAREN . RPAREN

    RPAREN          shift and go to state 264


state 250

    (101) while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad . bloque puntoEndWhileQuad
    (63) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 157

    bloque                         shift and go to state 265

state 251

    (105) do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion . RPAREN puntoCreateDoWhileQuad

    RPAREN          shift and go to state 266


state 252

    (92) llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 . RPAREN puntoCreateGoSubQuad

    RPAREN          shift and go to state 267


state 253

    (93) llamada1 -> expresion . puntoVerifyArgumento llamada2
    (98) puntoVerifyArgumento -> .

    COMMA           reduce using rule 98 (puntoVerifyArgumento -> .)
    RPAREN          reduce using rule 98 (puntoVerifyArgumento -> .)

    puntoVerifyArgumento           shift and go to state 268

state 254

    (94) llamada1 -> empty .

    RPAREN          reduce using rule 94 (llamada1 -> empty .)


state 255

    (50) funciones3 -> COMMA tipo ID puntoCreateVar . puntoCreateVarType puntoPushParam funciones3
    (21) puntoCreateVarType -> .

    COMMA           reduce using rule 21 (puntoCreateVarType -> .)
    RPAREN          reduce using rule 21 (puntoCreateVarType -> .)

    puntoCreateVarType             shift and go to state 269

state 256

    (80) leida -> INPUT LPAREN RPAREN .

    SEMICOLON       reduce using rule 80 (leida -> INPUT LPAREN RPAREN .)


state 257

    (81) condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 . puntoFillIfQuad
    (85) puntoFillIfQuad -> .

    ID              reduce using rule 85 (puntoFillIfQuad -> .)
    IF              reduce using rule 85 (puntoFillIfQuad -> .)
    PRINT           reduce using rule 85 (puntoFillIfQuad -> .)
    RETURN          reduce using rule 85 (puntoFillIfQuad -> .)
    WHILE           reduce using rule 85 (puntoFillIfQuad -> .)
    DO              reduce using rule 85 (puntoFillIfQuad -> .)
    CALL            reduce using rule 85 (puntoFillIfQuad -> .)
    RBLOQUE         reduce using rule 85 (puntoFillIfQuad -> .)

    puntoFillIfQuad                shift and go to state 270

state 258

    (82) condicion1 -> ELSE . puntoCreateElseQuad bloque
    (86) puntoCreateElseQuad -> .

    LBLOQUE         reduce using rule 86 (puntoCreateElseQuad -> .)

    puntoCreateElseQuad            shift and go to state 271

state 259

    (83) condicion1 -> empty .

    ID              reduce using rule 83 (condicion1 -> empty .)
    IF              reduce using rule 83 (condicion1 -> empty .)
    PRINT           reduce using rule 83 (condicion1 -> empty .)
    RETURN          reduce using rule 83 (condicion1 -> empty .)
    WHILE           reduce using rule 83 (condicion1 -> empty .)
    DO              reduce using rule 83 (condicion1 -> empty .)
    CALL            reduce using rule 83 (condicion1 -> empty .)
    RBLOQUE         reduce using rule 83 (condicion1 -> empty .)


state 260

    (122) exp1 -> PLUS puntoPushOperador termino puntoSumaResta . exp1
    (122) exp1 -> . PLUS puntoPushOperador termino puntoSumaResta exp1
    (123) exp1 -> . MINUS puntoPushOperador termino puntoSumaResta exp1
    (124) exp1 -> . empty
    (149) empty -> .

    PLUS            shift and go to state 177
    MINUS           shift and go to state 178
    GREATERTHAN     reduce using rule 149 (empty -> .)
    LESSTHAN        reduce using rule 149 (empty -> .)
    GREATERTHANEQUAL reduce using rule 149 (empty -> .)
    LESSTHANEQUAL   reduce using rule 149 (empty -> .)
    EQUALEQUAL      reduce using rule 149 (empty -> .)
    NOTEQUAL        reduce using rule 149 (empty -> .)
    AND             reduce using rule 149 (empty -> .)
    OR              reduce using rule 149 (empty -> .)
    SEMICOLON       reduce using rule 149 (empty -> .)
    RPAREN          reduce using rule 149 (empty -> .)
    RBRACKET        reduce using rule 149 (empty -> .)
    COMMA           reduce using rule 149 (empty -> .)

    exp1                           shift and go to state 272
    empty                          shift and go to state 179

state 261

    (123) exp1 -> MINUS puntoPushOperador termino puntoSumaResta . exp1
    (122) exp1 -> . PLUS puntoPushOperador termino puntoSumaResta exp1
    (123) exp1 -> . MINUS puntoPushOperador termino puntoSumaResta exp1
    (124) exp1 -> . empty
    (149) empty -> .

    PLUS            shift and go to state 177
    MINUS           shift and go to state 178
    GREATERTHAN     reduce using rule 149 (empty -> .)
    LESSTHAN        reduce using rule 149 (empty -> .)
    GREATERTHANEQUAL reduce using rule 149 (empty -> .)
    LESSTHANEQUAL   reduce using rule 149 (empty -> .)
    EQUALEQUAL      reduce using rule 149 (empty -> .)
    NOTEQUAL        reduce using rule 149 (empty -> .)
    AND             reduce using rule 149 (empty -> .)
    OR              reduce using rule 149 (empty -> .)
    SEMICOLON       reduce using rule 149 (empty -> .)
    RPAREN          reduce using rule 149 (empty -> .)
    RBRACKET        reduce using rule 149 (empty -> .)
    COMMA           reduce using rule 149 (empty -> .)

    exp1                           shift and go to state 273
    empty                          shift and go to state 179

state 262

    (127) termino1 -> TIMES puntoPushOperador factor puntoMultDivide . termino1
    (127) termino1 -> . TIMES puntoPushOperador factor puntoMultDivide termino1
    (128) termino1 -> . DIVIDE puntoPushOperador factor puntoMultDivide termino1
    (129) termino1 -> . empty
    (149) empty -> .

    TIMES           shift and go to state 181
    DIVIDE          shift and go to state 182
    PLUS            reduce using rule 149 (empty -> .)
    MINUS           reduce using rule 149 (empty -> .)
    GREATERTHAN     reduce using rule 149 (empty -> .)
    LESSTHAN        reduce using rule 149 (empty -> .)
    GREATERTHANEQUAL reduce using rule 149 (empty -> .)
    LESSTHANEQUAL   reduce using rule 149 (empty -> .)
    EQUALEQUAL      reduce using rule 149 (empty -> .)
    NOTEQUAL        reduce using rule 149 (empty -> .)
    AND             reduce using rule 149 (empty -> .)
    OR              reduce using rule 149 (empty -> .)
    SEMICOLON       reduce using rule 149 (empty -> .)
    RPAREN          reduce using rule 149 (empty -> .)
    RBRACKET        reduce using rule 149 (empty -> .)
    COMMA           reduce using rule 149 (empty -> .)

    termino1                       shift and go to state 274
    empty                          shift and go to state 183

state 263

    (128) termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide . termino1
    (127) termino1 -> . TIMES puntoPushOperador factor puntoMultDivide termino1
    (128) termino1 -> . DIVIDE puntoPushOperador factor puntoMultDivide termino1
    (129) termino1 -> . empty
    (149) empty -> .

    TIMES           shift and go to state 181
    DIVIDE          shift and go to state 182
    PLUS            reduce using rule 149 (empty -> .)
    MINUS           reduce using rule 149 (empty -> .)
    GREATERTHAN     reduce using rule 149 (empty -> .)
    LESSTHAN        reduce using rule 149 (empty -> .)
    GREATERTHANEQUAL reduce using rule 149 (empty -> .)
    LESSTHANEQUAL   reduce using rule 149 (empty -> .)
    EQUALEQUAL      reduce using rule 149 (empty -> .)
    NOTEQUAL        reduce using rule 149 (empty -> .)
    AND             reduce using rule 149 (empty -> .)
    OR              reduce using rule 149 (empty -> .)
    SEMICOLON       reduce using rule 149 (empty -> .)
    RPAREN          reduce using rule 149 (empty -> .)
    RBRACKET        reduce using rule 149 (empty -> .)
    COMMA           reduce using rule 149 (empty -> .)

    termino1                       shift and go to state 275
    empty                          shift and go to state 183

state 264

    (138) funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .

    TIMES           reduce using rule 138 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    DIVIDE          reduce using rule 138 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    PLUS            reduce using rule 138 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    MINUS           reduce using rule 138 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    GREATERTHAN     reduce using rule 138 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    LESSTHAN        reduce using rule 138 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    GREATERTHANEQUAL reduce using rule 138 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    LESSTHANEQUAL   reduce using rule 138 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    EQUALEQUAL      reduce using rule 138 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 138 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    AND             reduce using rule 138 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    OR              reduce using rule 138 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    SEMICOLON       reduce using rule 138 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    RPAREN          reduce using rule 138 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    RBRACKET        reduce using rule 138 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    COMMA           reduce using rule 138 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)


state 265

    (101) while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque . puntoEndWhileQuad
    (104) puntoEndWhileQuad -> .

    ID              reduce using rule 104 (puntoEndWhileQuad -> .)
    IF              reduce using rule 104 (puntoEndWhileQuad -> .)
    PRINT           reduce using rule 104 (puntoEndWhileQuad -> .)
    RETURN          reduce using rule 104 (puntoEndWhileQuad -> .)
    WHILE           reduce using rule 104 (puntoEndWhileQuad -> .)
    DO              reduce using rule 104 (puntoEndWhileQuad -> .)
    CALL            reduce using rule 104 (puntoEndWhileQuad -> .)
    RBLOQUE         reduce using rule 104 (puntoEndWhileQuad -> .)

    puntoEndWhileQuad              shift and go to state 276

state 266

    (105) do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN . puntoCreateDoWhileQuad
    (107) puntoCreateDoWhileQuad -> .

    ID              reduce using rule 107 (puntoCreateDoWhileQuad -> .)
    IF              reduce using rule 107 (puntoCreateDoWhileQuad -> .)
    PRINT           reduce using rule 107 (puntoCreateDoWhileQuad -> .)
    RETURN          reduce using rule 107 (puntoCreateDoWhileQuad -> .)
    WHILE           reduce using rule 107 (puntoCreateDoWhileQuad -> .)
    DO              reduce using rule 107 (puntoCreateDoWhileQuad -> .)
    CALL            reduce using rule 107 (puntoCreateDoWhileQuad -> .)
    RBLOQUE         reduce using rule 107 (puntoCreateDoWhileQuad -> .)

    puntoCreateDoWhileQuad         shift and go to state 277

state 267

    (92) llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN . puntoCreateGoSubQuad
    (99) puntoCreateGoSubQuad -> .

    SEMICOLON       reduce using rule 99 (puntoCreateGoSubQuad -> .)
    TIMES           reduce using rule 99 (puntoCreateGoSubQuad -> .)
    DIVIDE          reduce using rule 99 (puntoCreateGoSubQuad -> .)
    PLUS            reduce using rule 99 (puntoCreateGoSubQuad -> .)
    MINUS           reduce using rule 99 (puntoCreateGoSubQuad -> .)
    GREATERTHAN     reduce using rule 99 (puntoCreateGoSubQuad -> .)
    LESSTHAN        reduce using rule 99 (puntoCreateGoSubQuad -> .)
    GREATERTHANEQUAL reduce using rule 99 (puntoCreateGoSubQuad -> .)
    LESSTHANEQUAL   reduce using rule 99 (puntoCreateGoSubQuad -> .)
    EQUALEQUAL      reduce using rule 99 (puntoCreateGoSubQuad -> .)
    NOTEQUAL        reduce using rule 99 (puntoCreateGoSubQuad -> .)
    AND             reduce using rule 99 (puntoCreateGoSubQuad -> .)
    OR              reduce using rule 99 (puntoCreateGoSubQuad -> .)
    RPAREN          reduce using rule 99 (puntoCreateGoSubQuad -> .)
    RBRACKET        reduce using rule 99 (puntoCreateGoSubQuad -> .)
    COMMA           reduce using rule 99 (puntoCreateGoSubQuad -> .)

    puntoCreateGoSubQuad           shift and go to state 278

state 268

    (93) llamada1 -> expresion puntoVerifyArgumento . llamada2
    (95) llamada2 -> . COMMA expresion puntoVerifyArgumento llamada2
    (96) llamada2 -> . empty
    (149) empty -> .

    COMMA           shift and go to state 280
    RPAREN          reduce using rule 149 (empty -> .)

    llamada2                       shift and go to state 279
    empty                          shift and go to state 281

state 269

    (50) funciones3 -> COMMA tipo ID puntoCreateVar puntoCreateVarType . puntoPushParam funciones3
    (54) puntoPushParam -> .

    COMMA           reduce using rule 54 (puntoPushParam -> .)
    RPAREN          reduce using rule 54 (puntoPushParam -> .)

    puntoPushParam                 shift and go to state 282

state 270

    (81) condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .

    ID              reduce using rule 81 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    IF              reduce using rule 81 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    PRINT           reduce using rule 81 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    RETURN          reduce using rule 81 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    WHILE           reduce using rule 81 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    DO              reduce using rule 81 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    CALL            reduce using rule 81 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    RBLOQUE         reduce using rule 81 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)


state 271

    (82) condicion1 -> ELSE puntoCreateElseQuad . bloque
    (63) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 157

    bloque                         shift and go to state 283

state 272

    (122) exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .

    GREATERTHAN     reduce using rule 122 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHAN        reduce using rule 122 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    GREATERTHANEQUAL reduce using rule 122 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHANEQUAL   reduce using rule 122 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    EQUALEQUAL      reduce using rule 122 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    NOTEQUAL        reduce using rule 122 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    AND             reduce using rule 122 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    OR              reduce using rule 122 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    SEMICOLON       reduce using rule 122 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    RPAREN          reduce using rule 122 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    RBRACKET        reduce using rule 122 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    COMMA           reduce using rule 122 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)


state 273

    (123) exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .

    GREATERTHAN     reduce using rule 123 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHAN        reduce using rule 123 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    GREATERTHANEQUAL reduce using rule 123 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHANEQUAL   reduce using rule 123 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    EQUALEQUAL      reduce using rule 123 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    NOTEQUAL        reduce using rule 123 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    AND             reduce using rule 123 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    OR              reduce using rule 123 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    SEMICOLON       reduce using rule 123 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    RPAREN          reduce using rule 123 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    RBRACKET        reduce using rule 123 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    COMMA           reduce using rule 123 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)


state 274

    (127) termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .

    PLUS            reduce using rule 127 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    MINUS           reduce using rule 127 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHAN     reduce using rule 127 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHAN        reduce using rule 127 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHANEQUAL reduce using rule 127 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHANEQUAL   reduce using rule 127 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    EQUALEQUAL      reduce using rule 127 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    NOTEQUAL        reduce using rule 127 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    AND             reduce using rule 127 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    OR              reduce using rule 127 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    SEMICOLON       reduce using rule 127 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    RPAREN          reduce using rule 127 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    RBRACKET        reduce using rule 127 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    COMMA           reduce using rule 127 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)


state 275

    (128) termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .

    PLUS            reduce using rule 128 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    MINUS           reduce using rule 128 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHAN     reduce using rule 128 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHAN        reduce using rule 128 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHANEQUAL reduce using rule 128 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHANEQUAL   reduce using rule 128 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    EQUALEQUAL      reduce using rule 128 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    NOTEQUAL        reduce using rule 128 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    AND             reduce using rule 128 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    OR              reduce using rule 128 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    SEMICOLON       reduce using rule 128 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    RPAREN          reduce using rule 128 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    RBRACKET        reduce using rule 128 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    COMMA           reduce using rule 128 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)


state 276

    (101) while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .

    ID              reduce using rule 101 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    IF              reduce using rule 101 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    PRINT           reduce using rule 101 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    RETURN          reduce using rule 101 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    WHILE           reduce using rule 101 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    DO              reduce using rule 101 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    CALL            reduce using rule 101 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    RBLOQUE         reduce using rule 101 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)


state 277

    (105) do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .

    ID              reduce using rule 105 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    IF              reduce using rule 105 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    PRINT           reduce using rule 105 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    RETURN          reduce using rule 105 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    WHILE           reduce using rule 105 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    DO              reduce using rule 105 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    CALL            reduce using rule 105 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    RBLOQUE         reduce using rule 105 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)


state 278

    (92) llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad .

    SEMICOLON       reduce using rule 92 (llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad .)
    TIMES           reduce using rule 92 (llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad .)
    DIVIDE          reduce using rule 92 (llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad .)
    PLUS            reduce using rule 92 (llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad .)
    MINUS           reduce using rule 92 (llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad .)
    GREATERTHAN     reduce using rule 92 (llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad .)
    LESSTHAN        reduce using rule 92 (llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad .)
    GREATERTHANEQUAL reduce using rule 92 (llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad .)
    LESSTHANEQUAL   reduce using rule 92 (llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad .)
    EQUALEQUAL      reduce using rule 92 (llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad .)
    NOTEQUAL        reduce using rule 92 (llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad .)
    AND             reduce using rule 92 (llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad .)
    OR              reduce using rule 92 (llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad .)
    RPAREN          reduce using rule 92 (llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad .)
    RBRACKET        reduce using rule 92 (llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad .)
    COMMA           reduce using rule 92 (llamada -> CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad .)


state 279

    (93) llamada1 -> expresion puntoVerifyArgumento llamada2 .

    RPAREN          reduce using rule 93 (llamada1 -> expresion puntoVerifyArgumento llamada2 .)


state 280

    (95) llamada2 -> COMMA . expresion puntoVerifyArgumento llamada2
    (108) expresion -> . compare expresion2
    (112) compare -> . exp compare1
    (121) exp -> . termino puntoSumaResta exp1
    (126) termino -> . factor puntoMultDivide termino1
    (132) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (133) factor -> . tipo_cte
    (134) factor -> . MINUS tipo_cte
    (135) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (92) llamada -> . CALL PUNTO ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    expresion                      shift and go to state 284
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 281

    (96) llamada2 -> empty .

    RPAREN          reduce using rule 96 (llamada2 -> empty .)


state 282

    (50) funciones3 -> COMMA tipo ID puntoCreateVar puntoCreateVarType puntoPushParam . funciones3
    (50) funciones3 -> . COMMA tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (51) funciones3 -> . empty
    (149) empty -> .

    COMMA           shift and go to state 160
    RPAREN          reduce using rule 149 (empty -> .)

    funciones3                     shift and go to state 285
    empty                          shift and go to state 161

state 283

    (82) condicion1 -> ELSE puntoCreateElseQuad bloque .

    ID              reduce using rule 82 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    IF              reduce using rule 82 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    PRINT           reduce using rule 82 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    RETURN          reduce using rule 82 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    WHILE           reduce using rule 82 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    DO              reduce using rule 82 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    CALL            reduce using rule 82 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    RBLOQUE         reduce using rule 82 (condicion1 -> ELSE puntoCreateElseQuad bloque .)


state 284

    (95) llamada2 -> COMMA expresion . puntoVerifyArgumento llamada2
    (98) puntoVerifyArgumento -> .

    COMMA           reduce using rule 98 (puntoVerifyArgumento -> .)
    RPAREN          reduce using rule 98 (puntoVerifyArgumento -> .)

    puntoVerifyArgumento           shift and go to state 286

state 285

    (50) funciones3 -> COMMA tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3 .

    RPAREN          reduce using rule 50 (funciones3 -> COMMA tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3 .)


state 286

    (95) llamada2 -> COMMA expresion puntoVerifyArgumento . llamada2
    (95) llamada2 -> . COMMA expresion puntoVerifyArgumento llamada2
    (96) llamada2 -> . empty
    (149) empty -> .

    COMMA           shift and go to state 280
    RPAREN          reduce using rule 149 (empty -> .)

    llamada2                       shift and go to state 287
    empty                          shift and go to state 281

state 287

    (95) llamada2 -> COMMA expresion puntoVerifyArgumento llamada2 .

    RPAREN          reduce using rule 95 (llamada2 -> COMMA expresion puntoVerifyArgumento llamada2 .)

