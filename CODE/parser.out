Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal
Rule 2     programa1 -> vars programa1
Rule 3     programa1 -> empty
Rule 4     programa2 -> funciones programa2
Rule 5     programa2 -> empty
Rule 6     puntoCreateProgram -> <empty>
Rule 7     puntoChangeStateLocal -> <empty>
Rule 8     puntoPrintFinal -> <empty>
Rule 9     vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
Rule 10    vars1 -> COMMA ID puntoCreateVar vars1
Rule 11    vars1 -> empty
Rule 12    vars2 -> tipo puntoCreateVarType
Rule 13    vars2 -> tipo_graph
Rule 14    vars3 -> LBRACKET CTE_INT puntoChangeDimension RBRACKET
Rule 15    vars3 -> empty
Rule 16    puntoChangeDimension -> <empty>
Rule 17    puntoCreateVarTable -> <empty>
Rule 18    puntoCreateVarTableState -> <empty>
Rule 19    puntoCreateVar -> <empty>
Rule 20    puntoCreateVarType -> <empty>
Rule 21    puntoCreateDimension -> <empty>
Rule 22    tipo -> INT puntoCurrentType
Rule 23    tipo -> FLOAT puntoCurrentType
Rule 24    tipo -> BOOL puntoCurrentType
Rule 25    tipo -> CHAR puntoCurrentType
Rule 26    puntoCurrentType -> <empty>
Rule 27    tipo_cte -> CTE_INT puntoPushInt
Rule 28    tipo_cte -> CTE_FLOAT puntoPushFloat
Rule 29    tipo_cte -> CTE_BOOL puntoPushBool
Rule 30    tipo_cte -> CTE_CHAR puntoPushChar
Rule 31    tipo_cte -> ID puntoPushID tipo_cte1
Rule 32    tipo_cte -> llamada
Rule 33    tipo_cte1 -> LBRACKET CTE_INT RBRACKET
Rule 34    tipo_cte1 -> funciones_arr
Rule 35    tipo_cte1 -> empty
Rule 36    puntoPushInt -> <empty>
Rule 37    puntoPushFloat -> <empty>
Rule 38    puntoPushBool -> <empty>
Rule 39    puntoPushChar -> <empty>
Rule 40    puntoPushID -> <empty>
Rule 41    tipo_graph -> PIECHART
Rule 42    tipo_graph -> BARGRAPH
Rule 43    tipo_graph -> PLOTLINE
Rule 44    funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
Rule 45    funciones1 -> VOID
Rule 46    funciones1 -> tipo
Rule 47    funciones2 -> tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
Rule 48    funciones2 -> empty
Rule 49    funciones3 -> COMMA tipo ID funciones3
Rule 50    funciones3 -> empty
Rule 51    puntoChangeStateFuncion -> <empty>
Rule 52    puntoCreateParamTable -> <empty>
Rule 53    puntoPushParam -> <empty>
Rule 54    puntoCreateParamCount -> <empty>
Rule 55    puntoFinalFuncQuad -> <empty>
Rule 56    main -> VOID MAIN LPAREN RPAREN bloque_modular
Rule 57    bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE
Rule 58    bloque_modular1 -> vars bloque_modular1
Rule 59    bloque_modular1 -> empty
Rule 60    bloque_modular2 -> estatuto bloque_modular2
Rule 61    bloque_modular2 -> empty
Rule 62    bloque -> LBLOQUE bloque1 RBLOQUE
Rule 63    bloque1 -> estatuto bloque1
Rule 64    bloque1 -> empty
Rule 65    estatuto -> asignacion
Rule 66    estatuto -> condicion
Rule 67    estatuto -> escritura
Rule 68    estatuto -> return
Rule 69    estatuto -> while
Rule 70    estatuto -> do_while
Rule 71    estatuto -> llamada SEMICOLON
Rule 72    asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
Rule 73    asignacion1 -> LBRACKET expresion RBRACKET
Rule 74    asignacion1 -> empty
Rule 75    asignacion2 -> expresion puntoCreateAsignacionQuad
Rule 76    asignacion2 -> leida
Rule 77    puntoSaveIDAsignacion -> <empty>
Rule 78    puntoCreateAsignacionQuad -> <empty>
Rule 79    leida -> INPUT LPAREN RPAREN
Rule 80    condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
Rule 81    condicion1 -> ELSE puntoCreateElseQuad bloque
Rule 82    condicion1 -> empty
Rule 83    puntoCreateIfQuad -> <empty>
Rule 84    puntoFillIfQuad -> <empty>
Rule 85    puntoCreateElseQuad -> <empty>
Rule 86    escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON
Rule 87    escritura1 -> expresion puntoCreatePrintQuad
Rule 88    escritura1 -> CTE_STRING puntoCreatePrintConstantQuad
Rule 89    puntoCreatePrintQuad -> <empty>
Rule 90    puntoCreatePrintConstantQuad -> <empty>
Rule 91    llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN
Rule 92    llamada1 -> expresion llamada2
Rule 93    llamada1 -> empty
Rule 94    llamada2 -> COMMA tipo ID llamada2
Rule 95    llamada2 -> empty
Rule 96    return -> RETURN expresion SEMICOLON
Rule 97    while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
Rule 98    puntoPushSaltoWhile -> <empty>
Rule 99    puntoCreateWhileQuad -> <empty>
Rule 100   puntoEndWhileQuad -> <empty>
Rule 101   do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
Rule 102   puntoPushSaltoDoWhile -> <empty>
Rule 103   puntoCreateDoWhileQuad -> <empty>
Rule 104   expresion -> compare expresion2
Rule 105   expresion2 -> AND compare
Rule 106   expresion2 -> OR compare
Rule 107   expresion2 -> empty
Rule 108   compare -> exp compare1
Rule 109   compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional
Rule 110   compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional
Rule 111   compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 112   compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 113   compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 114   compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 115   compare1 -> empty
Rule 116   puntoOperacionRelacional -> <empty>
Rule 117   exp -> termino puntoSumaResta exp1
Rule 118   exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1
Rule 119   exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1
Rule 120   exp1 -> empty
Rule 121   puntoSumaResta -> <empty>
Rule 122   termino -> factor puntoMultDivide termino1
Rule 123   termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1
Rule 124   termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1
Rule 125   termino1 -> empty
Rule 126   puntoMultDivide -> <empty>
Rule 127   puntoPushOperador -> <empty>
Rule 128   factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
Rule 129   factor -> tipo_cte
Rule 130   factor -> MINUS tipo_cte
Rule 131   factor -> NOT tipo_cte
Rule 132   puntoPushFondoFalso -> <empty>
Rule 133   puntoPopFondoFalso -> <empty>
Rule 134   funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN
Rule 135   funciones_arr1 -> MAX
Rule 136   funciones_arr1 -> MIN
Rule 137   funciones_arr1 -> RANGE
Rule 138   funciones_arr1 -> MEDIAN
Rule 139   funciones_arr1 -> AVERAGE
Rule 140   funciones_arr1 -> IQRANGE
Rule 141   funciones_arr1 -> STDEV
Rule 142   funciones_arr1 -> VARIANCE
Rule 143   funciones_arr1 -> MODIFY
Rule 144   funciones_arr1 -> DRAW
Rule 145   empty -> <empty>

Terminals, with rules where they appear

AND                  : 105
AS                   : 9
AVERAGE              : 139
BARGRAPH             : 42
BOOL                 : 24
CALL                 : 91
CHAR                 : 25
COMMA                : 10 49 94
CTE_BOOL             : 29
CTE_CHAR             : 30
CTE_FLOAT            : 28
CTE_INT              : 14 27 33
CTE_STRING           : 88
DIVIDE               : 124
DO                   : 101
DRAW                 : 144
ELSE                 : 81
EQUALEQUAL           : 113
EQUALS               : 72
FLOAT                : 23
FUNC                 : 44
GREATERTHAN          : 109
GREATERTHANEQUAL     : 111
ID                   : 1 9 10 31 44 47 49 72 91 94
IF                   : 80
INPUT                : 79
INT                  : 22
IQRANGE              : 140
LBLOQUE              : 57 62
LBRACKET             : 14 33 73
LESSTHAN             : 110
LESSTHANEQUAL        : 112
LPAREN               : 44 56 79 80 86 91 97 101 128 134
MAIN                 : 56
MAX                  : 135
MEDIAN               : 138
MIN                  : 136
MINUS                : 119 130
MODIFY               : 143
NOT                  : 131
NOTEQUAL             : 114
OR                   : 106
PIECHART             : 41
PLOTLINE             : 43
PLUS                 : 118
PRINT                : 86
PROGRAM              : 1
PUNTO                : 91 134
RANGE                : 137
RBLOQUE              : 57 62
RBRACKET             : 14 33 73
RETURN               : 96
RPAREN               : 44 56 79 80 86 91 97 101 128 134
SEMICOLON            : 1 9 71 72 86 96
STDEV                : 141
TIMES                : 123
VAR                  : 9
VARIANCE             : 142
VOID                 : 45 56
WHILE                : 97 101
error                : 

Nonterminals, with rules where they appear

asignacion           : 65
asignacion1          : 72
asignacion2          : 72
bloque               : 80 81 97 101
bloque1              : 62 63
bloque_modular       : 44 56
bloque_modular1      : 57 58
bloque_modular2      : 57 60
compare              : 104 105 106
compare1             : 108
condicion            : 66
condicion1           : 80
do_while             : 70
empty                : 3 5 11 15 35 48 50 59 61 64 74 82 93 95 107 115 120 125
escritura            : 67
escritura1           : 86
estatuto             : 60 63
exp                  : 108 109 110 111 112 113 114
exp1                 : 117 118 119
expresion            : 73 75 80 87 92 96 97 101 128
expresion2           : 104
factor               : 122 123 124
funciones            : 4
funciones1           : 44
funciones2           : 44
funciones3           : 47 49
funciones_arr        : 34
funciones_arr1       : 134
leida                : 76
llamada              : 32 71
llamada1             : 91
llamada2             : 92 94
main                 : 1
programa             : 0
programa1            : 1 2
programa2            : 1 4
puntoChangeDimension : 14
puntoChangeStateFuncion : 44
puntoChangeStateLocal : 1
puntoCreateAsignacionQuad : 75
puntoCreateDimension : 9
puntoCreateDoWhileQuad : 101
puntoCreateElseQuad  : 81
puntoCreateIfQuad    : 80
puntoCreateParamCount : 44
puntoCreateParamTable : 44
puntoCreatePrintConstantQuad : 88
puntoCreatePrintQuad : 87
puntoCreateProgram   : 1
puntoCreateVar       : 9 10 47
puntoCreateVarTable  : 1
puntoCreateVarTableState : 1 1 44
puntoCreateVarType   : 12 47
puntoCreateWhileQuad : 97
puntoCurrentType     : 22 23 24 25
puntoEndWhileQuad    : 97
puntoFillIfQuad      : 80
puntoFinalFuncQuad   : 44
puntoMultDivide      : 122 123 124
puntoOperacionRelacional : 109 110 111 112 113 114
puntoPopFondoFalso   : 128
puntoPrintFinal      : 1
puntoPushBool        : 29
puntoPushChar        : 30
puntoPushFloat       : 28
puntoPushFondoFalso  : 128
puntoPushID          : 31
puntoPushInt         : 27
puntoPushOperador    : 109 110 111 112 113 114 118 119 123 124
puntoPushParam       : 47
puntoPushSaltoDoWhile : 101
puntoPushSaltoWhile  : 97
puntoSaveIDAsignacion : 72
puntoSumaResta       : 117 118 119
return               : 68
termino              : 117 118 119
termino1             : 122 123 124
tipo                 : 12 46 47 49 94
tipo_cte             : 129 130 131
tipo_cte1            : 31
tipo_graph           : 13
vars                 : 2 58
vars1                : 9 10
vars2                : 9
vars3                : 9
while                : 69

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal
    (6) puntoCreateProgram -> .

    SEMICOLON       reduce using rule 6 (puntoCreateProgram -> .)

    puntoCreateProgram             shift and go to state 4

state 4

    (1) programa -> PROGRAM ID puntoCreateProgram . SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON . puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal
    (17) puntoCreateVarTable -> .

    VAR             reduce using rule 17 (puntoCreateVarTable -> .)
    FUNC            reduce using rule 17 (puntoCreateVarTable -> .)
    VOID            reduce using rule 17 (puntoCreateVarTable -> .)

    puntoCreateVarTable            shift and go to state 6

state 6

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable . puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal
    (18) puntoCreateVarTableState -> .

    VAR             reduce using rule 18 (puntoCreateVarTableState -> .)
    FUNC            reduce using rule 18 (puntoCreateVarTableState -> .)
    VOID            reduce using rule 18 (puntoCreateVarTableState -> .)

    puntoCreateVarTableState       shift and go to state 7

state 7

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState . programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal
    (2) programa1 -> . vars programa1
    (3) programa1 -> . empty
    (9) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (145) empty -> .

    VAR             shift and go to state 11
    FUNC            reduce using rule 145 (empty -> .)
    VOID            reduce using rule 145 (empty -> .)

    programa1                      shift and go to state 8
    vars                           shift and go to state 9
    empty                          shift and go to state 10

state 8

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 . programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal
    (4) programa2 -> . funciones programa2
    (5) programa2 -> . empty
    (44) funciones -> . FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (145) empty -> .

    FUNC            shift and go to state 15
    VOID            reduce using rule 145 (empty -> .)

    programa2                      shift and go to state 12
    funciones                      shift and go to state 13
    empty                          shift and go to state 14

state 9

    (2) programa1 -> vars . programa1
    (2) programa1 -> . vars programa1
    (3) programa1 -> . empty
    (9) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (145) empty -> .

    VAR             shift and go to state 11
    FUNC            reduce using rule 145 (empty -> .)
    VOID            reduce using rule 145 (empty -> .)

    vars                           shift and go to state 9
    programa1                      shift and go to state 16
    empty                          shift and go to state 10

state 10

    (3) programa1 -> empty .

    FUNC            reduce using rule 3 (programa1 -> empty .)
    VOID            reduce using rule 3 (programa1 -> empty .)


state 11

    (9) vars -> VAR . ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON

    ID              shift and go to state 17


state 12

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 . puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal
    (7) puntoChangeStateLocal -> .

    VOID            reduce using rule 7 (puntoChangeStateLocal -> .)

    puntoChangeStateLocal          shift and go to state 18

state 13

    (4) programa2 -> funciones . programa2
    (4) programa2 -> . funciones programa2
    (5) programa2 -> . empty
    (44) funciones -> . FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (145) empty -> .

    FUNC            shift and go to state 15
    VOID            reduce using rule 145 (empty -> .)

    funciones                      shift and go to state 13
    programa2                      shift and go to state 19
    empty                          shift and go to state 14

state 14

    (5) programa2 -> empty .

    VOID            reduce using rule 5 (programa2 -> empty .)


state 15

    (44) funciones -> FUNC . funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (45) funciones1 -> . VOID
    (46) funciones1 -> . tipo
    (22) tipo -> . INT puntoCurrentType
    (23) tipo -> . FLOAT puntoCurrentType
    (24) tipo -> . BOOL puntoCurrentType
    (25) tipo -> . CHAR puntoCurrentType

    VOID            shift and go to state 21
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 25
    CHAR            shift and go to state 26

    funciones1                     shift and go to state 20
    tipo                           shift and go to state 22

state 16

    (2) programa1 -> vars programa1 .

    FUNC            reduce using rule 2 (programa1 -> vars programa1 .)
    VOID            reduce using rule 2 (programa1 -> vars programa1 .)


state 17

    (9) vars -> VAR ID . puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (19) puntoCreateVar -> .

    COMMA           reduce using rule 19 (puntoCreateVar -> .)
    AS              reduce using rule 19 (puntoCreateVar -> .)

    puntoCreateVar                 shift and go to state 27

state 18

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal . puntoCreateVarTableState main puntoPrintFinal
    (18) puntoCreateVarTableState -> .

    VOID            reduce using rule 18 (puntoCreateVarTableState -> .)

    puntoCreateVarTableState       shift and go to state 28

state 19

    (4) programa2 -> funciones programa2 .

    VOID            reduce using rule 4 (programa2 -> funciones programa2 .)


state 20

    (44) funciones -> FUNC funciones1 . ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad

    ID              shift and go to state 29


state 21

    (45) funciones1 -> VOID .

    ID              reduce using rule 45 (funciones1 -> VOID .)


state 22

    (46) funciones1 -> tipo .

    ID              reduce using rule 46 (funciones1 -> tipo .)


state 23

    (22) tipo -> INT . puntoCurrentType
    (26) puntoCurrentType -> .

    ID              reduce using rule 26 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 26 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 26 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 30

state 24

    (23) tipo -> FLOAT . puntoCurrentType
    (26) puntoCurrentType -> .

    ID              reduce using rule 26 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 26 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 26 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 31

state 25

    (24) tipo -> BOOL . puntoCurrentType
    (26) puntoCurrentType -> .

    ID              reduce using rule 26 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 26 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 26 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 32

state 26

    (25) tipo -> CHAR . puntoCurrentType
    (26) puntoCurrentType -> .

    ID              reduce using rule 26 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 26 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 26 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 33

state 27

    (9) vars -> VAR ID puntoCreateVar . vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (10) vars1 -> . COMMA ID puntoCreateVar vars1
    (11) vars1 -> . empty
    (145) empty -> .

    COMMA           shift and go to state 35
    AS              reduce using rule 145 (empty -> .)

    vars1                          shift and go to state 34
    empty                          shift and go to state 36

state 28

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState . main puntoPrintFinal
    (56) main -> . VOID MAIN LPAREN RPAREN bloque_modular

    VOID            shift and go to state 38

    main                           shift and go to state 37

state 29

    (44) funciones -> FUNC funciones1 ID . puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (51) puntoChangeStateFuncion -> .

    LPAREN          reduce using rule 51 (puntoChangeStateFuncion -> .)

    puntoChangeStateFuncion        shift and go to state 39

state 30

    (22) tipo -> INT puntoCurrentType .

    ID              reduce using rule 22 (tipo -> INT puntoCurrentType .)
    LBRACKET        reduce using rule 22 (tipo -> INT puntoCurrentType .)
    SEMICOLON       reduce using rule 22 (tipo -> INT puntoCurrentType .)


state 31

    (23) tipo -> FLOAT puntoCurrentType .

    ID              reduce using rule 23 (tipo -> FLOAT puntoCurrentType .)
    LBRACKET        reduce using rule 23 (tipo -> FLOAT puntoCurrentType .)
    SEMICOLON       reduce using rule 23 (tipo -> FLOAT puntoCurrentType .)


state 32

    (24) tipo -> BOOL puntoCurrentType .

    ID              reduce using rule 24 (tipo -> BOOL puntoCurrentType .)
    LBRACKET        reduce using rule 24 (tipo -> BOOL puntoCurrentType .)
    SEMICOLON       reduce using rule 24 (tipo -> BOOL puntoCurrentType .)


state 33

    (25) tipo -> CHAR puntoCurrentType .

    ID              reduce using rule 25 (tipo -> CHAR puntoCurrentType .)
    LBRACKET        reduce using rule 25 (tipo -> CHAR puntoCurrentType .)
    SEMICOLON       reduce using rule 25 (tipo -> CHAR puntoCurrentType .)


state 34

    (9) vars -> VAR ID puntoCreateVar vars1 . AS vars2 vars3 puntoCreateDimension SEMICOLON

    AS              shift and go to state 40


state 35

    (10) vars1 -> COMMA . ID puntoCreateVar vars1

    ID              shift and go to state 41


state 36

    (11) vars1 -> empty .

    AS              reduce using rule 11 (vars1 -> empty .)


state 37

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main . puntoPrintFinal
    (8) puntoPrintFinal -> .

    $end            reduce using rule 8 (puntoPrintFinal -> .)

    puntoPrintFinal                shift and go to state 42

state 38

    (56) main -> VOID . MAIN LPAREN RPAREN bloque_modular

    MAIN            shift and go to state 43


state 39

    (44) funciones -> FUNC funciones1 ID puntoChangeStateFuncion . puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (18) puntoCreateVarTableState -> .

    LPAREN          reduce using rule 18 (puntoCreateVarTableState -> .)

    puntoCreateVarTableState       shift and go to state 44

state 40

    (9) vars -> VAR ID puntoCreateVar vars1 AS . vars2 vars3 puntoCreateDimension SEMICOLON
    (12) vars2 -> . tipo puntoCreateVarType
    (13) vars2 -> . tipo_graph
    (22) tipo -> . INT puntoCurrentType
    (23) tipo -> . FLOAT puntoCurrentType
    (24) tipo -> . BOOL puntoCurrentType
    (25) tipo -> . CHAR puntoCurrentType
    (41) tipo_graph -> . PIECHART
    (42) tipo_graph -> . BARGRAPH
    (43) tipo_graph -> . PLOTLINE

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 25
    CHAR            shift and go to state 26
    PIECHART        shift and go to state 48
    BARGRAPH        shift and go to state 49
    PLOTLINE        shift and go to state 50

    vars2                          shift and go to state 45
    tipo                           shift and go to state 46
    tipo_graph                     shift and go to state 47

state 41

    (10) vars1 -> COMMA ID . puntoCreateVar vars1
    (19) puntoCreateVar -> .

    COMMA           reduce using rule 19 (puntoCreateVar -> .)
    AS              reduce using rule 19 (puntoCreateVar -> .)

    puntoCreateVar                 shift and go to state 51

state 42

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal .

    $end            reduce using rule 1 (programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal .)


state 43

    (56) main -> VOID MAIN . LPAREN RPAREN bloque_modular

    LPAREN          shift and go to state 52


state 44

    (44) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState . LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad

    LPAREN          shift and go to state 53


state 45

    (9) vars -> VAR ID puntoCreateVar vars1 AS vars2 . vars3 puntoCreateDimension SEMICOLON
    (14) vars3 -> . LBRACKET CTE_INT puntoChangeDimension RBRACKET
    (15) vars3 -> . empty
    (145) empty -> .

    LBRACKET        shift and go to state 55
    SEMICOLON       reduce using rule 145 (empty -> .)

    vars3                          shift and go to state 54
    empty                          shift and go to state 56

state 46

    (12) vars2 -> tipo . puntoCreateVarType
    (20) puntoCreateVarType -> .

    LBRACKET        reduce using rule 20 (puntoCreateVarType -> .)
    SEMICOLON       reduce using rule 20 (puntoCreateVarType -> .)

    puntoCreateVarType             shift and go to state 57

state 47

    (13) vars2 -> tipo_graph .

    LBRACKET        reduce using rule 13 (vars2 -> tipo_graph .)
    SEMICOLON       reduce using rule 13 (vars2 -> tipo_graph .)


state 48

    (41) tipo_graph -> PIECHART .

    LBRACKET        reduce using rule 41 (tipo_graph -> PIECHART .)
    SEMICOLON       reduce using rule 41 (tipo_graph -> PIECHART .)


state 49

    (42) tipo_graph -> BARGRAPH .

    LBRACKET        reduce using rule 42 (tipo_graph -> BARGRAPH .)
    SEMICOLON       reduce using rule 42 (tipo_graph -> BARGRAPH .)


state 50

    (43) tipo_graph -> PLOTLINE .

    LBRACKET        reduce using rule 43 (tipo_graph -> PLOTLINE .)
    SEMICOLON       reduce using rule 43 (tipo_graph -> PLOTLINE .)


state 51

    (10) vars1 -> COMMA ID puntoCreateVar . vars1
    (10) vars1 -> . COMMA ID puntoCreateVar vars1
    (11) vars1 -> . empty
    (145) empty -> .

    COMMA           shift and go to state 35
    AS              reduce using rule 145 (empty -> .)

    vars1                          shift and go to state 58
    empty                          shift and go to state 36

state 52

    (56) main -> VOID MAIN LPAREN . RPAREN bloque_modular

    RPAREN          shift and go to state 59


state 53

    (44) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN . puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (52) puntoCreateParamTable -> .

    INT             reduce using rule 52 (puntoCreateParamTable -> .)
    FLOAT           reduce using rule 52 (puntoCreateParamTable -> .)
    BOOL            reduce using rule 52 (puntoCreateParamTable -> .)
    CHAR            reduce using rule 52 (puntoCreateParamTable -> .)
    RPAREN          reduce using rule 52 (puntoCreateParamTable -> .)

    puntoCreateParamTable          shift and go to state 60

state 54

    (9) vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 . puntoCreateDimension SEMICOLON
    (21) puntoCreateDimension -> .

    SEMICOLON       reduce using rule 21 (puntoCreateDimension -> .)

    puntoCreateDimension           shift and go to state 61

state 55

    (14) vars3 -> LBRACKET . CTE_INT puntoChangeDimension RBRACKET

    CTE_INT         shift and go to state 62


state 56

    (15) vars3 -> empty .

    SEMICOLON       reduce using rule 15 (vars3 -> empty .)


state 57

    (12) vars2 -> tipo puntoCreateVarType .

    LBRACKET        reduce using rule 12 (vars2 -> tipo puntoCreateVarType .)
    SEMICOLON       reduce using rule 12 (vars2 -> tipo puntoCreateVarType .)


state 58

    (10) vars1 -> COMMA ID puntoCreateVar vars1 .

    AS              reduce using rule 10 (vars1 -> COMMA ID puntoCreateVar vars1 .)


state 59

    (56) main -> VOID MAIN LPAREN RPAREN . bloque_modular
    (57) bloque_modular -> . LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE

    LBLOQUE         shift and go to state 64

    bloque_modular                 shift and go to state 63

state 60

    (44) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable . funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (47) funciones2 -> . tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (48) funciones2 -> . empty
    (22) tipo -> . INT puntoCurrentType
    (23) tipo -> . FLOAT puntoCurrentType
    (24) tipo -> . BOOL puntoCurrentType
    (25) tipo -> . CHAR puntoCurrentType
    (145) empty -> .

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 25
    CHAR            shift and go to state 26
    RPAREN          reduce using rule 145 (empty -> .)

    funciones2                     shift and go to state 65
    tipo                           shift and go to state 66
    empty                          shift and go to state 67

state 61

    (9) vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension . SEMICOLON

    SEMICOLON       shift and go to state 68


state 62

    (14) vars3 -> LBRACKET CTE_INT . puntoChangeDimension RBRACKET
    (16) puntoChangeDimension -> .

    RBRACKET        reduce using rule 16 (puntoChangeDimension -> .)

    puntoChangeDimension           shift and go to state 69

state 63

    (56) main -> VOID MAIN LPAREN RPAREN bloque_modular .

    $end            reduce using rule 56 (main -> VOID MAIN LPAREN RPAREN bloque_modular .)


state 64

    (57) bloque_modular -> LBLOQUE . bloque_modular1 bloque_modular2 RBLOQUE
    (58) bloque_modular1 -> . vars bloque_modular1
    (59) bloque_modular1 -> . empty
    (9) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (145) empty -> .

    VAR             shift and go to state 11
    ID              reduce using rule 145 (empty -> .)
    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    DO              reduce using rule 145 (empty -> .)
    CALL            reduce using rule 145 (empty -> .)
    RBLOQUE         reduce using rule 145 (empty -> .)

    bloque_modular1                shift and go to state 70
    vars                           shift and go to state 71
    empty                          shift and go to state 72

state 65

    (44) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 . RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad

    RPAREN          shift and go to state 73


state 66

    (47) funciones2 -> tipo . ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3

    ID              shift and go to state 74


state 67

    (48) funciones2 -> empty .

    RPAREN          reduce using rule 48 (funciones2 -> empty .)


state 68

    (9) vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .

    VAR             reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    FUNC            reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    VOID            reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    ID              reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    IF              reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    PRINT           reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    RETURN          reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    WHILE           reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    DO              reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    CALL            reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    RBLOQUE         reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)


state 69

    (14) vars3 -> LBRACKET CTE_INT puntoChangeDimension . RBRACKET

    RBRACKET        shift and go to state 75


state 70

    (57) bloque_modular -> LBLOQUE bloque_modular1 . bloque_modular2 RBLOQUE
    (60) bloque_modular2 -> . estatuto bloque_modular2
    (61) bloque_modular2 -> . empty
    (65) estatuto -> . asignacion
    (66) estatuto -> . condicion
    (67) estatuto -> . escritura
    (68) estatuto -> . return
    (69) estatuto -> . while
    (70) estatuto -> . do_while
    (71) estatuto -> . llamada SEMICOLON
    (145) empty -> .
    (72) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (80) condicion -> . IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (86) escritura -> . PRINT LPAREN escritura1 RPAREN SEMICOLON
    (96) return -> . RETURN expresion SEMICOLON
    (97) while -> . WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (101) do_while -> . DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    RBLOQUE         reduce using rule 145 (empty -> .)
    ID              shift and go to state 86
    IF              shift and go to state 87
    PRINT           shift and go to state 88
    RETURN          shift and go to state 89
    WHILE           shift and go to state 90
    DO              shift and go to state 91
    CALL            shift and go to state 92

    bloque_modular2                shift and go to state 76
    estatuto                       shift and go to state 77
    empty                          shift and go to state 78
    asignacion                     shift and go to state 79
    condicion                      shift and go to state 80
    escritura                      shift and go to state 81
    return                         shift and go to state 82
    while                          shift and go to state 83
    do_while                       shift and go to state 84
    llamada                        shift and go to state 85

state 71

    (58) bloque_modular1 -> vars . bloque_modular1
    (58) bloque_modular1 -> . vars bloque_modular1
    (59) bloque_modular1 -> . empty
    (9) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (145) empty -> .

    VAR             shift and go to state 11
    ID              reduce using rule 145 (empty -> .)
    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    DO              reduce using rule 145 (empty -> .)
    CALL            reduce using rule 145 (empty -> .)
    RBLOQUE         reduce using rule 145 (empty -> .)

    vars                           shift and go to state 71
    bloque_modular1                shift and go to state 93
    empty                          shift and go to state 72

state 72

    (59) bloque_modular1 -> empty .

    ID              reduce using rule 59 (bloque_modular1 -> empty .)
    IF              reduce using rule 59 (bloque_modular1 -> empty .)
    PRINT           reduce using rule 59 (bloque_modular1 -> empty .)
    RETURN          reduce using rule 59 (bloque_modular1 -> empty .)
    WHILE           reduce using rule 59 (bloque_modular1 -> empty .)
    DO              reduce using rule 59 (bloque_modular1 -> empty .)
    CALL            reduce using rule 59 (bloque_modular1 -> empty .)
    RBLOQUE         reduce using rule 59 (bloque_modular1 -> empty .)


state 73

    (44) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN . puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (54) puntoCreateParamCount -> .

    LBLOQUE         reduce using rule 54 (puntoCreateParamCount -> .)

    puntoCreateParamCount          shift and go to state 94

state 74

    (47) funciones2 -> tipo ID . puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (19) puntoCreateVar -> .

    COMMA           reduce using rule 19 (puntoCreateVar -> .)
    RPAREN          reduce using rule 19 (puntoCreateVar -> .)

    puntoCreateVar                 shift and go to state 95

state 75

    (14) vars3 -> LBRACKET CTE_INT puntoChangeDimension RBRACKET .

    SEMICOLON       reduce using rule 14 (vars3 -> LBRACKET CTE_INT puntoChangeDimension RBRACKET .)


state 76

    (57) bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 . RBLOQUE

    RBLOQUE         shift and go to state 96


state 77

    (60) bloque_modular2 -> estatuto . bloque_modular2
    (60) bloque_modular2 -> . estatuto bloque_modular2
    (61) bloque_modular2 -> . empty
    (65) estatuto -> . asignacion
    (66) estatuto -> . condicion
    (67) estatuto -> . escritura
    (68) estatuto -> . return
    (69) estatuto -> . while
    (70) estatuto -> . do_while
    (71) estatuto -> . llamada SEMICOLON
    (145) empty -> .
    (72) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (80) condicion -> . IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (86) escritura -> . PRINT LPAREN escritura1 RPAREN SEMICOLON
    (96) return -> . RETURN expresion SEMICOLON
    (97) while -> . WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (101) do_while -> . DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    RBLOQUE         reduce using rule 145 (empty -> .)
    ID              shift and go to state 86
    IF              shift and go to state 87
    PRINT           shift and go to state 88
    RETURN          shift and go to state 89
    WHILE           shift and go to state 90
    DO              shift and go to state 91
    CALL            shift and go to state 92

    estatuto                       shift and go to state 77
    bloque_modular2                shift and go to state 97
    empty                          shift and go to state 78
    asignacion                     shift and go to state 79
    condicion                      shift and go to state 80
    escritura                      shift and go to state 81
    return                         shift and go to state 82
    while                          shift and go to state 83
    do_while                       shift and go to state 84
    llamada                        shift and go to state 85

state 78

    (61) bloque_modular2 -> empty .

    RBLOQUE         reduce using rule 61 (bloque_modular2 -> empty .)


state 79

    (65) estatuto -> asignacion .

    ID              reduce using rule 65 (estatuto -> asignacion .)
    IF              reduce using rule 65 (estatuto -> asignacion .)
    PRINT           reduce using rule 65 (estatuto -> asignacion .)
    RETURN          reduce using rule 65 (estatuto -> asignacion .)
    WHILE           reduce using rule 65 (estatuto -> asignacion .)
    DO              reduce using rule 65 (estatuto -> asignacion .)
    CALL            reduce using rule 65 (estatuto -> asignacion .)
    RBLOQUE         reduce using rule 65 (estatuto -> asignacion .)


state 80

    (66) estatuto -> condicion .

    ID              reduce using rule 66 (estatuto -> condicion .)
    IF              reduce using rule 66 (estatuto -> condicion .)
    PRINT           reduce using rule 66 (estatuto -> condicion .)
    RETURN          reduce using rule 66 (estatuto -> condicion .)
    WHILE           reduce using rule 66 (estatuto -> condicion .)
    DO              reduce using rule 66 (estatuto -> condicion .)
    CALL            reduce using rule 66 (estatuto -> condicion .)
    RBLOQUE         reduce using rule 66 (estatuto -> condicion .)


state 81

    (67) estatuto -> escritura .

    ID              reduce using rule 67 (estatuto -> escritura .)
    IF              reduce using rule 67 (estatuto -> escritura .)
    PRINT           reduce using rule 67 (estatuto -> escritura .)
    RETURN          reduce using rule 67 (estatuto -> escritura .)
    WHILE           reduce using rule 67 (estatuto -> escritura .)
    DO              reduce using rule 67 (estatuto -> escritura .)
    CALL            reduce using rule 67 (estatuto -> escritura .)
    RBLOQUE         reduce using rule 67 (estatuto -> escritura .)


state 82

    (68) estatuto -> return .

    ID              reduce using rule 68 (estatuto -> return .)
    IF              reduce using rule 68 (estatuto -> return .)
    PRINT           reduce using rule 68 (estatuto -> return .)
    RETURN          reduce using rule 68 (estatuto -> return .)
    WHILE           reduce using rule 68 (estatuto -> return .)
    DO              reduce using rule 68 (estatuto -> return .)
    CALL            reduce using rule 68 (estatuto -> return .)
    RBLOQUE         reduce using rule 68 (estatuto -> return .)


state 83

    (69) estatuto -> while .

    ID              reduce using rule 69 (estatuto -> while .)
    IF              reduce using rule 69 (estatuto -> while .)
    PRINT           reduce using rule 69 (estatuto -> while .)
    RETURN          reduce using rule 69 (estatuto -> while .)
    WHILE           reduce using rule 69 (estatuto -> while .)
    DO              reduce using rule 69 (estatuto -> while .)
    CALL            reduce using rule 69 (estatuto -> while .)
    RBLOQUE         reduce using rule 69 (estatuto -> while .)


state 84

    (70) estatuto -> do_while .

    ID              reduce using rule 70 (estatuto -> do_while .)
    IF              reduce using rule 70 (estatuto -> do_while .)
    PRINT           reduce using rule 70 (estatuto -> do_while .)
    RETURN          reduce using rule 70 (estatuto -> do_while .)
    WHILE           reduce using rule 70 (estatuto -> do_while .)
    DO              reduce using rule 70 (estatuto -> do_while .)
    CALL            reduce using rule 70 (estatuto -> do_while .)
    RBLOQUE         reduce using rule 70 (estatuto -> do_while .)


state 85

    (71) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 98


state 86

    (72) asignacion -> ID . puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (77) puntoSaveIDAsignacion -> .

    LBRACKET        reduce using rule 77 (puntoSaveIDAsignacion -> .)
    EQUALS          reduce using rule 77 (puntoSaveIDAsignacion -> .)

    puntoSaveIDAsignacion          shift and go to state 99

state 87

    (80) condicion -> IF . LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad

    LPAREN          shift and go to state 100


state 88

    (86) escritura -> PRINT . LPAREN escritura1 RPAREN SEMICOLON

    LPAREN          shift and go to state 101


state 89

    (96) return -> RETURN . expresion SEMICOLON
    (104) expresion -> . compare expresion2
    (108) compare -> . exp compare1
    (117) exp -> . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    expresion                      shift and go to state 102
    compare                        shift and go to state 103
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 90

    (97) while -> WHILE . puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (98) puntoPushSaltoWhile -> .

    LPAREN          reduce using rule 98 (puntoPushSaltoWhile -> .)

    puntoPushSaltoWhile            shift and go to state 117

state 91

    (101) do_while -> DO . puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (102) puntoPushSaltoDoWhile -> .

    LBLOQUE         reduce using rule 102 (puntoPushSaltoDoWhile -> .)

    puntoPushSaltoDoWhile          shift and go to state 118

state 92

    (91) llamada -> CALL . PUNTO ID LPAREN llamada1 RPAREN

    PUNTO           shift and go to state 119


state 93

    (58) bloque_modular1 -> vars bloque_modular1 .

    ID              reduce using rule 58 (bloque_modular1 -> vars bloque_modular1 .)
    IF              reduce using rule 58 (bloque_modular1 -> vars bloque_modular1 .)
    PRINT           reduce using rule 58 (bloque_modular1 -> vars bloque_modular1 .)
    RETURN          reduce using rule 58 (bloque_modular1 -> vars bloque_modular1 .)
    WHILE           reduce using rule 58 (bloque_modular1 -> vars bloque_modular1 .)
    DO              reduce using rule 58 (bloque_modular1 -> vars bloque_modular1 .)
    CALL            reduce using rule 58 (bloque_modular1 -> vars bloque_modular1 .)
    RBLOQUE         reduce using rule 58 (bloque_modular1 -> vars bloque_modular1 .)


state 94

    (44) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount . bloque_modular puntoFinalFuncQuad
    (57) bloque_modular -> . LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE

    LBLOQUE         shift and go to state 64

    bloque_modular                 shift and go to state 120

state 95

    (47) funciones2 -> tipo ID puntoCreateVar . puntoCreateVarType puntoPushParam funciones3
    (20) puntoCreateVarType -> .

    COMMA           reduce using rule 20 (puntoCreateVarType -> .)
    RPAREN          reduce using rule 20 (puntoCreateVarType -> .)

    puntoCreateVarType             shift and go to state 121

state 96

    (57) bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .

    $end            reduce using rule 57 (bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .)
    FUNC            reduce using rule 57 (bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .)
    VOID            reduce using rule 57 (bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .)


state 97

    (60) bloque_modular2 -> estatuto bloque_modular2 .

    RBLOQUE         reduce using rule 60 (bloque_modular2 -> estatuto bloque_modular2 .)


state 98

    (71) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 71 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 71 (estatuto -> llamada SEMICOLON .)
    PRINT           reduce using rule 71 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 71 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 71 (estatuto -> llamada SEMICOLON .)
    DO              reduce using rule 71 (estatuto -> llamada SEMICOLON .)
    CALL            reduce using rule 71 (estatuto -> llamada SEMICOLON .)
    RBLOQUE         reduce using rule 71 (estatuto -> llamada SEMICOLON .)


state 99

    (72) asignacion -> ID puntoSaveIDAsignacion . asignacion1 EQUALS asignacion2 SEMICOLON
    (73) asignacion1 -> . LBRACKET expresion RBRACKET
    (74) asignacion1 -> . empty
    (145) empty -> .

    LBRACKET        shift and go to state 123
    EQUALS          reduce using rule 145 (empty -> .)

    asignacion1                    shift and go to state 122
    empty                          shift and go to state 124

state 100

    (80) condicion -> IF LPAREN . expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (104) expresion -> . compare expresion2
    (108) compare -> . exp compare1
    (117) exp -> . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    expresion                      shift and go to state 125
    compare                        shift and go to state 103
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 101

    (86) escritura -> PRINT LPAREN . escritura1 RPAREN SEMICOLON
    (87) escritura1 -> . expresion puntoCreatePrintQuad
    (88) escritura1 -> . CTE_STRING puntoCreatePrintConstantQuad
    (104) expresion -> . compare expresion2
    (108) compare -> . exp compare1
    (117) exp -> . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    CTE_STRING      shift and go to state 128
    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    escritura1                     shift and go to state 126
    expresion                      shift and go to state 127
    compare                        shift and go to state 103
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 102

    (96) return -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 129


state 103

    (104) expresion -> compare . expresion2
    (105) expresion2 -> . AND compare
    (106) expresion2 -> . OR compare
    (107) expresion2 -> . empty
    (145) empty -> .

    AND             shift and go to state 131
    OR              shift and go to state 132
    SEMICOLON       reduce using rule 145 (empty -> .)
    RPAREN          reduce using rule 145 (empty -> .)
    RBRACKET        reduce using rule 145 (empty -> .)
    COMMA           reduce using rule 145 (empty -> .)

    expresion2                     shift and go to state 130
    empty                          shift and go to state 133

state 104

    (108) compare -> exp . compare1
    (109) compare1 -> . GREATERTHAN puntoPushOperador exp puntoOperacionRelacional
    (110) compare1 -> . LESSTHAN puntoPushOperador exp puntoOperacionRelacional
    (111) compare1 -> . GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
    (112) compare1 -> . LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
    (113) compare1 -> . EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional
    (114) compare1 -> . NOTEQUAL puntoPushOperador exp puntoOperacionRelacional
    (115) compare1 -> . empty
    (145) empty -> .

    GREATERTHAN     shift and go to state 135
    LESSTHAN        shift and go to state 136
    GREATERTHANEQUAL shift and go to state 137
    LESSTHANEQUAL   shift and go to state 138
    EQUALEQUAL      shift and go to state 139
    NOTEQUAL        shift and go to state 140
    AND             reduce using rule 145 (empty -> .)
    OR              reduce using rule 145 (empty -> .)
    SEMICOLON       reduce using rule 145 (empty -> .)
    RPAREN          reduce using rule 145 (empty -> .)
    RBRACKET        reduce using rule 145 (empty -> .)
    COMMA           reduce using rule 145 (empty -> .)

    compare1                       shift and go to state 134
    empty                          shift and go to state 141

state 105

    (117) exp -> termino . puntoSumaResta exp1
    (121) puntoSumaResta -> .

    PLUS            reduce using rule 121 (puntoSumaResta -> .)
    MINUS           reduce using rule 121 (puntoSumaResta -> .)
    GREATERTHAN     reduce using rule 121 (puntoSumaResta -> .)
    LESSTHAN        reduce using rule 121 (puntoSumaResta -> .)
    GREATERTHANEQUAL reduce using rule 121 (puntoSumaResta -> .)
    LESSTHANEQUAL   reduce using rule 121 (puntoSumaResta -> .)
    EQUALEQUAL      reduce using rule 121 (puntoSumaResta -> .)
    NOTEQUAL        reduce using rule 121 (puntoSumaResta -> .)
    AND             reduce using rule 121 (puntoSumaResta -> .)
    OR              reduce using rule 121 (puntoSumaResta -> .)
    SEMICOLON       reduce using rule 121 (puntoSumaResta -> .)
    RPAREN          reduce using rule 121 (puntoSumaResta -> .)
    RBRACKET        reduce using rule 121 (puntoSumaResta -> .)
    COMMA           reduce using rule 121 (puntoSumaResta -> .)

    puntoSumaResta                 shift and go to state 142

state 106

    (122) termino -> factor . puntoMultDivide termino1
    (126) puntoMultDivide -> .

    TIMES           reduce using rule 126 (puntoMultDivide -> .)
    DIVIDE          reduce using rule 126 (puntoMultDivide -> .)
    PLUS            reduce using rule 126 (puntoMultDivide -> .)
    MINUS           reduce using rule 126 (puntoMultDivide -> .)
    GREATERTHAN     reduce using rule 126 (puntoMultDivide -> .)
    LESSTHAN        reduce using rule 126 (puntoMultDivide -> .)
    GREATERTHANEQUAL reduce using rule 126 (puntoMultDivide -> .)
    LESSTHANEQUAL   reduce using rule 126 (puntoMultDivide -> .)
    EQUALEQUAL      reduce using rule 126 (puntoMultDivide -> .)
    NOTEQUAL        reduce using rule 126 (puntoMultDivide -> .)
    AND             reduce using rule 126 (puntoMultDivide -> .)
    OR              reduce using rule 126 (puntoMultDivide -> .)
    SEMICOLON       reduce using rule 126 (puntoMultDivide -> .)
    RPAREN          reduce using rule 126 (puntoMultDivide -> .)
    RBRACKET        reduce using rule 126 (puntoMultDivide -> .)
    COMMA           reduce using rule 126 (puntoMultDivide -> .)

    puntoMultDivide                shift and go to state 143

state 107

    (128) factor -> LPAREN . puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (132) puntoPushFondoFalso -> .

    LPAREN          reduce using rule 132 (puntoPushFondoFalso -> .)
    MINUS           reduce using rule 132 (puntoPushFondoFalso -> .)
    NOT             reduce using rule 132 (puntoPushFondoFalso -> .)
    CTE_INT         reduce using rule 132 (puntoPushFondoFalso -> .)
    CTE_FLOAT       reduce using rule 132 (puntoPushFondoFalso -> .)
    CTE_BOOL        reduce using rule 132 (puntoPushFondoFalso -> .)
    CTE_CHAR        reduce using rule 132 (puntoPushFondoFalso -> .)
    ID              reduce using rule 132 (puntoPushFondoFalso -> .)
    CALL            reduce using rule 132 (puntoPushFondoFalso -> .)

    puntoPushFondoFalso            shift and go to state 144

state 108

    (129) factor -> tipo_cte .

    TIMES           reduce using rule 129 (factor -> tipo_cte .)
    DIVIDE          reduce using rule 129 (factor -> tipo_cte .)
    PLUS            reduce using rule 129 (factor -> tipo_cte .)
    MINUS           reduce using rule 129 (factor -> tipo_cte .)
    GREATERTHAN     reduce using rule 129 (factor -> tipo_cte .)
    LESSTHAN        reduce using rule 129 (factor -> tipo_cte .)
    GREATERTHANEQUAL reduce using rule 129 (factor -> tipo_cte .)
    LESSTHANEQUAL   reduce using rule 129 (factor -> tipo_cte .)
    EQUALEQUAL      reduce using rule 129 (factor -> tipo_cte .)
    NOTEQUAL        reduce using rule 129 (factor -> tipo_cte .)
    AND             reduce using rule 129 (factor -> tipo_cte .)
    OR              reduce using rule 129 (factor -> tipo_cte .)
    SEMICOLON       reduce using rule 129 (factor -> tipo_cte .)
    RPAREN          reduce using rule 129 (factor -> tipo_cte .)
    RBRACKET        reduce using rule 129 (factor -> tipo_cte .)
    COMMA           reduce using rule 129 (factor -> tipo_cte .)


state 109

    (130) factor -> MINUS . tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    tipo_cte                       shift and go to state 145
    llamada                        shift and go to state 116

state 110

    (131) factor -> NOT . tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    tipo_cte                       shift and go to state 146
    llamada                        shift and go to state 116

state 111

    (27) tipo_cte -> CTE_INT . puntoPushInt
    (36) puntoPushInt -> .

    TIMES           reduce using rule 36 (puntoPushInt -> .)
    DIVIDE          reduce using rule 36 (puntoPushInt -> .)
    PLUS            reduce using rule 36 (puntoPushInt -> .)
    MINUS           reduce using rule 36 (puntoPushInt -> .)
    GREATERTHAN     reduce using rule 36 (puntoPushInt -> .)
    LESSTHAN        reduce using rule 36 (puntoPushInt -> .)
    GREATERTHANEQUAL reduce using rule 36 (puntoPushInt -> .)
    LESSTHANEQUAL   reduce using rule 36 (puntoPushInt -> .)
    EQUALEQUAL      reduce using rule 36 (puntoPushInt -> .)
    NOTEQUAL        reduce using rule 36 (puntoPushInt -> .)
    AND             reduce using rule 36 (puntoPushInt -> .)
    OR              reduce using rule 36 (puntoPushInt -> .)
    SEMICOLON       reduce using rule 36 (puntoPushInt -> .)
    RPAREN          reduce using rule 36 (puntoPushInt -> .)
    RBRACKET        reduce using rule 36 (puntoPushInt -> .)
    COMMA           reduce using rule 36 (puntoPushInt -> .)

    puntoPushInt                   shift and go to state 147

state 112

    (28) tipo_cte -> CTE_FLOAT . puntoPushFloat
    (37) puntoPushFloat -> .

    TIMES           reduce using rule 37 (puntoPushFloat -> .)
    DIVIDE          reduce using rule 37 (puntoPushFloat -> .)
    PLUS            reduce using rule 37 (puntoPushFloat -> .)
    MINUS           reduce using rule 37 (puntoPushFloat -> .)
    GREATERTHAN     reduce using rule 37 (puntoPushFloat -> .)
    LESSTHAN        reduce using rule 37 (puntoPushFloat -> .)
    GREATERTHANEQUAL reduce using rule 37 (puntoPushFloat -> .)
    LESSTHANEQUAL   reduce using rule 37 (puntoPushFloat -> .)
    EQUALEQUAL      reduce using rule 37 (puntoPushFloat -> .)
    NOTEQUAL        reduce using rule 37 (puntoPushFloat -> .)
    AND             reduce using rule 37 (puntoPushFloat -> .)
    OR              reduce using rule 37 (puntoPushFloat -> .)
    SEMICOLON       reduce using rule 37 (puntoPushFloat -> .)
    RPAREN          reduce using rule 37 (puntoPushFloat -> .)
    RBRACKET        reduce using rule 37 (puntoPushFloat -> .)
    COMMA           reduce using rule 37 (puntoPushFloat -> .)

    puntoPushFloat                 shift and go to state 148

state 113

    (29) tipo_cte -> CTE_BOOL . puntoPushBool
    (38) puntoPushBool -> .

    TIMES           reduce using rule 38 (puntoPushBool -> .)
    DIVIDE          reduce using rule 38 (puntoPushBool -> .)
    PLUS            reduce using rule 38 (puntoPushBool -> .)
    MINUS           reduce using rule 38 (puntoPushBool -> .)
    GREATERTHAN     reduce using rule 38 (puntoPushBool -> .)
    LESSTHAN        reduce using rule 38 (puntoPushBool -> .)
    GREATERTHANEQUAL reduce using rule 38 (puntoPushBool -> .)
    LESSTHANEQUAL   reduce using rule 38 (puntoPushBool -> .)
    EQUALEQUAL      reduce using rule 38 (puntoPushBool -> .)
    NOTEQUAL        reduce using rule 38 (puntoPushBool -> .)
    AND             reduce using rule 38 (puntoPushBool -> .)
    OR              reduce using rule 38 (puntoPushBool -> .)
    SEMICOLON       reduce using rule 38 (puntoPushBool -> .)
    RPAREN          reduce using rule 38 (puntoPushBool -> .)
    RBRACKET        reduce using rule 38 (puntoPushBool -> .)
    COMMA           reduce using rule 38 (puntoPushBool -> .)

    puntoPushBool                  shift and go to state 149

state 114

    (30) tipo_cte -> CTE_CHAR . puntoPushChar
    (39) puntoPushChar -> .

    TIMES           reduce using rule 39 (puntoPushChar -> .)
    DIVIDE          reduce using rule 39 (puntoPushChar -> .)
    PLUS            reduce using rule 39 (puntoPushChar -> .)
    MINUS           reduce using rule 39 (puntoPushChar -> .)
    GREATERTHAN     reduce using rule 39 (puntoPushChar -> .)
    LESSTHAN        reduce using rule 39 (puntoPushChar -> .)
    GREATERTHANEQUAL reduce using rule 39 (puntoPushChar -> .)
    LESSTHANEQUAL   reduce using rule 39 (puntoPushChar -> .)
    EQUALEQUAL      reduce using rule 39 (puntoPushChar -> .)
    NOTEQUAL        reduce using rule 39 (puntoPushChar -> .)
    AND             reduce using rule 39 (puntoPushChar -> .)
    OR              reduce using rule 39 (puntoPushChar -> .)
    SEMICOLON       reduce using rule 39 (puntoPushChar -> .)
    RPAREN          reduce using rule 39 (puntoPushChar -> .)
    RBRACKET        reduce using rule 39 (puntoPushChar -> .)
    COMMA           reduce using rule 39 (puntoPushChar -> .)

    puntoPushChar                  shift and go to state 150

state 115

    (31) tipo_cte -> ID . puntoPushID tipo_cte1
    (40) puntoPushID -> .

    LBRACKET        reduce using rule 40 (puntoPushID -> .)
    PUNTO           reduce using rule 40 (puntoPushID -> .)
    TIMES           reduce using rule 40 (puntoPushID -> .)
    DIVIDE          reduce using rule 40 (puntoPushID -> .)
    PLUS            reduce using rule 40 (puntoPushID -> .)
    MINUS           reduce using rule 40 (puntoPushID -> .)
    GREATERTHAN     reduce using rule 40 (puntoPushID -> .)
    LESSTHAN        reduce using rule 40 (puntoPushID -> .)
    GREATERTHANEQUAL reduce using rule 40 (puntoPushID -> .)
    LESSTHANEQUAL   reduce using rule 40 (puntoPushID -> .)
    EQUALEQUAL      reduce using rule 40 (puntoPushID -> .)
    NOTEQUAL        reduce using rule 40 (puntoPushID -> .)
    AND             reduce using rule 40 (puntoPushID -> .)
    OR              reduce using rule 40 (puntoPushID -> .)
    SEMICOLON       reduce using rule 40 (puntoPushID -> .)
    RPAREN          reduce using rule 40 (puntoPushID -> .)
    RBRACKET        reduce using rule 40 (puntoPushID -> .)
    COMMA           reduce using rule 40 (puntoPushID -> .)

    puntoPushID                    shift and go to state 151

state 116

    (32) tipo_cte -> llamada .

    TIMES           reduce using rule 32 (tipo_cte -> llamada .)
    DIVIDE          reduce using rule 32 (tipo_cte -> llamada .)
    PLUS            reduce using rule 32 (tipo_cte -> llamada .)
    MINUS           reduce using rule 32 (tipo_cte -> llamada .)
    GREATERTHAN     reduce using rule 32 (tipo_cte -> llamada .)
    LESSTHAN        reduce using rule 32 (tipo_cte -> llamada .)
    GREATERTHANEQUAL reduce using rule 32 (tipo_cte -> llamada .)
    LESSTHANEQUAL   reduce using rule 32 (tipo_cte -> llamada .)
    EQUALEQUAL      reduce using rule 32 (tipo_cte -> llamada .)
    NOTEQUAL        reduce using rule 32 (tipo_cte -> llamada .)
    AND             reduce using rule 32 (tipo_cte -> llamada .)
    OR              reduce using rule 32 (tipo_cte -> llamada .)
    SEMICOLON       reduce using rule 32 (tipo_cte -> llamada .)
    RPAREN          reduce using rule 32 (tipo_cte -> llamada .)
    RBRACKET        reduce using rule 32 (tipo_cte -> llamada .)
    COMMA           reduce using rule 32 (tipo_cte -> llamada .)


state 117

    (97) while -> WHILE puntoPushSaltoWhile . LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad

    LPAREN          shift and go to state 152


state 118

    (101) do_while -> DO puntoPushSaltoDoWhile . bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (62) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 154

    bloque                         shift and go to state 153

state 119

    (91) llamada -> CALL PUNTO . ID LPAREN llamada1 RPAREN

    ID              shift and go to state 155


state 120

    (44) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular . puntoFinalFuncQuad
    (55) puntoFinalFuncQuad -> .

    FUNC            reduce using rule 55 (puntoFinalFuncQuad -> .)
    VOID            reduce using rule 55 (puntoFinalFuncQuad -> .)

    puntoFinalFuncQuad             shift and go to state 156

state 121

    (47) funciones2 -> tipo ID puntoCreateVar puntoCreateVarType . puntoPushParam funciones3
    (53) puntoPushParam -> .

    COMMA           reduce using rule 53 (puntoPushParam -> .)
    RPAREN          reduce using rule 53 (puntoPushParam -> .)

    puntoPushParam                 shift and go to state 157

state 122

    (72) asignacion -> ID puntoSaveIDAsignacion asignacion1 . EQUALS asignacion2 SEMICOLON

    EQUALS          shift and go to state 158


state 123

    (73) asignacion1 -> LBRACKET . expresion RBRACKET
    (104) expresion -> . compare expresion2
    (108) compare -> . exp compare1
    (117) exp -> . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    expresion                      shift and go to state 159
    compare                        shift and go to state 103
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 124

    (74) asignacion1 -> empty .

    EQUALS          reduce using rule 74 (asignacion1 -> empty .)


state 125

    (80) condicion -> IF LPAREN expresion . RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad

    RPAREN          shift and go to state 160


state 126

    (86) escritura -> PRINT LPAREN escritura1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 161


state 127

    (87) escritura1 -> expresion . puntoCreatePrintQuad
    (89) puntoCreatePrintQuad -> .

    RPAREN          reduce using rule 89 (puntoCreatePrintQuad -> .)

    puntoCreatePrintQuad           shift and go to state 162

state 128

    (88) escritura1 -> CTE_STRING . puntoCreatePrintConstantQuad
    (90) puntoCreatePrintConstantQuad -> .

    RPAREN          reduce using rule 90 (puntoCreatePrintConstantQuad -> .)

    puntoCreatePrintConstantQuad   shift and go to state 163

state 129

    (96) return -> RETURN expresion SEMICOLON .

    ID              reduce using rule 96 (return -> RETURN expresion SEMICOLON .)
    IF              reduce using rule 96 (return -> RETURN expresion SEMICOLON .)
    PRINT           reduce using rule 96 (return -> RETURN expresion SEMICOLON .)
    RETURN          reduce using rule 96 (return -> RETURN expresion SEMICOLON .)
    WHILE           reduce using rule 96 (return -> RETURN expresion SEMICOLON .)
    DO              reduce using rule 96 (return -> RETURN expresion SEMICOLON .)
    CALL            reduce using rule 96 (return -> RETURN expresion SEMICOLON .)
    RBLOQUE         reduce using rule 96 (return -> RETURN expresion SEMICOLON .)


state 130

    (104) expresion -> compare expresion2 .

    SEMICOLON       reduce using rule 104 (expresion -> compare expresion2 .)
    RPAREN          reduce using rule 104 (expresion -> compare expresion2 .)
    RBRACKET        reduce using rule 104 (expresion -> compare expresion2 .)
    COMMA           reduce using rule 104 (expresion -> compare expresion2 .)


state 131

    (105) expresion2 -> AND . compare
    (108) compare -> . exp compare1
    (117) exp -> . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    compare                        shift and go to state 164
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 132

    (106) expresion2 -> OR . compare
    (108) compare -> . exp compare1
    (117) exp -> . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    compare                        shift and go to state 165
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 133

    (107) expresion2 -> empty .

    SEMICOLON       reduce using rule 107 (expresion2 -> empty .)
    RPAREN          reduce using rule 107 (expresion2 -> empty .)
    RBRACKET        reduce using rule 107 (expresion2 -> empty .)
    COMMA           reduce using rule 107 (expresion2 -> empty .)


state 134

    (108) compare -> exp compare1 .

    AND             reduce using rule 108 (compare -> exp compare1 .)
    OR              reduce using rule 108 (compare -> exp compare1 .)
    SEMICOLON       reduce using rule 108 (compare -> exp compare1 .)
    RPAREN          reduce using rule 108 (compare -> exp compare1 .)
    RBRACKET        reduce using rule 108 (compare -> exp compare1 .)
    COMMA           reduce using rule 108 (compare -> exp compare1 .)


state 135

    (109) compare1 -> GREATERTHAN . puntoPushOperador exp puntoOperacionRelacional
    (127) puntoPushOperador -> .

    LPAREN          reduce using rule 127 (puntoPushOperador -> .)
    MINUS           reduce using rule 127 (puntoPushOperador -> .)
    NOT             reduce using rule 127 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 127 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 127 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 127 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 127 (puntoPushOperador -> .)
    ID              reduce using rule 127 (puntoPushOperador -> .)
    CALL            reduce using rule 127 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 166

state 136

    (110) compare1 -> LESSTHAN . puntoPushOperador exp puntoOperacionRelacional
    (127) puntoPushOperador -> .

    LPAREN          reduce using rule 127 (puntoPushOperador -> .)
    MINUS           reduce using rule 127 (puntoPushOperador -> .)
    NOT             reduce using rule 127 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 127 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 127 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 127 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 127 (puntoPushOperador -> .)
    ID              reduce using rule 127 (puntoPushOperador -> .)
    CALL            reduce using rule 127 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 167

state 137

    (111) compare1 -> GREATERTHANEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (127) puntoPushOperador -> .

    LPAREN          reduce using rule 127 (puntoPushOperador -> .)
    MINUS           reduce using rule 127 (puntoPushOperador -> .)
    NOT             reduce using rule 127 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 127 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 127 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 127 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 127 (puntoPushOperador -> .)
    ID              reduce using rule 127 (puntoPushOperador -> .)
    CALL            reduce using rule 127 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 168

state 138

    (112) compare1 -> LESSTHANEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (127) puntoPushOperador -> .

    LPAREN          reduce using rule 127 (puntoPushOperador -> .)
    MINUS           reduce using rule 127 (puntoPushOperador -> .)
    NOT             reduce using rule 127 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 127 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 127 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 127 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 127 (puntoPushOperador -> .)
    ID              reduce using rule 127 (puntoPushOperador -> .)
    CALL            reduce using rule 127 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 169

state 139

    (113) compare1 -> EQUALEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (127) puntoPushOperador -> .

    LPAREN          reduce using rule 127 (puntoPushOperador -> .)
    MINUS           reduce using rule 127 (puntoPushOperador -> .)
    NOT             reduce using rule 127 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 127 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 127 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 127 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 127 (puntoPushOperador -> .)
    ID              reduce using rule 127 (puntoPushOperador -> .)
    CALL            reduce using rule 127 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 170

state 140

    (114) compare1 -> NOTEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (127) puntoPushOperador -> .

    LPAREN          reduce using rule 127 (puntoPushOperador -> .)
    MINUS           reduce using rule 127 (puntoPushOperador -> .)
    NOT             reduce using rule 127 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 127 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 127 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 127 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 127 (puntoPushOperador -> .)
    ID              reduce using rule 127 (puntoPushOperador -> .)
    CALL            reduce using rule 127 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 171

state 141

    (115) compare1 -> empty .

    AND             reduce using rule 115 (compare1 -> empty .)
    OR              reduce using rule 115 (compare1 -> empty .)
    SEMICOLON       reduce using rule 115 (compare1 -> empty .)
    RPAREN          reduce using rule 115 (compare1 -> empty .)
    RBRACKET        reduce using rule 115 (compare1 -> empty .)
    COMMA           reduce using rule 115 (compare1 -> empty .)


state 142

    (117) exp -> termino puntoSumaResta . exp1
    (118) exp1 -> . PLUS puntoPushOperador termino puntoSumaResta exp1
    (119) exp1 -> . MINUS puntoPushOperador termino puntoSumaResta exp1
    (120) exp1 -> . empty
    (145) empty -> .

    PLUS            shift and go to state 173
    MINUS           shift and go to state 174
    GREATERTHAN     reduce using rule 145 (empty -> .)
    LESSTHAN        reduce using rule 145 (empty -> .)
    GREATERTHANEQUAL reduce using rule 145 (empty -> .)
    LESSTHANEQUAL   reduce using rule 145 (empty -> .)
    EQUALEQUAL      reduce using rule 145 (empty -> .)
    NOTEQUAL        reduce using rule 145 (empty -> .)
    AND             reduce using rule 145 (empty -> .)
    OR              reduce using rule 145 (empty -> .)
    SEMICOLON       reduce using rule 145 (empty -> .)
    RPAREN          reduce using rule 145 (empty -> .)
    RBRACKET        reduce using rule 145 (empty -> .)
    COMMA           reduce using rule 145 (empty -> .)

    exp1                           shift and go to state 172
    empty                          shift and go to state 175

state 143

    (122) termino -> factor puntoMultDivide . termino1
    (123) termino1 -> . TIMES puntoPushOperador factor puntoMultDivide termino1
    (124) termino1 -> . DIVIDE puntoPushOperador factor puntoMultDivide termino1
    (125) termino1 -> . empty
    (145) empty -> .

    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 178
    PLUS            reduce using rule 145 (empty -> .)
    MINUS           reduce using rule 145 (empty -> .)
    GREATERTHAN     reduce using rule 145 (empty -> .)
    LESSTHAN        reduce using rule 145 (empty -> .)
    GREATERTHANEQUAL reduce using rule 145 (empty -> .)
    LESSTHANEQUAL   reduce using rule 145 (empty -> .)
    EQUALEQUAL      reduce using rule 145 (empty -> .)
    NOTEQUAL        reduce using rule 145 (empty -> .)
    AND             reduce using rule 145 (empty -> .)
    OR              reduce using rule 145 (empty -> .)
    SEMICOLON       reduce using rule 145 (empty -> .)
    RPAREN          reduce using rule 145 (empty -> .)
    RBRACKET        reduce using rule 145 (empty -> .)
    COMMA           reduce using rule 145 (empty -> .)

    termino1                       shift and go to state 176
    empty                          shift and go to state 179

state 144

    (128) factor -> LPAREN puntoPushFondoFalso . expresion RPAREN puntoPopFondoFalso
    (104) expresion -> . compare expresion2
    (108) compare -> . exp compare1
    (117) exp -> . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    expresion                      shift and go to state 180
    compare                        shift and go to state 103
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 145

    (130) factor -> MINUS tipo_cte .

    TIMES           reduce using rule 130 (factor -> MINUS tipo_cte .)
    DIVIDE          reduce using rule 130 (factor -> MINUS tipo_cte .)
    PLUS            reduce using rule 130 (factor -> MINUS tipo_cte .)
    MINUS           reduce using rule 130 (factor -> MINUS tipo_cte .)
    GREATERTHAN     reduce using rule 130 (factor -> MINUS tipo_cte .)
    LESSTHAN        reduce using rule 130 (factor -> MINUS tipo_cte .)
    GREATERTHANEQUAL reduce using rule 130 (factor -> MINUS tipo_cte .)
    LESSTHANEQUAL   reduce using rule 130 (factor -> MINUS tipo_cte .)
    EQUALEQUAL      reduce using rule 130 (factor -> MINUS tipo_cte .)
    NOTEQUAL        reduce using rule 130 (factor -> MINUS tipo_cte .)
    AND             reduce using rule 130 (factor -> MINUS tipo_cte .)
    OR              reduce using rule 130 (factor -> MINUS tipo_cte .)
    SEMICOLON       reduce using rule 130 (factor -> MINUS tipo_cte .)
    RPAREN          reduce using rule 130 (factor -> MINUS tipo_cte .)
    RBRACKET        reduce using rule 130 (factor -> MINUS tipo_cte .)
    COMMA           reduce using rule 130 (factor -> MINUS tipo_cte .)


state 146

    (131) factor -> NOT tipo_cte .

    TIMES           reduce using rule 131 (factor -> NOT tipo_cte .)
    DIVIDE          reduce using rule 131 (factor -> NOT tipo_cte .)
    PLUS            reduce using rule 131 (factor -> NOT tipo_cte .)
    MINUS           reduce using rule 131 (factor -> NOT tipo_cte .)
    GREATERTHAN     reduce using rule 131 (factor -> NOT tipo_cte .)
    LESSTHAN        reduce using rule 131 (factor -> NOT tipo_cte .)
    GREATERTHANEQUAL reduce using rule 131 (factor -> NOT tipo_cte .)
    LESSTHANEQUAL   reduce using rule 131 (factor -> NOT tipo_cte .)
    EQUALEQUAL      reduce using rule 131 (factor -> NOT tipo_cte .)
    NOTEQUAL        reduce using rule 131 (factor -> NOT tipo_cte .)
    AND             reduce using rule 131 (factor -> NOT tipo_cte .)
    OR              reduce using rule 131 (factor -> NOT tipo_cte .)
    SEMICOLON       reduce using rule 131 (factor -> NOT tipo_cte .)
    RPAREN          reduce using rule 131 (factor -> NOT tipo_cte .)
    RBRACKET        reduce using rule 131 (factor -> NOT tipo_cte .)
    COMMA           reduce using rule 131 (factor -> NOT tipo_cte .)


state 147

    (27) tipo_cte -> CTE_INT puntoPushInt .

    TIMES           reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    DIVIDE          reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    PLUS            reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    MINUS           reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    GREATERTHAN     reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    LESSTHAN        reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    GREATERTHANEQUAL reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    LESSTHANEQUAL   reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    EQUALEQUAL      reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    NOTEQUAL        reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    AND             reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    OR              reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    SEMICOLON       reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    RPAREN          reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    RBRACKET        reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    COMMA           reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)


state 148

    (28) tipo_cte -> CTE_FLOAT puntoPushFloat .

    TIMES           reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    DIVIDE          reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    PLUS            reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    MINUS           reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    GREATERTHAN     reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    LESSTHAN        reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    GREATERTHANEQUAL reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    LESSTHANEQUAL   reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    EQUALEQUAL      reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    NOTEQUAL        reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    AND             reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    OR              reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    SEMICOLON       reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    RPAREN          reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    RBRACKET        reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    COMMA           reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)


state 149

    (29) tipo_cte -> CTE_BOOL puntoPushBool .

    TIMES           reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    DIVIDE          reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    PLUS            reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    MINUS           reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    GREATERTHAN     reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    LESSTHAN        reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    GREATERTHANEQUAL reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    LESSTHANEQUAL   reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    EQUALEQUAL      reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    NOTEQUAL        reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    AND             reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    OR              reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    SEMICOLON       reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    RPAREN          reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    RBRACKET        reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    COMMA           reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)


state 150

    (30) tipo_cte -> CTE_CHAR puntoPushChar .

    TIMES           reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    DIVIDE          reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    PLUS            reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    MINUS           reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    GREATERTHAN     reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    LESSTHAN        reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    GREATERTHANEQUAL reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    LESSTHANEQUAL   reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    EQUALEQUAL      reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    NOTEQUAL        reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    AND             reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    OR              reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    SEMICOLON       reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    RPAREN          reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    RBRACKET        reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    COMMA           reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)


state 151

    (31) tipo_cte -> ID puntoPushID . tipo_cte1
    (33) tipo_cte1 -> . LBRACKET CTE_INT RBRACKET
    (34) tipo_cte1 -> . funciones_arr
    (35) tipo_cte1 -> . empty
    (134) funciones_arr -> . PUNTO funciones_arr1 LPAREN RPAREN
    (145) empty -> .

    LBRACKET        shift and go to state 182
    PUNTO           shift and go to state 185
    TIMES           reduce using rule 145 (empty -> .)
    DIVIDE          reduce using rule 145 (empty -> .)
    PLUS            reduce using rule 145 (empty -> .)
    MINUS           reduce using rule 145 (empty -> .)
    GREATERTHAN     reduce using rule 145 (empty -> .)
    LESSTHAN        reduce using rule 145 (empty -> .)
    GREATERTHANEQUAL reduce using rule 145 (empty -> .)
    LESSTHANEQUAL   reduce using rule 145 (empty -> .)
    EQUALEQUAL      reduce using rule 145 (empty -> .)
    NOTEQUAL        reduce using rule 145 (empty -> .)
    AND             reduce using rule 145 (empty -> .)
    OR              reduce using rule 145 (empty -> .)
    SEMICOLON       reduce using rule 145 (empty -> .)
    RPAREN          reduce using rule 145 (empty -> .)
    RBRACKET        reduce using rule 145 (empty -> .)
    COMMA           reduce using rule 145 (empty -> .)

    tipo_cte1                      shift and go to state 181
    funciones_arr                  shift and go to state 183
    empty                          shift and go to state 184

state 152

    (97) while -> WHILE puntoPushSaltoWhile LPAREN . expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (104) expresion -> . compare expresion2
    (108) compare -> . exp compare1
    (117) exp -> . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    expresion                      shift and go to state 186
    compare                        shift and go to state 103
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 153

    (101) do_while -> DO puntoPushSaltoDoWhile bloque . WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad

    WHILE           shift and go to state 187


state 154

    (62) bloque -> LBLOQUE . bloque1 RBLOQUE
    (63) bloque1 -> . estatuto bloque1
    (64) bloque1 -> . empty
    (65) estatuto -> . asignacion
    (66) estatuto -> . condicion
    (67) estatuto -> . escritura
    (68) estatuto -> . return
    (69) estatuto -> . while
    (70) estatuto -> . do_while
    (71) estatuto -> . llamada SEMICOLON
    (145) empty -> .
    (72) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (80) condicion -> . IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (86) escritura -> . PRINT LPAREN escritura1 RPAREN SEMICOLON
    (96) return -> . RETURN expresion SEMICOLON
    (97) while -> . WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (101) do_while -> . DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    RBLOQUE         reduce using rule 145 (empty -> .)
    ID              shift and go to state 86
    IF              shift and go to state 87
    PRINT           shift and go to state 88
    RETURN          shift and go to state 89
    WHILE           shift and go to state 90
    DO              shift and go to state 91
    CALL            shift and go to state 92

    bloque1                        shift and go to state 188
    estatuto                       shift and go to state 189
    empty                          shift and go to state 190
    asignacion                     shift and go to state 79
    condicion                      shift and go to state 80
    escritura                      shift and go to state 81
    return                         shift and go to state 82
    while                          shift and go to state 83
    do_while                       shift and go to state 84
    llamada                        shift and go to state 85

state 155

    (91) llamada -> CALL PUNTO ID . LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 191


state 156

    (44) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad .

    FUNC            reduce using rule 44 (funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad .)
    VOID            reduce using rule 44 (funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad .)


state 157

    (47) funciones2 -> tipo ID puntoCreateVar puntoCreateVarType puntoPushParam . funciones3
    (49) funciones3 -> . COMMA tipo ID funciones3
    (50) funciones3 -> . empty
    (145) empty -> .

    COMMA           shift and go to state 193
    RPAREN          reduce using rule 145 (empty -> .)

    funciones3                     shift and go to state 192
    empty                          shift and go to state 194

state 158

    (72) asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS . asignacion2 SEMICOLON
    (75) asignacion2 -> . expresion puntoCreateAsignacionQuad
    (76) asignacion2 -> . leida
    (104) expresion -> . compare expresion2
    (79) leida -> . INPUT LPAREN RPAREN
    (108) compare -> . exp compare1
    (117) exp -> . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    INPUT           shift and go to state 198
    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    asignacion2                    shift and go to state 195
    expresion                      shift and go to state 196
    leida                          shift and go to state 197
    compare                        shift and go to state 103
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 159

    (73) asignacion1 -> LBRACKET expresion . RBRACKET

    RBRACKET        shift and go to state 199


state 160

    (80) condicion -> IF LPAREN expresion RPAREN . puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (83) puntoCreateIfQuad -> .

    LBLOQUE         reduce using rule 83 (puntoCreateIfQuad -> .)

    puntoCreateIfQuad              shift and go to state 200

state 161

    (86) escritura -> PRINT LPAREN escritura1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 201


state 162

    (87) escritura1 -> expresion puntoCreatePrintQuad .

    RPAREN          reduce using rule 87 (escritura1 -> expresion puntoCreatePrintQuad .)


state 163

    (88) escritura1 -> CTE_STRING puntoCreatePrintConstantQuad .

    RPAREN          reduce using rule 88 (escritura1 -> CTE_STRING puntoCreatePrintConstantQuad .)


state 164

    (105) expresion2 -> AND compare .

    SEMICOLON       reduce using rule 105 (expresion2 -> AND compare .)
    RPAREN          reduce using rule 105 (expresion2 -> AND compare .)
    RBRACKET        reduce using rule 105 (expresion2 -> AND compare .)
    COMMA           reduce using rule 105 (expresion2 -> AND compare .)


state 165

    (106) expresion2 -> OR compare .

    SEMICOLON       reduce using rule 106 (expresion2 -> OR compare .)
    RPAREN          reduce using rule 106 (expresion2 -> OR compare .)
    RBRACKET        reduce using rule 106 (expresion2 -> OR compare .)
    COMMA           reduce using rule 106 (expresion2 -> OR compare .)


state 166

    (109) compare1 -> GREATERTHAN puntoPushOperador . exp puntoOperacionRelacional
    (117) exp -> . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    exp                            shift and go to state 202
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 167

    (110) compare1 -> LESSTHAN puntoPushOperador . exp puntoOperacionRelacional
    (117) exp -> . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    exp                            shift and go to state 203
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 168

    (111) compare1 -> GREATERTHANEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (117) exp -> . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    exp                            shift and go to state 204
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 169

    (112) compare1 -> LESSTHANEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (117) exp -> . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    exp                            shift and go to state 205
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 170

    (113) compare1 -> EQUALEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (117) exp -> . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    exp                            shift and go to state 206
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 171

    (114) compare1 -> NOTEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (117) exp -> . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    exp                            shift and go to state 207
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 172

    (117) exp -> termino puntoSumaResta exp1 .

    GREATERTHAN     reduce using rule 117 (exp -> termino puntoSumaResta exp1 .)
    LESSTHAN        reduce using rule 117 (exp -> termino puntoSumaResta exp1 .)
    GREATERTHANEQUAL reduce using rule 117 (exp -> termino puntoSumaResta exp1 .)
    LESSTHANEQUAL   reduce using rule 117 (exp -> termino puntoSumaResta exp1 .)
    EQUALEQUAL      reduce using rule 117 (exp -> termino puntoSumaResta exp1 .)
    NOTEQUAL        reduce using rule 117 (exp -> termino puntoSumaResta exp1 .)
    AND             reduce using rule 117 (exp -> termino puntoSumaResta exp1 .)
    OR              reduce using rule 117 (exp -> termino puntoSumaResta exp1 .)
    SEMICOLON       reduce using rule 117 (exp -> termino puntoSumaResta exp1 .)
    RPAREN          reduce using rule 117 (exp -> termino puntoSumaResta exp1 .)
    RBRACKET        reduce using rule 117 (exp -> termino puntoSumaResta exp1 .)
    COMMA           reduce using rule 117 (exp -> termino puntoSumaResta exp1 .)


state 173

    (118) exp1 -> PLUS . puntoPushOperador termino puntoSumaResta exp1
    (127) puntoPushOperador -> .

    LPAREN          reduce using rule 127 (puntoPushOperador -> .)
    MINUS           reduce using rule 127 (puntoPushOperador -> .)
    NOT             reduce using rule 127 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 127 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 127 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 127 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 127 (puntoPushOperador -> .)
    ID              reduce using rule 127 (puntoPushOperador -> .)
    CALL            reduce using rule 127 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 208

state 174

    (119) exp1 -> MINUS . puntoPushOperador termino puntoSumaResta exp1
    (127) puntoPushOperador -> .

    LPAREN          reduce using rule 127 (puntoPushOperador -> .)
    MINUS           reduce using rule 127 (puntoPushOperador -> .)
    NOT             reduce using rule 127 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 127 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 127 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 127 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 127 (puntoPushOperador -> .)
    ID              reduce using rule 127 (puntoPushOperador -> .)
    CALL            reduce using rule 127 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 209

state 175

    (120) exp1 -> empty .

    GREATERTHAN     reduce using rule 120 (exp1 -> empty .)
    LESSTHAN        reduce using rule 120 (exp1 -> empty .)
    GREATERTHANEQUAL reduce using rule 120 (exp1 -> empty .)
    LESSTHANEQUAL   reduce using rule 120 (exp1 -> empty .)
    EQUALEQUAL      reduce using rule 120 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 120 (exp1 -> empty .)
    AND             reduce using rule 120 (exp1 -> empty .)
    OR              reduce using rule 120 (exp1 -> empty .)
    SEMICOLON       reduce using rule 120 (exp1 -> empty .)
    RPAREN          reduce using rule 120 (exp1 -> empty .)
    RBRACKET        reduce using rule 120 (exp1 -> empty .)
    COMMA           reduce using rule 120 (exp1 -> empty .)


state 176

    (122) termino -> factor puntoMultDivide termino1 .

    PLUS            reduce using rule 122 (termino -> factor puntoMultDivide termino1 .)
    MINUS           reduce using rule 122 (termino -> factor puntoMultDivide termino1 .)
    GREATERTHAN     reduce using rule 122 (termino -> factor puntoMultDivide termino1 .)
    LESSTHAN        reduce using rule 122 (termino -> factor puntoMultDivide termino1 .)
    GREATERTHANEQUAL reduce using rule 122 (termino -> factor puntoMultDivide termino1 .)
    LESSTHANEQUAL   reduce using rule 122 (termino -> factor puntoMultDivide termino1 .)
    EQUALEQUAL      reduce using rule 122 (termino -> factor puntoMultDivide termino1 .)
    NOTEQUAL        reduce using rule 122 (termino -> factor puntoMultDivide termino1 .)
    AND             reduce using rule 122 (termino -> factor puntoMultDivide termino1 .)
    OR              reduce using rule 122 (termino -> factor puntoMultDivide termino1 .)
    SEMICOLON       reduce using rule 122 (termino -> factor puntoMultDivide termino1 .)
    RPAREN          reduce using rule 122 (termino -> factor puntoMultDivide termino1 .)
    RBRACKET        reduce using rule 122 (termino -> factor puntoMultDivide termino1 .)
    COMMA           reduce using rule 122 (termino -> factor puntoMultDivide termino1 .)


state 177

    (123) termino1 -> TIMES . puntoPushOperador factor puntoMultDivide termino1
    (127) puntoPushOperador -> .

    LPAREN          reduce using rule 127 (puntoPushOperador -> .)
    MINUS           reduce using rule 127 (puntoPushOperador -> .)
    NOT             reduce using rule 127 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 127 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 127 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 127 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 127 (puntoPushOperador -> .)
    ID              reduce using rule 127 (puntoPushOperador -> .)
    CALL            reduce using rule 127 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 210

state 178

    (124) termino1 -> DIVIDE . puntoPushOperador factor puntoMultDivide termino1
    (127) puntoPushOperador -> .

    LPAREN          reduce using rule 127 (puntoPushOperador -> .)
    MINUS           reduce using rule 127 (puntoPushOperador -> .)
    NOT             reduce using rule 127 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 127 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 127 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 127 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 127 (puntoPushOperador -> .)
    ID              reduce using rule 127 (puntoPushOperador -> .)
    CALL            reduce using rule 127 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 211

state 179

    (125) termino1 -> empty .

    PLUS            reduce using rule 125 (termino1 -> empty .)
    MINUS           reduce using rule 125 (termino1 -> empty .)
    GREATERTHAN     reduce using rule 125 (termino1 -> empty .)
    LESSTHAN        reduce using rule 125 (termino1 -> empty .)
    GREATERTHANEQUAL reduce using rule 125 (termino1 -> empty .)
    LESSTHANEQUAL   reduce using rule 125 (termino1 -> empty .)
    EQUALEQUAL      reduce using rule 125 (termino1 -> empty .)
    NOTEQUAL        reduce using rule 125 (termino1 -> empty .)
    AND             reduce using rule 125 (termino1 -> empty .)
    OR              reduce using rule 125 (termino1 -> empty .)
    SEMICOLON       reduce using rule 125 (termino1 -> empty .)
    RPAREN          reduce using rule 125 (termino1 -> empty .)
    RBRACKET        reduce using rule 125 (termino1 -> empty .)
    COMMA           reduce using rule 125 (termino1 -> empty .)


state 180

    (128) factor -> LPAREN puntoPushFondoFalso expresion . RPAREN puntoPopFondoFalso

    RPAREN          shift and go to state 212


state 181

    (31) tipo_cte -> ID puntoPushID tipo_cte1 .

    TIMES           reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    DIVIDE          reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    PLUS            reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    MINUS           reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    GREATERTHAN     reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    LESSTHAN        reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    GREATERTHANEQUAL reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    LESSTHANEQUAL   reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    EQUALEQUAL      reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    NOTEQUAL        reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    AND             reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    OR              reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    SEMICOLON       reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    RPAREN          reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    RBRACKET        reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    COMMA           reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)


state 182

    (33) tipo_cte1 -> LBRACKET . CTE_INT RBRACKET

    CTE_INT         shift and go to state 213


state 183

    (34) tipo_cte1 -> funciones_arr .

    TIMES           reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    DIVIDE          reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    PLUS            reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    MINUS           reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    GREATERTHAN     reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    LESSTHAN        reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    GREATERTHANEQUAL reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    LESSTHANEQUAL   reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    EQUALEQUAL      reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    NOTEQUAL        reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    AND             reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    OR              reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    SEMICOLON       reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    RPAREN          reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    RBRACKET        reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    COMMA           reduce using rule 34 (tipo_cte1 -> funciones_arr .)


state 184

    (35) tipo_cte1 -> empty .

    TIMES           reduce using rule 35 (tipo_cte1 -> empty .)
    DIVIDE          reduce using rule 35 (tipo_cte1 -> empty .)
    PLUS            reduce using rule 35 (tipo_cte1 -> empty .)
    MINUS           reduce using rule 35 (tipo_cte1 -> empty .)
    GREATERTHAN     reduce using rule 35 (tipo_cte1 -> empty .)
    LESSTHAN        reduce using rule 35 (tipo_cte1 -> empty .)
    GREATERTHANEQUAL reduce using rule 35 (tipo_cte1 -> empty .)
    LESSTHANEQUAL   reduce using rule 35 (tipo_cte1 -> empty .)
    EQUALEQUAL      reduce using rule 35 (tipo_cte1 -> empty .)
    NOTEQUAL        reduce using rule 35 (tipo_cte1 -> empty .)
    AND             reduce using rule 35 (tipo_cte1 -> empty .)
    OR              reduce using rule 35 (tipo_cte1 -> empty .)
    SEMICOLON       reduce using rule 35 (tipo_cte1 -> empty .)
    RPAREN          reduce using rule 35 (tipo_cte1 -> empty .)
    RBRACKET        reduce using rule 35 (tipo_cte1 -> empty .)
    COMMA           reduce using rule 35 (tipo_cte1 -> empty .)


state 185

    (134) funciones_arr -> PUNTO . funciones_arr1 LPAREN RPAREN
    (135) funciones_arr1 -> . MAX
    (136) funciones_arr1 -> . MIN
    (137) funciones_arr1 -> . RANGE
    (138) funciones_arr1 -> . MEDIAN
    (139) funciones_arr1 -> . AVERAGE
    (140) funciones_arr1 -> . IQRANGE
    (141) funciones_arr1 -> . STDEV
    (142) funciones_arr1 -> . VARIANCE
    (143) funciones_arr1 -> . MODIFY
    (144) funciones_arr1 -> . DRAW

    MAX             shift and go to state 215
    MIN             shift and go to state 216
    RANGE           shift and go to state 217
    MEDIAN          shift and go to state 218
    AVERAGE         shift and go to state 219
    IQRANGE         shift and go to state 220
    STDEV           shift and go to state 221
    VARIANCE        shift and go to state 222
    MODIFY          shift and go to state 223
    DRAW            shift and go to state 224

    funciones_arr1                 shift and go to state 214

state 186

    (97) while -> WHILE puntoPushSaltoWhile LPAREN expresion . RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad

    RPAREN          shift and go to state 225


state 187

    (101) do_while -> DO puntoPushSaltoDoWhile bloque WHILE . LPAREN expresion RPAREN puntoCreateDoWhileQuad

    LPAREN          shift and go to state 226


state 188

    (62) bloque -> LBLOQUE bloque1 . RBLOQUE

    RBLOQUE         shift and go to state 227


state 189

    (63) bloque1 -> estatuto . bloque1
    (63) bloque1 -> . estatuto bloque1
    (64) bloque1 -> . empty
    (65) estatuto -> . asignacion
    (66) estatuto -> . condicion
    (67) estatuto -> . escritura
    (68) estatuto -> . return
    (69) estatuto -> . while
    (70) estatuto -> . do_while
    (71) estatuto -> . llamada SEMICOLON
    (145) empty -> .
    (72) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (80) condicion -> . IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (86) escritura -> . PRINT LPAREN escritura1 RPAREN SEMICOLON
    (96) return -> . RETURN expresion SEMICOLON
    (97) while -> . WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (101) do_while -> . DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    RBLOQUE         reduce using rule 145 (empty -> .)
    ID              shift and go to state 86
    IF              shift and go to state 87
    PRINT           shift and go to state 88
    RETURN          shift and go to state 89
    WHILE           shift and go to state 90
    DO              shift and go to state 91
    CALL            shift and go to state 92

    estatuto                       shift and go to state 189
    bloque1                        shift and go to state 228
    empty                          shift and go to state 190
    asignacion                     shift and go to state 79
    condicion                      shift and go to state 80
    escritura                      shift and go to state 81
    return                         shift and go to state 82
    while                          shift and go to state 83
    do_while                       shift and go to state 84
    llamada                        shift and go to state 85

state 190

    (64) bloque1 -> empty .

    RBLOQUE         reduce using rule 64 (bloque1 -> empty .)


state 191

    (91) llamada -> CALL PUNTO ID LPAREN . llamada1 RPAREN
    (92) llamada1 -> . expresion llamada2
    (93) llamada1 -> . empty
    (104) expresion -> . compare expresion2
    (145) empty -> .
    (108) compare -> . exp compare1
    (117) exp -> . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    RPAREN          reduce using rule 145 (empty -> .)
    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    llamada1                       shift and go to state 229
    expresion                      shift and go to state 230
    empty                          shift and go to state 231
    compare                        shift and go to state 103
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 192

    (47) funciones2 -> tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3 .

    RPAREN          reduce using rule 47 (funciones2 -> tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3 .)


state 193

    (49) funciones3 -> COMMA . tipo ID funciones3
    (22) tipo -> . INT puntoCurrentType
    (23) tipo -> . FLOAT puntoCurrentType
    (24) tipo -> . BOOL puntoCurrentType
    (25) tipo -> . CHAR puntoCurrentType

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 25
    CHAR            shift and go to state 26

    tipo                           shift and go to state 232

state 194

    (50) funciones3 -> empty .

    RPAREN          reduce using rule 50 (funciones3 -> empty .)


state 195

    (72) asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 . SEMICOLON

    SEMICOLON       shift and go to state 233


state 196

    (75) asignacion2 -> expresion . puntoCreateAsignacionQuad
    (78) puntoCreateAsignacionQuad -> .

    SEMICOLON       reduce using rule 78 (puntoCreateAsignacionQuad -> .)

    puntoCreateAsignacionQuad      shift and go to state 234

state 197

    (76) asignacion2 -> leida .

    SEMICOLON       reduce using rule 76 (asignacion2 -> leida .)


state 198

    (79) leida -> INPUT . LPAREN RPAREN

    LPAREN          shift and go to state 235


state 199

    (73) asignacion1 -> LBRACKET expresion RBRACKET .

    EQUALS          reduce using rule 73 (asignacion1 -> LBRACKET expresion RBRACKET .)


state 200

    (80) condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad . bloque condicion1 puntoFillIfQuad
    (62) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 154

    bloque                         shift and go to state 236

state 201

    (86) escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .

    ID              reduce using rule 86 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    IF              reduce using rule 86 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    PRINT           reduce using rule 86 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 86 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 86 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    DO              reduce using rule 86 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    CALL            reduce using rule 86 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    RBLOQUE         reduce using rule 86 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)


state 202

    (109) compare1 -> GREATERTHAN puntoPushOperador exp . puntoOperacionRelacional
    (116) puntoOperacionRelacional -> .

    AND             reduce using rule 116 (puntoOperacionRelacional -> .)
    OR              reduce using rule 116 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 116 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 116 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 116 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 116 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 237

state 203

    (110) compare1 -> LESSTHAN puntoPushOperador exp . puntoOperacionRelacional
    (116) puntoOperacionRelacional -> .

    AND             reduce using rule 116 (puntoOperacionRelacional -> .)
    OR              reduce using rule 116 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 116 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 116 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 116 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 116 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 238

state 204

    (111) compare1 -> GREATERTHANEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (116) puntoOperacionRelacional -> .

    AND             reduce using rule 116 (puntoOperacionRelacional -> .)
    OR              reduce using rule 116 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 116 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 116 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 116 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 116 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 239

state 205

    (112) compare1 -> LESSTHANEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (116) puntoOperacionRelacional -> .

    AND             reduce using rule 116 (puntoOperacionRelacional -> .)
    OR              reduce using rule 116 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 116 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 116 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 116 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 116 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 240

state 206

    (113) compare1 -> EQUALEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (116) puntoOperacionRelacional -> .

    AND             reduce using rule 116 (puntoOperacionRelacional -> .)
    OR              reduce using rule 116 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 116 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 116 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 116 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 116 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 241

state 207

    (114) compare1 -> NOTEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (116) puntoOperacionRelacional -> .

    AND             reduce using rule 116 (puntoOperacionRelacional -> .)
    OR              reduce using rule 116 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 116 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 116 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 116 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 116 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 242

state 208

    (118) exp1 -> PLUS puntoPushOperador . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    termino                        shift and go to state 243
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 209

    (119) exp1 -> MINUS puntoPushOperador . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    termino                        shift and go to state 244
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 210

    (123) termino1 -> TIMES puntoPushOperador . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    factor                         shift and go to state 245
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 211

    (124) termino1 -> DIVIDE puntoPushOperador . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    factor                         shift and go to state 246
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 212

    (128) factor -> LPAREN puntoPushFondoFalso expresion RPAREN . puntoPopFondoFalso
    (133) puntoPopFondoFalso -> .

    TIMES           reduce using rule 133 (puntoPopFondoFalso -> .)
    DIVIDE          reduce using rule 133 (puntoPopFondoFalso -> .)
    PLUS            reduce using rule 133 (puntoPopFondoFalso -> .)
    MINUS           reduce using rule 133 (puntoPopFondoFalso -> .)
    GREATERTHAN     reduce using rule 133 (puntoPopFondoFalso -> .)
    LESSTHAN        reduce using rule 133 (puntoPopFondoFalso -> .)
    GREATERTHANEQUAL reduce using rule 133 (puntoPopFondoFalso -> .)
    LESSTHANEQUAL   reduce using rule 133 (puntoPopFondoFalso -> .)
    EQUALEQUAL      reduce using rule 133 (puntoPopFondoFalso -> .)
    NOTEQUAL        reduce using rule 133 (puntoPopFondoFalso -> .)
    AND             reduce using rule 133 (puntoPopFondoFalso -> .)
    OR              reduce using rule 133 (puntoPopFondoFalso -> .)
    SEMICOLON       reduce using rule 133 (puntoPopFondoFalso -> .)
    RPAREN          reduce using rule 133 (puntoPopFondoFalso -> .)
    RBRACKET        reduce using rule 133 (puntoPopFondoFalso -> .)
    COMMA           reduce using rule 133 (puntoPopFondoFalso -> .)

    puntoPopFondoFalso             shift and go to state 247

state 213

    (33) tipo_cte1 -> LBRACKET CTE_INT . RBRACKET

    RBRACKET        shift and go to state 248


state 214

    (134) funciones_arr -> PUNTO funciones_arr1 . LPAREN RPAREN

    LPAREN          shift and go to state 249


state 215

    (135) funciones_arr1 -> MAX .

    LPAREN          reduce using rule 135 (funciones_arr1 -> MAX .)


state 216

    (136) funciones_arr1 -> MIN .

    LPAREN          reduce using rule 136 (funciones_arr1 -> MIN .)


state 217

    (137) funciones_arr1 -> RANGE .

    LPAREN          reduce using rule 137 (funciones_arr1 -> RANGE .)


state 218

    (138) funciones_arr1 -> MEDIAN .

    LPAREN          reduce using rule 138 (funciones_arr1 -> MEDIAN .)


state 219

    (139) funciones_arr1 -> AVERAGE .

    LPAREN          reduce using rule 139 (funciones_arr1 -> AVERAGE .)


state 220

    (140) funciones_arr1 -> IQRANGE .

    LPAREN          reduce using rule 140 (funciones_arr1 -> IQRANGE .)


state 221

    (141) funciones_arr1 -> STDEV .

    LPAREN          reduce using rule 141 (funciones_arr1 -> STDEV .)


state 222

    (142) funciones_arr1 -> VARIANCE .

    LPAREN          reduce using rule 142 (funciones_arr1 -> VARIANCE .)


state 223

    (143) funciones_arr1 -> MODIFY .

    LPAREN          reduce using rule 143 (funciones_arr1 -> MODIFY .)


state 224

    (144) funciones_arr1 -> DRAW .

    LPAREN          reduce using rule 144 (funciones_arr1 -> DRAW .)


state 225

    (97) while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN . puntoCreateWhileQuad bloque puntoEndWhileQuad
    (99) puntoCreateWhileQuad -> .

    LBLOQUE         reduce using rule 99 (puntoCreateWhileQuad -> .)

    puntoCreateWhileQuad           shift and go to state 250

state 226

    (101) do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN . expresion RPAREN puntoCreateDoWhileQuad
    (104) expresion -> . compare expresion2
    (108) compare -> . exp compare1
    (117) exp -> . termino puntoSumaResta exp1
    (122) termino -> . factor puntoMultDivide termino1
    (128) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (129) factor -> . tipo_cte
    (130) factor -> . MINUS tipo_cte
    (131) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (91) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 107
    MINUS           shift and go to state 109
    NOT             shift and go to state 110
    CTE_INT         shift and go to state 111
    CTE_FLOAT       shift and go to state 112
    CTE_BOOL        shift and go to state 113
    CTE_CHAR        shift and go to state 114
    ID              shift and go to state 115
    CALL            shift and go to state 92

    expresion                      shift and go to state 251
    compare                        shift and go to state 103
    exp                            shift and go to state 104
    termino                        shift and go to state 105
    factor                         shift and go to state 106
    tipo_cte                       shift and go to state 108
    llamada                        shift and go to state 116

state 227

    (62) bloque -> LBLOQUE bloque1 RBLOQUE .

    WHILE           reduce using rule 62 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    ELSE            reduce using rule 62 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    ID              reduce using rule 62 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    IF              reduce using rule 62 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    PRINT           reduce using rule 62 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    RETURN          reduce using rule 62 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    DO              reduce using rule 62 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    CALL            reduce using rule 62 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    RBLOQUE         reduce using rule 62 (bloque -> LBLOQUE bloque1 RBLOQUE .)


state 228

    (63) bloque1 -> estatuto bloque1 .

    RBLOQUE         reduce using rule 63 (bloque1 -> estatuto bloque1 .)


state 229

    (91) llamada -> CALL PUNTO ID LPAREN llamada1 . RPAREN

    RPAREN          shift and go to state 252


state 230

    (92) llamada1 -> expresion . llamada2
    (94) llamada2 -> . COMMA tipo ID llamada2
    (95) llamada2 -> . empty
    (145) empty -> .

    COMMA           shift and go to state 254
    RPAREN          reduce using rule 145 (empty -> .)

    llamada2                       shift and go to state 253
    empty                          shift and go to state 255

state 231

    (93) llamada1 -> empty .

    RPAREN          reduce using rule 93 (llamada1 -> empty .)


state 232

    (49) funciones3 -> COMMA tipo . ID funciones3

    ID              shift and go to state 256


state 233

    (72) asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .

    ID              reduce using rule 72 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    IF              reduce using rule 72 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    PRINT           reduce using rule 72 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    RETURN          reduce using rule 72 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    WHILE           reduce using rule 72 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    DO              reduce using rule 72 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    CALL            reduce using rule 72 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    RBLOQUE         reduce using rule 72 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)


state 234

    (75) asignacion2 -> expresion puntoCreateAsignacionQuad .

    SEMICOLON       reduce using rule 75 (asignacion2 -> expresion puntoCreateAsignacionQuad .)


state 235

    (79) leida -> INPUT LPAREN . RPAREN

    RPAREN          shift and go to state 257


state 236

    (80) condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque . condicion1 puntoFillIfQuad
    (81) condicion1 -> . ELSE puntoCreateElseQuad bloque
    (82) condicion1 -> . empty
    (145) empty -> .

    ELSE            shift and go to state 259
    ID              reduce using rule 145 (empty -> .)
    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    DO              reduce using rule 145 (empty -> .)
    CALL            reduce using rule 145 (empty -> .)
    RBLOQUE         reduce using rule 145 (empty -> .)

    condicion1                     shift and go to state 258
    empty                          shift and go to state 260

state 237

    (109) compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 109 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 109 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 109 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 109 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 109 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 109 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)


state 238

    (110) compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 110 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 110 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 110 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 110 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 110 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 110 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)


state 239

    (111) compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 111 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 111 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 111 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 111 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 111 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 111 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 240

    (112) compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 112 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 112 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 112 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 112 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 112 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 112 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 241

    (113) compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 113 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 113 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 113 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 113 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 113 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 113 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 242

    (114) compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 114 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 114 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 114 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 114 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 114 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 114 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 243

    (118) exp1 -> PLUS puntoPushOperador termino . puntoSumaResta exp1
    (121) puntoSumaResta -> .

    PLUS            reduce using rule 121 (puntoSumaResta -> .)
    MINUS           reduce using rule 121 (puntoSumaResta -> .)
    GREATERTHAN     reduce using rule 121 (puntoSumaResta -> .)
    LESSTHAN        reduce using rule 121 (puntoSumaResta -> .)
    GREATERTHANEQUAL reduce using rule 121 (puntoSumaResta -> .)
    LESSTHANEQUAL   reduce using rule 121 (puntoSumaResta -> .)
    EQUALEQUAL      reduce using rule 121 (puntoSumaResta -> .)
    NOTEQUAL        reduce using rule 121 (puntoSumaResta -> .)
    AND             reduce using rule 121 (puntoSumaResta -> .)
    OR              reduce using rule 121 (puntoSumaResta -> .)
    SEMICOLON       reduce using rule 121 (puntoSumaResta -> .)
    RPAREN          reduce using rule 121 (puntoSumaResta -> .)
    RBRACKET        reduce using rule 121 (puntoSumaResta -> .)
    COMMA           reduce using rule 121 (puntoSumaResta -> .)

    puntoSumaResta                 shift and go to state 261

state 244

    (119) exp1 -> MINUS puntoPushOperador termino . puntoSumaResta exp1
    (121) puntoSumaResta -> .

    PLUS            reduce using rule 121 (puntoSumaResta -> .)
    MINUS           reduce using rule 121 (puntoSumaResta -> .)
    GREATERTHAN     reduce using rule 121 (puntoSumaResta -> .)
    LESSTHAN        reduce using rule 121 (puntoSumaResta -> .)
    GREATERTHANEQUAL reduce using rule 121 (puntoSumaResta -> .)
    LESSTHANEQUAL   reduce using rule 121 (puntoSumaResta -> .)
    EQUALEQUAL      reduce using rule 121 (puntoSumaResta -> .)
    NOTEQUAL        reduce using rule 121 (puntoSumaResta -> .)
    AND             reduce using rule 121 (puntoSumaResta -> .)
    OR              reduce using rule 121 (puntoSumaResta -> .)
    SEMICOLON       reduce using rule 121 (puntoSumaResta -> .)
    RPAREN          reduce using rule 121 (puntoSumaResta -> .)
    RBRACKET        reduce using rule 121 (puntoSumaResta -> .)
    COMMA           reduce using rule 121 (puntoSumaResta -> .)

    puntoSumaResta                 shift and go to state 262

state 245

    (123) termino1 -> TIMES puntoPushOperador factor . puntoMultDivide termino1
    (126) puntoMultDivide -> .

    TIMES           reduce using rule 126 (puntoMultDivide -> .)
    DIVIDE          reduce using rule 126 (puntoMultDivide -> .)
    PLUS            reduce using rule 126 (puntoMultDivide -> .)
    MINUS           reduce using rule 126 (puntoMultDivide -> .)
    GREATERTHAN     reduce using rule 126 (puntoMultDivide -> .)
    LESSTHAN        reduce using rule 126 (puntoMultDivide -> .)
    GREATERTHANEQUAL reduce using rule 126 (puntoMultDivide -> .)
    LESSTHANEQUAL   reduce using rule 126 (puntoMultDivide -> .)
    EQUALEQUAL      reduce using rule 126 (puntoMultDivide -> .)
    NOTEQUAL        reduce using rule 126 (puntoMultDivide -> .)
    AND             reduce using rule 126 (puntoMultDivide -> .)
    OR              reduce using rule 126 (puntoMultDivide -> .)
    SEMICOLON       reduce using rule 126 (puntoMultDivide -> .)
    RPAREN          reduce using rule 126 (puntoMultDivide -> .)
    RBRACKET        reduce using rule 126 (puntoMultDivide -> .)
    COMMA           reduce using rule 126 (puntoMultDivide -> .)

    puntoMultDivide                shift and go to state 263

state 246

    (124) termino1 -> DIVIDE puntoPushOperador factor . puntoMultDivide termino1
    (126) puntoMultDivide -> .

    TIMES           reduce using rule 126 (puntoMultDivide -> .)
    DIVIDE          reduce using rule 126 (puntoMultDivide -> .)
    PLUS            reduce using rule 126 (puntoMultDivide -> .)
    MINUS           reduce using rule 126 (puntoMultDivide -> .)
    GREATERTHAN     reduce using rule 126 (puntoMultDivide -> .)
    LESSTHAN        reduce using rule 126 (puntoMultDivide -> .)
    GREATERTHANEQUAL reduce using rule 126 (puntoMultDivide -> .)
    LESSTHANEQUAL   reduce using rule 126 (puntoMultDivide -> .)
    EQUALEQUAL      reduce using rule 126 (puntoMultDivide -> .)
    NOTEQUAL        reduce using rule 126 (puntoMultDivide -> .)
    AND             reduce using rule 126 (puntoMultDivide -> .)
    OR              reduce using rule 126 (puntoMultDivide -> .)
    SEMICOLON       reduce using rule 126 (puntoMultDivide -> .)
    RPAREN          reduce using rule 126 (puntoMultDivide -> .)
    RBRACKET        reduce using rule 126 (puntoMultDivide -> .)
    COMMA           reduce using rule 126 (puntoMultDivide -> .)

    puntoMultDivide                shift and go to state 264

state 247

    (128) factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .

    TIMES           reduce using rule 128 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    DIVIDE          reduce using rule 128 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    PLUS            reduce using rule 128 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    MINUS           reduce using rule 128 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    GREATERTHAN     reduce using rule 128 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    LESSTHAN        reduce using rule 128 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    GREATERTHANEQUAL reduce using rule 128 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    LESSTHANEQUAL   reduce using rule 128 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    EQUALEQUAL      reduce using rule 128 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    NOTEQUAL        reduce using rule 128 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    AND             reduce using rule 128 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    OR              reduce using rule 128 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    SEMICOLON       reduce using rule 128 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    RPAREN          reduce using rule 128 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    RBRACKET        reduce using rule 128 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    COMMA           reduce using rule 128 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)


state 248

    (33) tipo_cte1 -> LBRACKET CTE_INT RBRACKET .

    TIMES           reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    DIVIDE          reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    PLUS            reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    MINUS           reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    GREATERTHAN     reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    LESSTHAN        reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    GREATERTHANEQUAL reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    LESSTHANEQUAL   reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    EQUALEQUAL      reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    NOTEQUAL        reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    AND             reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    OR              reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    SEMICOLON       reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    RPAREN          reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    RBRACKET        reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    COMMA           reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)


state 249

    (134) funciones_arr -> PUNTO funciones_arr1 LPAREN . RPAREN

    RPAREN          shift and go to state 265


state 250

    (97) while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad . bloque puntoEndWhileQuad
    (62) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 154

    bloque                         shift and go to state 266

state 251

    (101) do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion . RPAREN puntoCreateDoWhileQuad

    RPAREN          shift and go to state 267


state 252

    (91) llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .

    SEMICOLON       reduce using rule 91 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    TIMES           reduce using rule 91 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    DIVIDE          reduce using rule 91 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    PLUS            reduce using rule 91 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    MINUS           reduce using rule 91 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    GREATERTHAN     reduce using rule 91 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    LESSTHAN        reduce using rule 91 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    GREATERTHANEQUAL reduce using rule 91 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    LESSTHANEQUAL   reduce using rule 91 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    EQUALEQUAL      reduce using rule 91 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    NOTEQUAL        reduce using rule 91 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    AND             reduce using rule 91 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    OR              reduce using rule 91 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    RPAREN          reduce using rule 91 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    RBRACKET        reduce using rule 91 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    COMMA           reduce using rule 91 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)


state 253

    (92) llamada1 -> expresion llamada2 .

    RPAREN          reduce using rule 92 (llamada1 -> expresion llamada2 .)


state 254

    (94) llamada2 -> COMMA . tipo ID llamada2
    (22) tipo -> . INT puntoCurrentType
    (23) tipo -> . FLOAT puntoCurrentType
    (24) tipo -> . BOOL puntoCurrentType
    (25) tipo -> . CHAR puntoCurrentType

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 25
    CHAR            shift and go to state 26

    tipo                           shift and go to state 268

state 255

    (95) llamada2 -> empty .

    RPAREN          reduce using rule 95 (llamada2 -> empty .)


state 256

    (49) funciones3 -> COMMA tipo ID . funciones3
    (49) funciones3 -> . COMMA tipo ID funciones3
    (50) funciones3 -> . empty
    (145) empty -> .

    COMMA           shift and go to state 193
    RPAREN          reduce using rule 145 (empty -> .)

    funciones3                     shift and go to state 269
    empty                          shift and go to state 194

state 257

    (79) leida -> INPUT LPAREN RPAREN .

    SEMICOLON       reduce using rule 79 (leida -> INPUT LPAREN RPAREN .)


state 258

    (80) condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 . puntoFillIfQuad
    (84) puntoFillIfQuad -> .

    ID              reduce using rule 84 (puntoFillIfQuad -> .)
    IF              reduce using rule 84 (puntoFillIfQuad -> .)
    PRINT           reduce using rule 84 (puntoFillIfQuad -> .)
    RETURN          reduce using rule 84 (puntoFillIfQuad -> .)
    WHILE           reduce using rule 84 (puntoFillIfQuad -> .)
    DO              reduce using rule 84 (puntoFillIfQuad -> .)
    CALL            reduce using rule 84 (puntoFillIfQuad -> .)
    RBLOQUE         reduce using rule 84 (puntoFillIfQuad -> .)

    puntoFillIfQuad                shift and go to state 270

state 259

    (81) condicion1 -> ELSE . puntoCreateElseQuad bloque
    (85) puntoCreateElseQuad -> .

    LBLOQUE         reduce using rule 85 (puntoCreateElseQuad -> .)

    puntoCreateElseQuad            shift and go to state 271

state 260

    (82) condicion1 -> empty .

    ID              reduce using rule 82 (condicion1 -> empty .)
    IF              reduce using rule 82 (condicion1 -> empty .)
    PRINT           reduce using rule 82 (condicion1 -> empty .)
    RETURN          reduce using rule 82 (condicion1 -> empty .)
    WHILE           reduce using rule 82 (condicion1 -> empty .)
    DO              reduce using rule 82 (condicion1 -> empty .)
    CALL            reduce using rule 82 (condicion1 -> empty .)
    RBLOQUE         reduce using rule 82 (condicion1 -> empty .)


state 261

    (118) exp1 -> PLUS puntoPushOperador termino puntoSumaResta . exp1
    (118) exp1 -> . PLUS puntoPushOperador termino puntoSumaResta exp1
    (119) exp1 -> . MINUS puntoPushOperador termino puntoSumaResta exp1
    (120) exp1 -> . empty
    (145) empty -> .

    PLUS            shift and go to state 173
    MINUS           shift and go to state 174
    GREATERTHAN     reduce using rule 145 (empty -> .)
    LESSTHAN        reduce using rule 145 (empty -> .)
    GREATERTHANEQUAL reduce using rule 145 (empty -> .)
    LESSTHANEQUAL   reduce using rule 145 (empty -> .)
    EQUALEQUAL      reduce using rule 145 (empty -> .)
    NOTEQUAL        reduce using rule 145 (empty -> .)
    AND             reduce using rule 145 (empty -> .)
    OR              reduce using rule 145 (empty -> .)
    SEMICOLON       reduce using rule 145 (empty -> .)
    RPAREN          reduce using rule 145 (empty -> .)
    RBRACKET        reduce using rule 145 (empty -> .)
    COMMA           reduce using rule 145 (empty -> .)

    exp1                           shift and go to state 272
    empty                          shift and go to state 175

state 262

    (119) exp1 -> MINUS puntoPushOperador termino puntoSumaResta . exp1
    (118) exp1 -> . PLUS puntoPushOperador termino puntoSumaResta exp1
    (119) exp1 -> . MINUS puntoPushOperador termino puntoSumaResta exp1
    (120) exp1 -> . empty
    (145) empty -> .

    PLUS            shift and go to state 173
    MINUS           shift and go to state 174
    GREATERTHAN     reduce using rule 145 (empty -> .)
    LESSTHAN        reduce using rule 145 (empty -> .)
    GREATERTHANEQUAL reduce using rule 145 (empty -> .)
    LESSTHANEQUAL   reduce using rule 145 (empty -> .)
    EQUALEQUAL      reduce using rule 145 (empty -> .)
    NOTEQUAL        reduce using rule 145 (empty -> .)
    AND             reduce using rule 145 (empty -> .)
    OR              reduce using rule 145 (empty -> .)
    SEMICOLON       reduce using rule 145 (empty -> .)
    RPAREN          reduce using rule 145 (empty -> .)
    RBRACKET        reduce using rule 145 (empty -> .)
    COMMA           reduce using rule 145 (empty -> .)

    exp1                           shift and go to state 273
    empty                          shift and go to state 175

state 263

    (123) termino1 -> TIMES puntoPushOperador factor puntoMultDivide . termino1
    (123) termino1 -> . TIMES puntoPushOperador factor puntoMultDivide termino1
    (124) termino1 -> . DIVIDE puntoPushOperador factor puntoMultDivide termino1
    (125) termino1 -> . empty
    (145) empty -> .

    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 178
    PLUS            reduce using rule 145 (empty -> .)
    MINUS           reduce using rule 145 (empty -> .)
    GREATERTHAN     reduce using rule 145 (empty -> .)
    LESSTHAN        reduce using rule 145 (empty -> .)
    GREATERTHANEQUAL reduce using rule 145 (empty -> .)
    LESSTHANEQUAL   reduce using rule 145 (empty -> .)
    EQUALEQUAL      reduce using rule 145 (empty -> .)
    NOTEQUAL        reduce using rule 145 (empty -> .)
    AND             reduce using rule 145 (empty -> .)
    OR              reduce using rule 145 (empty -> .)
    SEMICOLON       reduce using rule 145 (empty -> .)
    RPAREN          reduce using rule 145 (empty -> .)
    RBRACKET        reduce using rule 145 (empty -> .)
    COMMA           reduce using rule 145 (empty -> .)

    termino1                       shift and go to state 274
    empty                          shift and go to state 179

state 264

    (124) termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide . termino1
    (123) termino1 -> . TIMES puntoPushOperador factor puntoMultDivide termino1
    (124) termino1 -> . DIVIDE puntoPushOperador factor puntoMultDivide termino1
    (125) termino1 -> . empty
    (145) empty -> .

    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 178
    PLUS            reduce using rule 145 (empty -> .)
    MINUS           reduce using rule 145 (empty -> .)
    GREATERTHAN     reduce using rule 145 (empty -> .)
    LESSTHAN        reduce using rule 145 (empty -> .)
    GREATERTHANEQUAL reduce using rule 145 (empty -> .)
    LESSTHANEQUAL   reduce using rule 145 (empty -> .)
    EQUALEQUAL      reduce using rule 145 (empty -> .)
    NOTEQUAL        reduce using rule 145 (empty -> .)
    AND             reduce using rule 145 (empty -> .)
    OR              reduce using rule 145 (empty -> .)
    SEMICOLON       reduce using rule 145 (empty -> .)
    RPAREN          reduce using rule 145 (empty -> .)
    RBRACKET        reduce using rule 145 (empty -> .)
    COMMA           reduce using rule 145 (empty -> .)

    termino1                       shift and go to state 275
    empty                          shift and go to state 179

state 265

    (134) funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .

    TIMES           reduce using rule 134 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    DIVIDE          reduce using rule 134 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    PLUS            reduce using rule 134 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    MINUS           reduce using rule 134 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    GREATERTHAN     reduce using rule 134 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    LESSTHAN        reduce using rule 134 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    GREATERTHANEQUAL reduce using rule 134 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    LESSTHANEQUAL   reduce using rule 134 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    EQUALEQUAL      reduce using rule 134 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 134 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    AND             reduce using rule 134 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    OR              reduce using rule 134 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    SEMICOLON       reduce using rule 134 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    RPAREN          reduce using rule 134 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    RBRACKET        reduce using rule 134 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    COMMA           reduce using rule 134 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)


state 266

    (97) while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque . puntoEndWhileQuad
    (100) puntoEndWhileQuad -> .

    ID              reduce using rule 100 (puntoEndWhileQuad -> .)
    IF              reduce using rule 100 (puntoEndWhileQuad -> .)
    PRINT           reduce using rule 100 (puntoEndWhileQuad -> .)
    RETURN          reduce using rule 100 (puntoEndWhileQuad -> .)
    WHILE           reduce using rule 100 (puntoEndWhileQuad -> .)
    DO              reduce using rule 100 (puntoEndWhileQuad -> .)
    CALL            reduce using rule 100 (puntoEndWhileQuad -> .)
    RBLOQUE         reduce using rule 100 (puntoEndWhileQuad -> .)

    puntoEndWhileQuad              shift and go to state 276

state 267

    (101) do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN . puntoCreateDoWhileQuad
    (103) puntoCreateDoWhileQuad -> .

    ID              reduce using rule 103 (puntoCreateDoWhileQuad -> .)
    IF              reduce using rule 103 (puntoCreateDoWhileQuad -> .)
    PRINT           reduce using rule 103 (puntoCreateDoWhileQuad -> .)
    RETURN          reduce using rule 103 (puntoCreateDoWhileQuad -> .)
    WHILE           reduce using rule 103 (puntoCreateDoWhileQuad -> .)
    DO              reduce using rule 103 (puntoCreateDoWhileQuad -> .)
    CALL            reduce using rule 103 (puntoCreateDoWhileQuad -> .)
    RBLOQUE         reduce using rule 103 (puntoCreateDoWhileQuad -> .)

    puntoCreateDoWhileQuad         shift and go to state 277

state 268

    (94) llamada2 -> COMMA tipo . ID llamada2

    ID              shift and go to state 278


state 269

    (49) funciones3 -> COMMA tipo ID funciones3 .

    RPAREN          reduce using rule 49 (funciones3 -> COMMA tipo ID funciones3 .)


state 270

    (80) condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .

    ID              reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    IF              reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    PRINT           reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    RETURN          reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    WHILE           reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    DO              reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    CALL            reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    RBLOQUE         reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)


state 271

    (81) condicion1 -> ELSE puntoCreateElseQuad . bloque
    (62) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 154

    bloque                         shift and go to state 279

state 272

    (118) exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .

    GREATERTHAN     reduce using rule 118 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHAN        reduce using rule 118 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    GREATERTHANEQUAL reduce using rule 118 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHANEQUAL   reduce using rule 118 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    EQUALEQUAL      reduce using rule 118 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    NOTEQUAL        reduce using rule 118 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    AND             reduce using rule 118 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    OR              reduce using rule 118 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    SEMICOLON       reduce using rule 118 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    RPAREN          reduce using rule 118 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    RBRACKET        reduce using rule 118 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    COMMA           reduce using rule 118 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)


state 273

    (119) exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .

    GREATERTHAN     reduce using rule 119 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHAN        reduce using rule 119 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    GREATERTHANEQUAL reduce using rule 119 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHANEQUAL   reduce using rule 119 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    EQUALEQUAL      reduce using rule 119 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    NOTEQUAL        reduce using rule 119 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    AND             reduce using rule 119 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    OR              reduce using rule 119 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    SEMICOLON       reduce using rule 119 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    RPAREN          reduce using rule 119 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    RBRACKET        reduce using rule 119 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    COMMA           reduce using rule 119 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)


state 274

    (123) termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .

    PLUS            reduce using rule 123 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    MINUS           reduce using rule 123 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHAN     reduce using rule 123 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHAN        reduce using rule 123 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHANEQUAL reduce using rule 123 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHANEQUAL   reduce using rule 123 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    EQUALEQUAL      reduce using rule 123 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    NOTEQUAL        reduce using rule 123 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    AND             reduce using rule 123 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    OR              reduce using rule 123 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    SEMICOLON       reduce using rule 123 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    RPAREN          reduce using rule 123 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    RBRACKET        reduce using rule 123 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    COMMA           reduce using rule 123 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)


state 275

    (124) termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .

    PLUS            reduce using rule 124 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    MINUS           reduce using rule 124 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHAN     reduce using rule 124 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHAN        reduce using rule 124 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHANEQUAL reduce using rule 124 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHANEQUAL   reduce using rule 124 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    EQUALEQUAL      reduce using rule 124 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    NOTEQUAL        reduce using rule 124 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    AND             reduce using rule 124 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    OR              reduce using rule 124 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    SEMICOLON       reduce using rule 124 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    RPAREN          reduce using rule 124 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    RBRACKET        reduce using rule 124 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    COMMA           reduce using rule 124 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)


state 276

    (97) while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .

    ID              reduce using rule 97 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    IF              reduce using rule 97 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    PRINT           reduce using rule 97 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    RETURN          reduce using rule 97 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    WHILE           reduce using rule 97 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    DO              reduce using rule 97 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    CALL            reduce using rule 97 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    RBLOQUE         reduce using rule 97 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)


state 277

    (101) do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .

    ID              reduce using rule 101 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    IF              reduce using rule 101 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    PRINT           reduce using rule 101 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    RETURN          reduce using rule 101 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    WHILE           reduce using rule 101 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    DO              reduce using rule 101 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    CALL            reduce using rule 101 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    RBLOQUE         reduce using rule 101 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)


state 278

    (94) llamada2 -> COMMA tipo ID . llamada2
    (94) llamada2 -> . COMMA tipo ID llamada2
    (95) llamada2 -> . empty
    (145) empty -> .

    COMMA           shift and go to state 254
    RPAREN          reduce using rule 145 (empty -> .)

    llamada2                       shift and go to state 280
    empty                          shift and go to state 255

state 279

    (81) condicion1 -> ELSE puntoCreateElseQuad bloque .

    ID              reduce using rule 81 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    IF              reduce using rule 81 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    PRINT           reduce using rule 81 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    RETURN          reduce using rule 81 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    WHILE           reduce using rule 81 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    DO              reduce using rule 81 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    CALL            reduce using rule 81 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    RBLOQUE         reduce using rule 81 (condicion1 -> ELSE puntoCreateElseQuad bloque .)


state 280

    (94) llamada2 -> COMMA tipo ID llamada2 .

    RPAREN          reduce using rule 94 (llamada2 -> COMMA tipo ID llamada2 .)

