Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
Rule 2     programa1 -> vars programa1
Rule 3     programa1 -> empty
Rule 4     programa2 -> funciones programa2
Rule 5     programa2 -> empty
Rule 6     puntoFillMainQuad -> <empty>
Rule 7     puntoCreateProgram -> <empty>
Rule 8     puntoChangeStateLocal -> <empty>
Rule 9     puntoPrintFinal -> <empty>
Rule 10    vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
Rule 11    vars1 -> COMMA ID puntoCreateVar vars1
Rule 12    vars1 -> empty
Rule 13    vars2 -> tipo puntoCreateVarType
Rule 14    vars2 -> tipo_graph
Rule 15    vars3 -> LBRACKET CTE_INT puntoChangeDimension RBRACKET
Rule 16    vars3 -> empty
Rule 17    puntoChangeDimension -> <empty>
Rule 18    puntoCreateVarTable -> <empty>
Rule 19    puntoCreateVarTableState -> <empty>
Rule 20    puntoCreateVar -> <empty>
Rule 21    puntoCreateVarType -> <empty>
Rule 22    puntoCreateDimension -> <empty>
Rule 23    tipo -> INT puntoCurrentType
Rule 24    tipo -> FLOAT puntoCurrentType
Rule 25    tipo -> BOOL puntoCurrentType
Rule 26    tipo -> CHAR puntoCurrentType
Rule 27    puntoCurrentType -> <empty>
Rule 28    tipo_cte -> CTE_INT puntoPushInt
Rule 29    tipo_cte -> CTE_FLOAT puntoPushFloat
Rule 30    tipo_cte -> CTE_BOOL puntoPushBool
Rule 31    tipo_cte -> CTE_CHAR puntoPushChar
Rule 32    tipo_cte -> ID puntoPushID tipo_cte1
Rule 33    tipo_cte -> llamada
Rule 34    tipo_cte1 -> LBRACKET CTE_INT RBRACKET
Rule 35    tipo_cte1 -> funciones_arr
Rule 36    tipo_cte1 -> empty
Rule 37    puntoPushInt -> <empty>
Rule 38    puntoPushFloat -> <empty>
Rule 39    puntoPushBool -> <empty>
Rule 40    puntoPushChar -> <empty>
Rule 41    puntoPushID -> <empty>
Rule 42    tipo_graph -> PIECHART
Rule 43    tipo_graph -> BARGRAPH
Rule 44    tipo_graph -> PLOTLINE
Rule 45    funciones -> FUNC puntoResetMemoria funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
Rule 46    funciones1 -> VOID
Rule 47    funciones1 -> tipo puntoReturnType
Rule 48    funciones2 -> tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
Rule 49    funciones2 -> empty
Rule 50    funciones3 -> COMMA tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
Rule 51    funciones3 -> empty
Rule 52    puntoResetMemoria -> <empty>
Rule 53    puntoReturnType -> <empty>
Rule 54    puntoChangeStateFuncion -> <empty>
Rule 55    puntoCreateParamTable -> <empty>
Rule 56    puntoPushParam -> <empty>
Rule 57    puntoCreateParamCount -> <empty>
Rule 58    puntoFinalFuncQuad -> <empty>
Rule 59    main -> VOID MAIN LPAREN RPAREN bloque_modular
Rule 60    bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE
Rule 61    bloque_modular1 -> vars bloque_modular1
Rule 62    bloque_modular1 -> empty
Rule 63    bloque_modular2 -> estatuto bloque_modular2
Rule 64    bloque_modular2 -> empty
Rule 65    bloque -> LBLOQUE bloque1 RBLOQUE
Rule 66    bloque1 -> estatuto bloque1
Rule 67    bloque1 -> empty
Rule 68    estatuto -> asignacion
Rule 69    estatuto -> condicion
Rule 70    estatuto -> escritura
Rule 71    estatuto -> return
Rule 72    estatuto -> while
Rule 73    estatuto -> do_while
Rule 74    estatuto -> llamada SEMICOLON
Rule 75    asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
Rule 76    asignacion1 -> LBRACKET expresion puntoCreateArrQuad RBRACKET
Rule 77    asignacion1 -> empty
Rule 78    asignacion2 -> expresion puntoCreateAsignacionQuad
Rule 79    asignacion2 -> leida
Rule 80    puntoSaveIDAsignacion -> <empty>
Rule 81    puntoCreateArrQuad -> <empty>
Rule 82    puntoCreateAsignacionQuad -> <empty>
Rule 83    leida -> INPUT LPAREN RPAREN
Rule 84    condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
Rule 85    condicion1 -> ELSE puntoCreateElseQuad bloque
Rule 86    condicion1 -> empty
Rule 87    puntoCreateIfQuad -> <empty>
Rule 88    puntoFillIfQuad -> <empty>
Rule 89    puntoCreateElseQuad -> <empty>
Rule 90    escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON
Rule 91    escritura1 -> expresion puntoCreatePrintQuad
Rule 92    escritura1 -> CTE_STRING puntoCreatePrintConstantQuad
Rule 93    puntoCreatePrintQuad -> <empty>
Rule 94    puntoCreatePrintConstantQuad -> <empty>
Rule 95    llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad
Rule 96    llamada1 -> expresion puntoVerifyArgumento llamada2
Rule 97    llamada1 -> empty
Rule 98    llamada2 -> COMMA expresion puntoVerifyArgumento llamada2
Rule 99    llamada2 -> empty
Rule 100   puntoVerifyLlamada -> <empty>
Rule 101   puntoVerifyArgumento -> <empty>
Rule 102   puntoCreateGoSubQuad -> <empty>
Rule 103   return -> RETURN expresion puntoReturnQuad SEMICOLON
Rule 104   puntoReturnQuad -> <empty>
Rule 105   while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
Rule 106   puntoPushSaltoWhile -> <empty>
Rule 107   puntoCreateWhileQuad -> <empty>
Rule 108   puntoEndWhileQuad -> <empty>
Rule 109   do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
Rule 110   puntoPushSaltoDoWhile -> <empty>
Rule 111   puntoCreateDoWhileQuad -> <empty>
Rule 112   expresion -> compare expresion2
Rule 113   expresion2 -> AND puntoPushOperador compare puntoAndOr
Rule 114   expresion2 -> OR puntoPushOperador compare puntoAndOr
Rule 115   expresion2 -> empty
Rule 116   puntoAndOr -> <empty>
Rule 117   compare -> exp compare1
Rule 118   compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional
Rule 119   compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional
Rule 120   compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 121   compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 122   compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 123   compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 124   compare1 -> empty
Rule 125   puntoOperacionRelacional -> <empty>
Rule 126   exp -> termino puntoSumaResta exp1
Rule 127   exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1
Rule 128   exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1
Rule 129   exp1 -> empty
Rule 130   puntoSumaResta -> <empty>
Rule 131   termino -> factor puntoMultDivide termino1
Rule 132   termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1
Rule 133   termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1
Rule 134   termino1 -> empty
Rule 135   puntoMultDivide -> <empty>
Rule 136   puntoPushOperador -> <empty>
Rule 137   factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
Rule 138   factor -> tipo_cte
Rule 139   factor -> MINUS tipo_cte
Rule 140   factor -> NOT tipo_cte
Rule 141   puntoPushFondoFalso -> <empty>
Rule 142   puntoPopFondoFalso -> <empty>
Rule 143   funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN
Rule 144   funciones_arr1 -> MAX
Rule 145   funciones_arr1 -> MIN
Rule 146   funciones_arr1 -> RANGE
Rule 147   funciones_arr1 -> MEDIAN
Rule 148   funciones_arr1 -> AVERAGE
Rule 149   funciones_arr1 -> IQRANGE
Rule 150   funciones_arr1 -> STDEV
Rule 151   funciones_arr1 -> VARIANCE
Rule 152   funciones_arr1 -> MODIFY
Rule 153   funciones_arr1 -> DRAW
Rule 154   empty -> <empty>

Terminals, with rules where they appear

AND                  : 113
AS                   : 10
AVERAGE              : 148
BARGRAPH             : 43
BOOL                 : 25
CALL                 : 95
CHAR                 : 26
COMMA                : 11 50 98
CTE_BOOL             : 30
CTE_CHAR             : 31
CTE_FLOAT            : 29
CTE_INT              : 15 28 34
CTE_STRING           : 92
DIVIDE               : 133
DO                   : 109
DRAW                 : 153
ELSE                 : 85
EQUALEQUAL           : 122
EQUALS               : 75
FLOAT                : 24
FUNC                 : 45
GREATERTHAN          : 118
GREATERTHANEQUAL     : 120
ID                   : 1 10 11 32 45 48 50 75 95
IF                   : 84
INPUT                : 83
INT                  : 23
IQRANGE              : 149
LBLOQUE              : 60 65
LBRACKET             : 15 34 76
LESSTHAN             : 119
LESSTHANEQUAL        : 121
LPAREN               : 45 59 83 84 90 95 105 109 137 143
MAIN                 : 59
MAX                  : 144
MEDIAN               : 147
MIN                  : 145
MINUS                : 128 139
MODIFY               : 152
NOT                  : 140
NOTEQUAL             : 123
OR                   : 114
PIECHART             : 42
PLOTLINE             : 44
PLUS                 : 127
PRINT                : 90
PROGRAM              : 1
PUNTO                : 95 143
RANGE                : 146
RBLOQUE              : 60 65
RBRACKET             : 15 34 76
RETURN               : 103
RPAREN               : 45 59 83 84 90 95 105 109 137 143
SEMICOLON            : 1 10 74 75 90 103
STDEV                : 150
TIMES                : 132
VAR                  : 10
VARIANCE             : 151
VOID                 : 46 59
WHILE                : 105 109
error                : 

Nonterminals, with rules where they appear

asignacion           : 68
asignacion1          : 75
asignacion2          : 75
bloque               : 84 85 105 109
bloque1              : 65 66
bloque_modular       : 45 59
bloque_modular1      : 60 61
bloque_modular2      : 60 63
compare              : 112 113 114
compare1             : 117
condicion            : 69
condicion1           : 84
do_while             : 73
empty                : 3 5 12 16 36 49 51 62 64 67 77 86 97 99 115 124 129 134
escritura            : 70
escritura1           : 90
estatuto             : 63 66
exp                  : 117 118 119 120 121 122 123
exp1                 : 126 127 128
expresion            : 76 78 84 91 96 98 103 105 109 137
expresion2           : 112
factor               : 131 132 133
funciones            : 4
funciones1           : 45
funciones2           : 45
funciones3           : 48 50
funciones_arr        : 35
funciones_arr1       : 143
leida                : 79
llamada              : 33 74
llamada1             : 95
llamada2             : 96 98
main                 : 1
programa             : 0
programa1            : 1 2
programa2            : 1 4
puntoAndOr           : 113 114
puntoChangeDimension : 15
puntoChangeStateFuncion : 45
puntoChangeStateLocal : 1
puntoCreateArrQuad   : 76
puntoCreateAsignacionQuad : 78
puntoCreateDimension : 10
puntoCreateDoWhileQuad : 109
puntoCreateElseQuad  : 85
puntoCreateGoSubQuad : 95
puntoCreateIfQuad    : 84
puntoCreateParamCount : 45
puntoCreateParamTable : 45
puntoCreatePrintConstantQuad : 92
puntoCreatePrintQuad : 91
puntoCreateProgram   : 1
puntoCreateVar       : 10 11 48 50
puntoCreateVarTable  : 1
puntoCreateVarTableState : 1 1 45
puntoCreateVarType   : 13 48 50
puntoCreateWhileQuad : 105
puntoCurrentType     : 23 24 25 26
puntoEndWhileQuad    : 105
puntoFillIfQuad      : 84
puntoFillMainQuad    : 1
puntoFinalFuncQuad   : 45
puntoMultDivide      : 131 132 133
puntoOperacionRelacional : 118 119 120 121 122 123
puntoPopFondoFalso   : 95 137
puntoPrintFinal      : 1
puntoPushBool        : 30
puntoPushChar        : 31
puntoPushFloat       : 29
puntoPushFondoFalso  : 95 137
puntoPushID          : 32
puntoPushInt         : 28
puntoPushOperador    : 113 114 118 119 120 121 122 123 127 128 132 133
puntoPushParam       : 48 50
puntoPushSaltoDoWhile : 109
puntoPushSaltoWhile  : 105
puntoResetMemoria    : 45
puntoReturnQuad      : 103
puntoReturnType      : 47
puntoSaveIDAsignacion : 75
puntoSumaResta       : 126 127 128
puntoVerifyArgumento : 96 98
puntoVerifyLlamada   : 95
return               : 71
termino              : 126 127 128
termino1             : 131 132 133
tipo                 : 13 47 48 50
tipo_cte             : 138 139 140
tipo_cte1            : 32
tipo_graph           : 14
vars                 : 2 61
vars1                : 10 11
vars2                : 10
vars3                : 10
while                : 72

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (7) puntoCreateProgram -> .

    SEMICOLON       reduce using rule 7 (puntoCreateProgram -> .)

    puntoCreateProgram             shift and go to state 4

state 4

    (1) programa -> PROGRAM ID puntoCreateProgram . SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON . puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (18) puntoCreateVarTable -> .

    VAR             reduce using rule 18 (puntoCreateVarTable -> .)
    FUNC            reduce using rule 18 (puntoCreateVarTable -> .)
    VOID            reduce using rule 18 (puntoCreateVarTable -> .)

    puntoCreateVarTable            shift and go to state 6

state 6

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable . puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (19) puntoCreateVarTableState -> .

    VAR             reduce using rule 19 (puntoCreateVarTableState -> .)
    FUNC            reduce using rule 19 (puntoCreateVarTableState -> .)
    VOID            reduce using rule 19 (puntoCreateVarTableState -> .)

    puntoCreateVarTableState       shift and go to state 7

state 7

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState . programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (2) programa1 -> . vars programa1
    (3) programa1 -> . empty
    (10) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (154) empty -> .

    VAR             shift and go to state 11
    FUNC            reduce using rule 154 (empty -> .)
    VOID            reduce using rule 154 (empty -> .)

    programa1                      shift and go to state 8
    vars                           shift and go to state 9
    empty                          shift and go to state 10

state 8

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 . programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (4) programa2 -> . funciones programa2
    (5) programa2 -> . empty
    (45) funciones -> . FUNC puntoResetMemoria funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (154) empty -> .

    FUNC            shift and go to state 15
    VOID            reduce using rule 154 (empty -> .)

    programa2                      shift and go to state 12
    funciones                      shift and go to state 13
    empty                          shift and go to state 14

state 9

    (2) programa1 -> vars . programa1
    (2) programa1 -> . vars programa1
    (3) programa1 -> . empty
    (10) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (154) empty -> .

    VAR             shift and go to state 11
    FUNC            reduce using rule 154 (empty -> .)
    VOID            reduce using rule 154 (empty -> .)

    vars                           shift and go to state 9
    programa1                      shift and go to state 16
    empty                          shift and go to state 10

state 10

    (3) programa1 -> empty .

    FUNC            reduce using rule 3 (programa1 -> empty .)
    VOID            reduce using rule 3 (programa1 -> empty .)


state 11

    (10) vars -> VAR . ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON

    ID              shift and go to state 17


state 12

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 . puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (8) puntoChangeStateLocal -> .

    VOID            reduce using rule 8 (puntoChangeStateLocal -> .)

    puntoChangeStateLocal          shift and go to state 18

state 13

    (4) programa2 -> funciones . programa2
    (4) programa2 -> . funciones programa2
    (5) programa2 -> . empty
    (45) funciones -> . FUNC puntoResetMemoria funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (154) empty -> .

    FUNC            shift and go to state 15
    VOID            reduce using rule 154 (empty -> .)

    funciones                      shift and go to state 13
    programa2                      shift and go to state 19
    empty                          shift and go to state 14

state 14

    (5) programa2 -> empty .

    VOID            reduce using rule 5 (programa2 -> empty .)


state 15

    (45) funciones -> FUNC . puntoResetMemoria funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (52) puntoResetMemoria -> .

    VOID            reduce using rule 52 (puntoResetMemoria -> .)
    INT             reduce using rule 52 (puntoResetMemoria -> .)
    FLOAT           reduce using rule 52 (puntoResetMemoria -> .)
    BOOL            reduce using rule 52 (puntoResetMemoria -> .)
    CHAR            reduce using rule 52 (puntoResetMemoria -> .)

    puntoResetMemoria              shift and go to state 20

state 16

    (2) programa1 -> vars programa1 .

    FUNC            reduce using rule 2 (programa1 -> vars programa1 .)
    VOID            reduce using rule 2 (programa1 -> vars programa1 .)


state 17

    (10) vars -> VAR ID . puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (20) puntoCreateVar -> .

    COMMA           reduce using rule 20 (puntoCreateVar -> .)
    AS              reduce using rule 20 (puntoCreateVar -> .)

    puntoCreateVar                 shift and go to state 21

state 18

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal . puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal
    (19) puntoCreateVarTableState -> .

    VOID            reduce using rule 19 (puntoCreateVarTableState -> .)

    puntoCreateVarTableState       shift and go to state 22

state 19

    (4) programa2 -> funciones programa2 .

    VOID            reduce using rule 4 (programa2 -> funciones programa2 .)


state 20

    (45) funciones -> FUNC puntoResetMemoria . funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (46) funciones1 -> . VOID
    (47) funciones1 -> . tipo puntoReturnType
    (23) tipo -> . INT puntoCurrentType
    (24) tipo -> . FLOAT puntoCurrentType
    (25) tipo -> . BOOL puntoCurrentType
    (26) tipo -> . CHAR puntoCurrentType

    VOID            shift and go to state 24
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    BOOL            shift and go to state 28
    CHAR            shift and go to state 29

    funciones1                     shift and go to state 23
    tipo                           shift and go to state 25

state 21

    (10) vars -> VAR ID puntoCreateVar . vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (11) vars1 -> . COMMA ID puntoCreateVar vars1
    (12) vars1 -> . empty
    (154) empty -> .

    COMMA           shift and go to state 31
    AS              reduce using rule 154 (empty -> .)

    vars1                          shift and go to state 30
    empty                          shift and go to state 32

state 22

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState . puntoFillMainQuad main puntoPrintFinal
    (6) puntoFillMainQuad -> .

    VOID            reduce using rule 6 (puntoFillMainQuad -> .)

    puntoFillMainQuad              shift and go to state 33

state 23

    (45) funciones -> FUNC puntoResetMemoria funciones1 . ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad

    ID              shift and go to state 34


state 24

    (46) funciones1 -> VOID .

    ID              reduce using rule 46 (funciones1 -> VOID .)


state 25

    (47) funciones1 -> tipo . puntoReturnType
    (53) puntoReturnType -> .

    ID              reduce using rule 53 (puntoReturnType -> .)

    puntoReturnType                shift and go to state 35

state 26

    (23) tipo -> INT . puntoCurrentType
    (27) puntoCurrentType -> .

    ID              reduce using rule 27 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 27 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 27 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 36

state 27

    (24) tipo -> FLOAT . puntoCurrentType
    (27) puntoCurrentType -> .

    ID              reduce using rule 27 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 27 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 27 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 37

state 28

    (25) tipo -> BOOL . puntoCurrentType
    (27) puntoCurrentType -> .

    ID              reduce using rule 27 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 27 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 27 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 38

state 29

    (26) tipo -> CHAR . puntoCurrentType
    (27) puntoCurrentType -> .

    ID              reduce using rule 27 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 27 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 27 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 39

state 30

    (10) vars -> VAR ID puntoCreateVar vars1 . AS vars2 vars3 puntoCreateDimension SEMICOLON

    AS              shift and go to state 40


state 31

    (11) vars1 -> COMMA . ID puntoCreateVar vars1

    ID              shift and go to state 41


state 32

    (12) vars1 -> empty .

    AS              reduce using rule 12 (vars1 -> empty .)


state 33

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad . main puntoPrintFinal
    (59) main -> . VOID MAIN LPAREN RPAREN bloque_modular

    VOID            shift and go to state 43

    main                           shift and go to state 42

state 34

    (45) funciones -> FUNC puntoResetMemoria funciones1 ID . puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (54) puntoChangeStateFuncion -> .

    LPAREN          reduce using rule 54 (puntoChangeStateFuncion -> .)

    puntoChangeStateFuncion        shift and go to state 44

state 35

    (47) funciones1 -> tipo puntoReturnType .

    ID              reduce using rule 47 (funciones1 -> tipo puntoReturnType .)


state 36

    (23) tipo -> INT puntoCurrentType .

    ID              reduce using rule 23 (tipo -> INT puntoCurrentType .)
    LBRACKET        reduce using rule 23 (tipo -> INT puntoCurrentType .)
    SEMICOLON       reduce using rule 23 (tipo -> INT puntoCurrentType .)


state 37

    (24) tipo -> FLOAT puntoCurrentType .

    ID              reduce using rule 24 (tipo -> FLOAT puntoCurrentType .)
    LBRACKET        reduce using rule 24 (tipo -> FLOAT puntoCurrentType .)
    SEMICOLON       reduce using rule 24 (tipo -> FLOAT puntoCurrentType .)


state 38

    (25) tipo -> BOOL puntoCurrentType .

    ID              reduce using rule 25 (tipo -> BOOL puntoCurrentType .)
    LBRACKET        reduce using rule 25 (tipo -> BOOL puntoCurrentType .)
    SEMICOLON       reduce using rule 25 (tipo -> BOOL puntoCurrentType .)


state 39

    (26) tipo -> CHAR puntoCurrentType .

    ID              reduce using rule 26 (tipo -> CHAR puntoCurrentType .)
    LBRACKET        reduce using rule 26 (tipo -> CHAR puntoCurrentType .)
    SEMICOLON       reduce using rule 26 (tipo -> CHAR puntoCurrentType .)


state 40

    (10) vars -> VAR ID puntoCreateVar vars1 AS . vars2 vars3 puntoCreateDimension SEMICOLON
    (13) vars2 -> . tipo puntoCreateVarType
    (14) vars2 -> . tipo_graph
    (23) tipo -> . INT puntoCurrentType
    (24) tipo -> . FLOAT puntoCurrentType
    (25) tipo -> . BOOL puntoCurrentType
    (26) tipo -> . CHAR puntoCurrentType
    (42) tipo_graph -> . PIECHART
    (43) tipo_graph -> . BARGRAPH
    (44) tipo_graph -> . PLOTLINE

    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    BOOL            shift and go to state 28
    CHAR            shift and go to state 29
    PIECHART        shift and go to state 48
    BARGRAPH        shift and go to state 49
    PLOTLINE        shift and go to state 50

    vars2                          shift and go to state 45
    tipo                           shift and go to state 46
    tipo_graph                     shift and go to state 47

state 41

    (11) vars1 -> COMMA ID . puntoCreateVar vars1
    (20) puntoCreateVar -> .

    COMMA           reduce using rule 20 (puntoCreateVar -> .)
    AS              reduce using rule 20 (puntoCreateVar -> .)

    puntoCreateVar                 shift and go to state 51

state 42

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main . puntoPrintFinal
    (9) puntoPrintFinal -> .

    $end            reduce using rule 9 (puntoPrintFinal -> .)

    puntoPrintFinal                shift and go to state 52

state 43

    (59) main -> VOID . MAIN LPAREN RPAREN bloque_modular

    MAIN            shift and go to state 53


state 44

    (45) funciones -> FUNC puntoResetMemoria funciones1 ID puntoChangeStateFuncion . puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (19) puntoCreateVarTableState -> .

    LPAREN          reduce using rule 19 (puntoCreateVarTableState -> .)

    puntoCreateVarTableState       shift and go to state 54

state 45

    (10) vars -> VAR ID puntoCreateVar vars1 AS vars2 . vars3 puntoCreateDimension SEMICOLON
    (15) vars3 -> . LBRACKET CTE_INT puntoChangeDimension RBRACKET
    (16) vars3 -> . empty
    (154) empty -> .

    LBRACKET        shift and go to state 56
    SEMICOLON       reduce using rule 154 (empty -> .)

    vars3                          shift and go to state 55
    empty                          shift and go to state 57

state 46

    (13) vars2 -> tipo . puntoCreateVarType
    (21) puntoCreateVarType -> .

    LBRACKET        reduce using rule 21 (puntoCreateVarType -> .)
    SEMICOLON       reduce using rule 21 (puntoCreateVarType -> .)

    puntoCreateVarType             shift and go to state 58

state 47

    (14) vars2 -> tipo_graph .

    LBRACKET        reduce using rule 14 (vars2 -> tipo_graph .)
    SEMICOLON       reduce using rule 14 (vars2 -> tipo_graph .)


state 48

    (42) tipo_graph -> PIECHART .

    LBRACKET        reduce using rule 42 (tipo_graph -> PIECHART .)
    SEMICOLON       reduce using rule 42 (tipo_graph -> PIECHART .)


state 49

    (43) tipo_graph -> BARGRAPH .

    LBRACKET        reduce using rule 43 (tipo_graph -> BARGRAPH .)
    SEMICOLON       reduce using rule 43 (tipo_graph -> BARGRAPH .)


state 50

    (44) tipo_graph -> PLOTLINE .

    LBRACKET        reduce using rule 44 (tipo_graph -> PLOTLINE .)
    SEMICOLON       reduce using rule 44 (tipo_graph -> PLOTLINE .)


state 51

    (11) vars1 -> COMMA ID puntoCreateVar . vars1
    (11) vars1 -> . COMMA ID puntoCreateVar vars1
    (12) vars1 -> . empty
    (154) empty -> .

    COMMA           shift and go to state 31
    AS              reduce using rule 154 (empty -> .)

    vars1                          shift and go to state 59
    empty                          shift and go to state 32

state 52

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal .

    $end            reduce using rule 1 (programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState puntoFillMainQuad main puntoPrintFinal .)


state 53

    (59) main -> VOID MAIN . LPAREN RPAREN bloque_modular

    LPAREN          shift and go to state 60


state 54

    (45) funciones -> FUNC puntoResetMemoria funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState . LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad

    LPAREN          shift and go to state 61


state 55

    (10) vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 . puntoCreateDimension SEMICOLON
    (22) puntoCreateDimension -> .

    SEMICOLON       reduce using rule 22 (puntoCreateDimension -> .)

    puntoCreateDimension           shift and go to state 62

state 56

    (15) vars3 -> LBRACKET . CTE_INT puntoChangeDimension RBRACKET

    CTE_INT         shift and go to state 63


state 57

    (16) vars3 -> empty .

    SEMICOLON       reduce using rule 16 (vars3 -> empty .)


state 58

    (13) vars2 -> tipo puntoCreateVarType .

    LBRACKET        reduce using rule 13 (vars2 -> tipo puntoCreateVarType .)
    SEMICOLON       reduce using rule 13 (vars2 -> tipo puntoCreateVarType .)


state 59

    (11) vars1 -> COMMA ID puntoCreateVar vars1 .

    AS              reduce using rule 11 (vars1 -> COMMA ID puntoCreateVar vars1 .)


state 60

    (59) main -> VOID MAIN LPAREN . RPAREN bloque_modular

    RPAREN          shift and go to state 64


state 61

    (45) funciones -> FUNC puntoResetMemoria funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN . puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (55) puntoCreateParamTable -> .

    INT             reduce using rule 55 (puntoCreateParamTable -> .)
    FLOAT           reduce using rule 55 (puntoCreateParamTable -> .)
    BOOL            reduce using rule 55 (puntoCreateParamTable -> .)
    CHAR            reduce using rule 55 (puntoCreateParamTable -> .)
    RPAREN          reduce using rule 55 (puntoCreateParamTable -> .)

    puntoCreateParamTable          shift and go to state 65

state 62

    (10) vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension . SEMICOLON

    SEMICOLON       shift and go to state 66


state 63

    (15) vars3 -> LBRACKET CTE_INT . puntoChangeDimension RBRACKET
    (17) puntoChangeDimension -> .

    RBRACKET        reduce using rule 17 (puntoChangeDimension -> .)

    puntoChangeDimension           shift and go to state 67

state 64

    (59) main -> VOID MAIN LPAREN RPAREN . bloque_modular
    (60) bloque_modular -> . LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE

    LBLOQUE         shift and go to state 69

    bloque_modular                 shift and go to state 68

state 65

    (45) funciones -> FUNC puntoResetMemoria funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable . funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (48) funciones2 -> . tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (49) funciones2 -> . empty
    (23) tipo -> . INT puntoCurrentType
    (24) tipo -> . FLOAT puntoCurrentType
    (25) tipo -> . BOOL puntoCurrentType
    (26) tipo -> . CHAR puntoCurrentType
    (154) empty -> .

    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    BOOL            shift and go to state 28
    CHAR            shift and go to state 29
    RPAREN          reduce using rule 154 (empty -> .)

    funciones2                     shift and go to state 70
    tipo                           shift and go to state 71
    empty                          shift and go to state 72

state 66

    (10) vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .

    VAR             reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    FUNC            reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    VOID            reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    ID              reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    IF              reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    PRINT           reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    RETURN          reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    WHILE           reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    DO              reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    CALL            reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    RBLOQUE         reduce using rule 10 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)


state 67

    (15) vars3 -> LBRACKET CTE_INT puntoChangeDimension . RBRACKET

    RBRACKET        shift and go to state 73


state 68

    (59) main -> VOID MAIN LPAREN RPAREN bloque_modular .

    $end            reduce using rule 59 (main -> VOID MAIN LPAREN RPAREN bloque_modular .)


state 69

    (60) bloque_modular -> LBLOQUE . bloque_modular1 bloque_modular2 RBLOQUE
    (61) bloque_modular1 -> . vars bloque_modular1
    (62) bloque_modular1 -> . empty
    (10) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (154) empty -> .

    VAR             shift and go to state 11
    ID              reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    PRINT           reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    DO              reduce using rule 154 (empty -> .)
    CALL            reduce using rule 154 (empty -> .)
    RBLOQUE         reduce using rule 154 (empty -> .)

    bloque_modular1                shift and go to state 74
    vars                           shift and go to state 75
    empty                          shift and go to state 76

state 70

    (45) funciones -> FUNC puntoResetMemoria funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 . RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad

    RPAREN          shift and go to state 77


state 71

    (48) funciones2 -> tipo . ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3

    ID              shift and go to state 78


state 72

    (49) funciones2 -> empty .

    RPAREN          reduce using rule 49 (funciones2 -> empty .)


state 73

    (15) vars3 -> LBRACKET CTE_INT puntoChangeDimension RBRACKET .

    SEMICOLON       reduce using rule 15 (vars3 -> LBRACKET CTE_INT puntoChangeDimension RBRACKET .)


state 74

    (60) bloque_modular -> LBLOQUE bloque_modular1 . bloque_modular2 RBLOQUE
    (63) bloque_modular2 -> . estatuto bloque_modular2
    (64) bloque_modular2 -> . empty
    (68) estatuto -> . asignacion
    (69) estatuto -> . condicion
    (70) estatuto -> . escritura
    (71) estatuto -> . return
    (72) estatuto -> . while
    (73) estatuto -> . do_while
    (74) estatuto -> . llamada SEMICOLON
    (154) empty -> .
    (75) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (84) condicion -> . IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (90) escritura -> . PRINT LPAREN escritura1 RPAREN SEMICOLON
    (103) return -> . RETURN expresion puntoReturnQuad SEMICOLON
    (105) while -> . WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (109) do_while -> . DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    RBLOQUE         reduce using rule 154 (empty -> .)
    ID              shift and go to state 89
    IF              shift and go to state 90
    PRINT           shift and go to state 91
    RETURN          shift and go to state 92
    WHILE           shift and go to state 93
    DO              shift and go to state 94
    CALL            shift and go to state 95

    bloque_modular2                shift and go to state 79
    estatuto                       shift and go to state 80
    empty                          shift and go to state 81
    asignacion                     shift and go to state 82
    condicion                      shift and go to state 83
    escritura                      shift and go to state 84
    return                         shift and go to state 85
    while                          shift and go to state 86
    do_while                       shift and go to state 87
    llamada                        shift and go to state 88

state 75

    (61) bloque_modular1 -> vars . bloque_modular1
    (61) bloque_modular1 -> . vars bloque_modular1
    (62) bloque_modular1 -> . empty
    (10) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (154) empty -> .

    VAR             shift and go to state 11
    ID              reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    PRINT           reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    DO              reduce using rule 154 (empty -> .)
    CALL            reduce using rule 154 (empty -> .)
    RBLOQUE         reduce using rule 154 (empty -> .)

    vars                           shift and go to state 75
    bloque_modular1                shift and go to state 96
    empty                          shift and go to state 76

state 76

    (62) bloque_modular1 -> empty .

    ID              reduce using rule 62 (bloque_modular1 -> empty .)
    IF              reduce using rule 62 (bloque_modular1 -> empty .)
    PRINT           reduce using rule 62 (bloque_modular1 -> empty .)
    RETURN          reduce using rule 62 (bloque_modular1 -> empty .)
    WHILE           reduce using rule 62 (bloque_modular1 -> empty .)
    DO              reduce using rule 62 (bloque_modular1 -> empty .)
    CALL            reduce using rule 62 (bloque_modular1 -> empty .)
    RBLOQUE         reduce using rule 62 (bloque_modular1 -> empty .)


state 77

    (45) funciones -> FUNC puntoResetMemoria funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN . puntoCreateParamCount bloque_modular puntoFinalFuncQuad
    (57) puntoCreateParamCount -> .

    LBLOQUE         reduce using rule 57 (puntoCreateParamCount -> .)

    puntoCreateParamCount          shift and go to state 97

state 78

    (48) funciones2 -> tipo ID . puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (20) puntoCreateVar -> .

    COMMA           reduce using rule 20 (puntoCreateVar -> .)
    RPAREN          reduce using rule 20 (puntoCreateVar -> .)

    puntoCreateVar                 shift and go to state 98

state 79

    (60) bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 . RBLOQUE

    RBLOQUE         shift and go to state 99


state 80

    (63) bloque_modular2 -> estatuto . bloque_modular2
    (63) bloque_modular2 -> . estatuto bloque_modular2
    (64) bloque_modular2 -> . empty
    (68) estatuto -> . asignacion
    (69) estatuto -> . condicion
    (70) estatuto -> . escritura
    (71) estatuto -> . return
    (72) estatuto -> . while
    (73) estatuto -> . do_while
    (74) estatuto -> . llamada SEMICOLON
    (154) empty -> .
    (75) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (84) condicion -> . IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (90) escritura -> . PRINT LPAREN escritura1 RPAREN SEMICOLON
    (103) return -> . RETURN expresion puntoReturnQuad SEMICOLON
    (105) while -> . WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (109) do_while -> . DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    RBLOQUE         reduce using rule 154 (empty -> .)
    ID              shift and go to state 89
    IF              shift and go to state 90
    PRINT           shift and go to state 91
    RETURN          shift and go to state 92
    WHILE           shift and go to state 93
    DO              shift and go to state 94
    CALL            shift and go to state 95

    estatuto                       shift and go to state 80
    bloque_modular2                shift and go to state 100
    empty                          shift and go to state 81
    asignacion                     shift and go to state 82
    condicion                      shift and go to state 83
    escritura                      shift and go to state 84
    return                         shift and go to state 85
    while                          shift and go to state 86
    do_while                       shift and go to state 87
    llamada                        shift and go to state 88

state 81

    (64) bloque_modular2 -> empty .

    RBLOQUE         reduce using rule 64 (bloque_modular2 -> empty .)


state 82

    (68) estatuto -> asignacion .

    ID              reduce using rule 68 (estatuto -> asignacion .)
    IF              reduce using rule 68 (estatuto -> asignacion .)
    PRINT           reduce using rule 68 (estatuto -> asignacion .)
    RETURN          reduce using rule 68 (estatuto -> asignacion .)
    WHILE           reduce using rule 68 (estatuto -> asignacion .)
    DO              reduce using rule 68 (estatuto -> asignacion .)
    CALL            reduce using rule 68 (estatuto -> asignacion .)
    RBLOQUE         reduce using rule 68 (estatuto -> asignacion .)


state 83

    (69) estatuto -> condicion .

    ID              reduce using rule 69 (estatuto -> condicion .)
    IF              reduce using rule 69 (estatuto -> condicion .)
    PRINT           reduce using rule 69 (estatuto -> condicion .)
    RETURN          reduce using rule 69 (estatuto -> condicion .)
    WHILE           reduce using rule 69 (estatuto -> condicion .)
    DO              reduce using rule 69 (estatuto -> condicion .)
    CALL            reduce using rule 69 (estatuto -> condicion .)
    RBLOQUE         reduce using rule 69 (estatuto -> condicion .)


state 84

    (70) estatuto -> escritura .

    ID              reduce using rule 70 (estatuto -> escritura .)
    IF              reduce using rule 70 (estatuto -> escritura .)
    PRINT           reduce using rule 70 (estatuto -> escritura .)
    RETURN          reduce using rule 70 (estatuto -> escritura .)
    WHILE           reduce using rule 70 (estatuto -> escritura .)
    DO              reduce using rule 70 (estatuto -> escritura .)
    CALL            reduce using rule 70 (estatuto -> escritura .)
    RBLOQUE         reduce using rule 70 (estatuto -> escritura .)


state 85

    (71) estatuto -> return .

    ID              reduce using rule 71 (estatuto -> return .)
    IF              reduce using rule 71 (estatuto -> return .)
    PRINT           reduce using rule 71 (estatuto -> return .)
    RETURN          reduce using rule 71 (estatuto -> return .)
    WHILE           reduce using rule 71 (estatuto -> return .)
    DO              reduce using rule 71 (estatuto -> return .)
    CALL            reduce using rule 71 (estatuto -> return .)
    RBLOQUE         reduce using rule 71 (estatuto -> return .)


state 86

    (72) estatuto -> while .

    ID              reduce using rule 72 (estatuto -> while .)
    IF              reduce using rule 72 (estatuto -> while .)
    PRINT           reduce using rule 72 (estatuto -> while .)
    RETURN          reduce using rule 72 (estatuto -> while .)
    WHILE           reduce using rule 72 (estatuto -> while .)
    DO              reduce using rule 72 (estatuto -> while .)
    CALL            reduce using rule 72 (estatuto -> while .)
    RBLOQUE         reduce using rule 72 (estatuto -> while .)


state 87

    (73) estatuto -> do_while .

    ID              reduce using rule 73 (estatuto -> do_while .)
    IF              reduce using rule 73 (estatuto -> do_while .)
    PRINT           reduce using rule 73 (estatuto -> do_while .)
    RETURN          reduce using rule 73 (estatuto -> do_while .)
    WHILE           reduce using rule 73 (estatuto -> do_while .)
    DO              reduce using rule 73 (estatuto -> do_while .)
    CALL            reduce using rule 73 (estatuto -> do_while .)
    RBLOQUE         reduce using rule 73 (estatuto -> do_while .)


state 88

    (74) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 101


state 89

    (75) asignacion -> ID . puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (80) puntoSaveIDAsignacion -> .

    LBRACKET        reduce using rule 80 (puntoSaveIDAsignacion -> .)
    EQUALS          reduce using rule 80 (puntoSaveIDAsignacion -> .)

    puntoSaveIDAsignacion          shift and go to state 102

state 90

    (84) condicion -> IF . LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad

    LPAREN          shift and go to state 103


state 91

    (90) escritura -> PRINT . LPAREN escritura1 RPAREN SEMICOLON

    LPAREN          shift and go to state 104


state 92

    (103) return -> RETURN . expresion puntoReturnQuad SEMICOLON
    (112) expresion -> . compare expresion2
    (117) compare -> . exp compare1
    (126) exp -> . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    expresion                      shift and go to state 105
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 93

    (105) while -> WHILE . puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (106) puntoPushSaltoWhile -> .

    LPAREN          reduce using rule 106 (puntoPushSaltoWhile -> .)

    puntoPushSaltoWhile            shift and go to state 120

state 94

    (109) do_while -> DO . puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (110) puntoPushSaltoDoWhile -> .

    LBLOQUE         reduce using rule 110 (puntoPushSaltoDoWhile -> .)

    puntoPushSaltoDoWhile          shift and go to state 121

state 95

    (95) llamada -> CALL . PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    PUNTO           shift and go to state 122


state 96

    (61) bloque_modular1 -> vars bloque_modular1 .

    ID              reduce using rule 61 (bloque_modular1 -> vars bloque_modular1 .)
    IF              reduce using rule 61 (bloque_modular1 -> vars bloque_modular1 .)
    PRINT           reduce using rule 61 (bloque_modular1 -> vars bloque_modular1 .)
    RETURN          reduce using rule 61 (bloque_modular1 -> vars bloque_modular1 .)
    WHILE           reduce using rule 61 (bloque_modular1 -> vars bloque_modular1 .)
    DO              reduce using rule 61 (bloque_modular1 -> vars bloque_modular1 .)
    CALL            reduce using rule 61 (bloque_modular1 -> vars bloque_modular1 .)
    RBLOQUE         reduce using rule 61 (bloque_modular1 -> vars bloque_modular1 .)


state 97

    (45) funciones -> FUNC puntoResetMemoria funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount . bloque_modular puntoFinalFuncQuad
    (60) bloque_modular -> . LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE

    LBLOQUE         shift and go to state 69

    bloque_modular                 shift and go to state 123

state 98

    (48) funciones2 -> tipo ID puntoCreateVar . puntoCreateVarType puntoPushParam funciones3
    (21) puntoCreateVarType -> .

    COMMA           reduce using rule 21 (puntoCreateVarType -> .)
    RPAREN          reduce using rule 21 (puntoCreateVarType -> .)

    puntoCreateVarType             shift and go to state 124

state 99

    (60) bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .

    $end            reduce using rule 60 (bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .)
    FUNC            reduce using rule 60 (bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .)
    VOID            reduce using rule 60 (bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .)


state 100

    (63) bloque_modular2 -> estatuto bloque_modular2 .

    RBLOQUE         reduce using rule 63 (bloque_modular2 -> estatuto bloque_modular2 .)


state 101

    (74) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 74 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 74 (estatuto -> llamada SEMICOLON .)
    PRINT           reduce using rule 74 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 74 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 74 (estatuto -> llamada SEMICOLON .)
    DO              reduce using rule 74 (estatuto -> llamada SEMICOLON .)
    CALL            reduce using rule 74 (estatuto -> llamada SEMICOLON .)
    RBLOQUE         reduce using rule 74 (estatuto -> llamada SEMICOLON .)


state 102

    (75) asignacion -> ID puntoSaveIDAsignacion . asignacion1 EQUALS asignacion2 SEMICOLON
    (76) asignacion1 -> . LBRACKET expresion puntoCreateArrQuad RBRACKET
    (77) asignacion1 -> . empty
    (154) empty -> .

    LBRACKET        shift and go to state 126
    EQUALS          reduce using rule 154 (empty -> .)

    asignacion1                    shift and go to state 125
    empty                          shift and go to state 127

state 103

    (84) condicion -> IF LPAREN . expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (112) expresion -> . compare expresion2
    (117) compare -> . exp compare1
    (126) exp -> . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    expresion                      shift and go to state 128
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 104

    (90) escritura -> PRINT LPAREN . escritura1 RPAREN SEMICOLON
    (91) escritura1 -> . expresion puntoCreatePrintQuad
    (92) escritura1 -> . CTE_STRING puntoCreatePrintConstantQuad
    (112) expresion -> . compare expresion2
    (117) compare -> . exp compare1
    (126) exp -> . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    CTE_STRING      shift and go to state 131
    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    escritura1                     shift and go to state 129
    expresion                      shift and go to state 130
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 105

    (103) return -> RETURN expresion . puntoReturnQuad SEMICOLON
    (104) puntoReturnQuad -> .

    SEMICOLON       reduce using rule 104 (puntoReturnQuad -> .)

    puntoReturnQuad                shift and go to state 132

state 106

    (112) expresion -> compare . expresion2
    (113) expresion2 -> . AND puntoPushOperador compare puntoAndOr
    (114) expresion2 -> . OR puntoPushOperador compare puntoAndOr
    (115) expresion2 -> . empty
    (154) empty -> .

    AND             shift and go to state 134
    OR              shift and go to state 135
    SEMICOLON       reduce using rule 154 (empty -> .)
    RPAREN          reduce using rule 154 (empty -> .)
    RBRACKET        reduce using rule 154 (empty -> .)
    COMMA           reduce using rule 154 (empty -> .)

    expresion2                     shift and go to state 133
    empty                          shift and go to state 136

state 107

    (117) compare -> exp . compare1
    (118) compare1 -> . GREATERTHAN puntoPushOperador exp puntoOperacionRelacional
    (119) compare1 -> . LESSTHAN puntoPushOperador exp puntoOperacionRelacional
    (120) compare1 -> . GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
    (121) compare1 -> . LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
    (122) compare1 -> . EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional
    (123) compare1 -> . NOTEQUAL puntoPushOperador exp puntoOperacionRelacional
    (124) compare1 -> . empty
    (154) empty -> .

    GREATERTHAN     shift and go to state 138
    LESSTHAN        shift and go to state 139
    GREATERTHANEQUAL shift and go to state 140
    LESSTHANEQUAL   shift and go to state 141
    EQUALEQUAL      shift and go to state 142
    NOTEQUAL        shift and go to state 143
    AND             reduce using rule 154 (empty -> .)
    OR              reduce using rule 154 (empty -> .)
    SEMICOLON       reduce using rule 154 (empty -> .)
    RPAREN          reduce using rule 154 (empty -> .)
    RBRACKET        reduce using rule 154 (empty -> .)
    COMMA           reduce using rule 154 (empty -> .)

    compare1                       shift and go to state 137
    empty                          shift and go to state 144

state 108

    (126) exp -> termino . puntoSumaResta exp1
    (130) puntoSumaResta -> .

    PLUS            reduce using rule 130 (puntoSumaResta -> .)
    MINUS           reduce using rule 130 (puntoSumaResta -> .)
    GREATERTHAN     reduce using rule 130 (puntoSumaResta -> .)
    LESSTHAN        reduce using rule 130 (puntoSumaResta -> .)
    GREATERTHANEQUAL reduce using rule 130 (puntoSumaResta -> .)
    LESSTHANEQUAL   reduce using rule 130 (puntoSumaResta -> .)
    EQUALEQUAL      reduce using rule 130 (puntoSumaResta -> .)
    NOTEQUAL        reduce using rule 130 (puntoSumaResta -> .)
    AND             reduce using rule 130 (puntoSumaResta -> .)
    OR              reduce using rule 130 (puntoSumaResta -> .)
    SEMICOLON       reduce using rule 130 (puntoSumaResta -> .)
    RPAREN          reduce using rule 130 (puntoSumaResta -> .)
    RBRACKET        reduce using rule 130 (puntoSumaResta -> .)
    COMMA           reduce using rule 130 (puntoSumaResta -> .)

    puntoSumaResta                 shift and go to state 145

state 109

    (131) termino -> factor . puntoMultDivide termino1
    (135) puntoMultDivide -> .

    TIMES           reduce using rule 135 (puntoMultDivide -> .)
    DIVIDE          reduce using rule 135 (puntoMultDivide -> .)
    PLUS            reduce using rule 135 (puntoMultDivide -> .)
    MINUS           reduce using rule 135 (puntoMultDivide -> .)
    GREATERTHAN     reduce using rule 135 (puntoMultDivide -> .)
    LESSTHAN        reduce using rule 135 (puntoMultDivide -> .)
    GREATERTHANEQUAL reduce using rule 135 (puntoMultDivide -> .)
    LESSTHANEQUAL   reduce using rule 135 (puntoMultDivide -> .)
    EQUALEQUAL      reduce using rule 135 (puntoMultDivide -> .)
    NOTEQUAL        reduce using rule 135 (puntoMultDivide -> .)
    AND             reduce using rule 135 (puntoMultDivide -> .)
    OR              reduce using rule 135 (puntoMultDivide -> .)
    SEMICOLON       reduce using rule 135 (puntoMultDivide -> .)
    RPAREN          reduce using rule 135 (puntoMultDivide -> .)
    RBRACKET        reduce using rule 135 (puntoMultDivide -> .)
    COMMA           reduce using rule 135 (puntoMultDivide -> .)

    puntoMultDivide                shift and go to state 146

state 110

    (137) factor -> LPAREN . puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (141) puntoPushFondoFalso -> .

    LPAREN          reduce using rule 141 (puntoPushFondoFalso -> .)
    MINUS           reduce using rule 141 (puntoPushFondoFalso -> .)
    NOT             reduce using rule 141 (puntoPushFondoFalso -> .)
    CTE_INT         reduce using rule 141 (puntoPushFondoFalso -> .)
    CTE_FLOAT       reduce using rule 141 (puntoPushFondoFalso -> .)
    CTE_BOOL        reduce using rule 141 (puntoPushFondoFalso -> .)
    CTE_CHAR        reduce using rule 141 (puntoPushFondoFalso -> .)
    ID              reduce using rule 141 (puntoPushFondoFalso -> .)
    CALL            reduce using rule 141 (puntoPushFondoFalso -> .)

    puntoPushFondoFalso            shift and go to state 147

state 111

    (138) factor -> tipo_cte .

    TIMES           reduce using rule 138 (factor -> tipo_cte .)
    DIVIDE          reduce using rule 138 (factor -> tipo_cte .)
    PLUS            reduce using rule 138 (factor -> tipo_cte .)
    MINUS           reduce using rule 138 (factor -> tipo_cte .)
    GREATERTHAN     reduce using rule 138 (factor -> tipo_cte .)
    LESSTHAN        reduce using rule 138 (factor -> tipo_cte .)
    GREATERTHANEQUAL reduce using rule 138 (factor -> tipo_cte .)
    LESSTHANEQUAL   reduce using rule 138 (factor -> tipo_cte .)
    EQUALEQUAL      reduce using rule 138 (factor -> tipo_cte .)
    NOTEQUAL        reduce using rule 138 (factor -> tipo_cte .)
    AND             reduce using rule 138 (factor -> tipo_cte .)
    OR              reduce using rule 138 (factor -> tipo_cte .)
    SEMICOLON       reduce using rule 138 (factor -> tipo_cte .)
    RPAREN          reduce using rule 138 (factor -> tipo_cte .)
    RBRACKET        reduce using rule 138 (factor -> tipo_cte .)
    COMMA           reduce using rule 138 (factor -> tipo_cte .)


state 112

    (139) factor -> MINUS . tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    tipo_cte                       shift and go to state 148
    llamada                        shift and go to state 119

state 113

    (140) factor -> NOT . tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    tipo_cte                       shift and go to state 149
    llamada                        shift and go to state 119

state 114

    (28) tipo_cte -> CTE_INT . puntoPushInt
    (37) puntoPushInt -> .

    TIMES           reduce using rule 37 (puntoPushInt -> .)
    DIVIDE          reduce using rule 37 (puntoPushInt -> .)
    PLUS            reduce using rule 37 (puntoPushInt -> .)
    MINUS           reduce using rule 37 (puntoPushInt -> .)
    GREATERTHAN     reduce using rule 37 (puntoPushInt -> .)
    LESSTHAN        reduce using rule 37 (puntoPushInt -> .)
    GREATERTHANEQUAL reduce using rule 37 (puntoPushInt -> .)
    LESSTHANEQUAL   reduce using rule 37 (puntoPushInt -> .)
    EQUALEQUAL      reduce using rule 37 (puntoPushInt -> .)
    NOTEQUAL        reduce using rule 37 (puntoPushInt -> .)
    AND             reduce using rule 37 (puntoPushInt -> .)
    OR              reduce using rule 37 (puntoPushInt -> .)
    SEMICOLON       reduce using rule 37 (puntoPushInt -> .)
    RPAREN          reduce using rule 37 (puntoPushInt -> .)
    RBRACKET        reduce using rule 37 (puntoPushInt -> .)
    COMMA           reduce using rule 37 (puntoPushInt -> .)

    puntoPushInt                   shift and go to state 150

state 115

    (29) tipo_cte -> CTE_FLOAT . puntoPushFloat
    (38) puntoPushFloat -> .

    TIMES           reduce using rule 38 (puntoPushFloat -> .)
    DIVIDE          reduce using rule 38 (puntoPushFloat -> .)
    PLUS            reduce using rule 38 (puntoPushFloat -> .)
    MINUS           reduce using rule 38 (puntoPushFloat -> .)
    GREATERTHAN     reduce using rule 38 (puntoPushFloat -> .)
    LESSTHAN        reduce using rule 38 (puntoPushFloat -> .)
    GREATERTHANEQUAL reduce using rule 38 (puntoPushFloat -> .)
    LESSTHANEQUAL   reduce using rule 38 (puntoPushFloat -> .)
    EQUALEQUAL      reduce using rule 38 (puntoPushFloat -> .)
    NOTEQUAL        reduce using rule 38 (puntoPushFloat -> .)
    AND             reduce using rule 38 (puntoPushFloat -> .)
    OR              reduce using rule 38 (puntoPushFloat -> .)
    SEMICOLON       reduce using rule 38 (puntoPushFloat -> .)
    RPAREN          reduce using rule 38 (puntoPushFloat -> .)
    RBRACKET        reduce using rule 38 (puntoPushFloat -> .)
    COMMA           reduce using rule 38 (puntoPushFloat -> .)

    puntoPushFloat                 shift and go to state 151

state 116

    (30) tipo_cte -> CTE_BOOL . puntoPushBool
    (39) puntoPushBool -> .

    TIMES           reduce using rule 39 (puntoPushBool -> .)
    DIVIDE          reduce using rule 39 (puntoPushBool -> .)
    PLUS            reduce using rule 39 (puntoPushBool -> .)
    MINUS           reduce using rule 39 (puntoPushBool -> .)
    GREATERTHAN     reduce using rule 39 (puntoPushBool -> .)
    LESSTHAN        reduce using rule 39 (puntoPushBool -> .)
    GREATERTHANEQUAL reduce using rule 39 (puntoPushBool -> .)
    LESSTHANEQUAL   reduce using rule 39 (puntoPushBool -> .)
    EQUALEQUAL      reduce using rule 39 (puntoPushBool -> .)
    NOTEQUAL        reduce using rule 39 (puntoPushBool -> .)
    AND             reduce using rule 39 (puntoPushBool -> .)
    OR              reduce using rule 39 (puntoPushBool -> .)
    SEMICOLON       reduce using rule 39 (puntoPushBool -> .)
    RPAREN          reduce using rule 39 (puntoPushBool -> .)
    RBRACKET        reduce using rule 39 (puntoPushBool -> .)
    COMMA           reduce using rule 39 (puntoPushBool -> .)

    puntoPushBool                  shift and go to state 152

state 117

    (31) tipo_cte -> CTE_CHAR . puntoPushChar
    (40) puntoPushChar -> .

    TIMES           reduce using rule 40 (puntoPushChar -> .)
    DIVIDE          reduce using rule 40 (puntoPushChar -> .)
    PLUS            reduce using rule 40 (puntoPushChar -> .)
    MINUS           reduce using rule 40 (puntoPushChar -> .)
    GREATERTHAN     reduce using rule 40 (puntoPushChar -> .)
    LESSTHAN        reduce using rule 40 (puntoPushChar -> .)
    GREATERTHANEQUAL reduce using rule 40 (puntoPushChar -> .)
    LESSTHANEQUAL   reduce using rule 40 (puntoPushChar -> .)
    EQUALEQUAL      reduce using rule 40 (puntoPushChar -> .)
    NOTEQUAL        reduce using rule 40 (puntoPushChar -> .)
    AND             reduce using rule 40 (puntoPushChar -> .)
    OR              reduce using rule 40 (puntoPushChar -> .)
    SEMICOLON       reduce using rule 40 (puntoPushChar -> .)
    RPAREN          reduce using rule 40 (puntoPushChar -> .)
    RBRACKET        reduce using rule 40 (puntoPushChar -> .)
    COMMA           reduce using rule 40 (puntoPushChar -> .)

    puntoPushChar                  shift and go to state 153

state 118

    (32) tipo_cte -> ID . puntoPushID tipo_cte1
    (41) puntoPushID -> .

    LBRACKET        reduce using rule 41 (puntoPushID -> .)
    PUNTO           reduce using rule 41 (puntoPushID -> .)
    TIMES           reduce using rule 41 (puntoPushID -> .)
    DIVIDE          reduce using rule 41 (puntoPushID -> .)
    PLUS            reduce using rule 41 (puntoPushID -> .)
    MINUS           reduce using rule 41 (puntoPushID -> .)
    GREATERTHAN     reduce using rule 41 (puntoPushID -> .)
    LESSTHAN        reduce using rule 41 (puntoPushID -> .)
    GREATERTHANEQUAL reduce using rule 41 (puntoPushID -> .)
    LESSTHANEQUAL   reduce using rule 41 (puntoPushID -> .)
    EQUALEQUAL      reduce using rule 41 (puntoPushID -> .)
    NOTEQUAL        reduce using rule 41 (puntoPushID -> .)
    AND             reduce using rule 41 (puntoPushID -> .)
    OR              reduce using rule 41 (puntoPushID -> .)
    SEMICOLON       reduce using rule 41 (puntoPushID -> .)
    RPAREN          reduce using rule 41 (puntoPushID -> .)
    RBRACKET        reduce using rule 41 (puntoPushID -> .)
    COMMA           reduce using rule 41 (puntoPushID -> .)

    puntoPushID                    shift and go to state 154

state 119

    (33) tipo_cte -> llamada .

    TIMES           reduce using rule 33 (tipo_cte -> llamada .)
    DIVIDE          reduce using rule 33 (tipo_cte -> llamada .)
    PLUS            reduce using rule 33 (tipo_cte -> llamada .)
    MINUS           reduce using rule 33 (tipo_cte -> llamada .)
    GREATERTHAN     reduce using rule 33 (tipo_cte -> llamada .)
    LESSTHAN        reduce using rule 33 (tipo_cte -> llamada .)
    GREATERTHANEQUAL reduce using rule 33 (tipo_cte -> llamada .)
    LESSTHANEQUAL   reduce using rule 33 (tipo_cte -> llamada .)
    EQUALEQUAL      reduce using rule 33 (tipo_cte -> llamada .)
    NOTEQUAL        reduce using rule 33 (tipo_cte -> llamada .)
    AND             reduce using rule 33 (tipo_cte -> llamada .)
    OR              reduce using rule 33 (tipo_cte -> llamada .)
    SEMICOLON       reduce using rule 33 (tipo_cte -> llamada .)
    RPAREN          reduce using rule 33 (tipo_cte -> llamada .)
    RBRACKET        reduce using rule 33 (tipo_cte -> llamada .)
    COMMA           reduce using rule 33 (tipo_cte -> llamada .)


state 120

    (105) while -> WHILE puntoPushSaltoWhile . LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad

    LPAREN          shift and go to state 155


state 121

    (109) do_while -> DO puntoPushSaltoDoWhile . bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (65) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 157

    bloque                         shift and go to state 156

state 122

    (95) llamada -> CALL PUNTO . puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad
    (141) puntoPushFondoFalso -> .

    ID              reduce using rule 141 (puntoPushFondoFalso -> .)

    puntoPushFondoFalso            shift and go to state 158

state 123

    (45) funciones -> FUNC puntoResetMemoria funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular . puntoFinalFuncQuad
    (58) puntoFinalFuncQuad -> .

    FUNC            reduce using rule 58 (puntoFinalFuncQuad -> .)
    VOID            reduce using rule 58 (puntoFinalFuncQuad -> .)

    puntoFinalFuncQuad             shift and go to state 159

state 124

    (48) funciones2 -> tipo ID puntoCreateVar puntoCreateVarType . puntoPushParam funciones3
    (56) puntoPushParam -> .

    COMMA           reduce using rule 56 (puntoPushParam -> .)
    RPAREN          reduce using rule 56 (puntoPushParam -> .)

    puntoPushParam                 shift and go to state 160

state 125

    (75) asignacion -> ID puntoSaveIDAsignacion asignacion1 . EQUALS asignacion2 SEMICOLON

    EQUALS          shift and go to state 161


state 126

    (76) asignacion1 -> LBRACKET . expresion puntoCreateArrQuad RBRACKET
    (112) expresion -> . compare expresion2
    (117) compare -> . exp compare1
    (126) exp -> . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    expresion                      shift and go to state 162
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 127

    (77) asignacion1 -> empty .

    EQUALS          reduce using rule 77 (asignacion1 -> empty .)


state 128

    (84) condicion -> IF LPAREN expresion . RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad

    RPAREN          shift and go to state 163


state 129

    (90) escritura -> PRINT LPAREN escritura1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 164


state 130

    (91) escritura1 -> expresion . puntoCreatePrintQuad
    (93) puntoCreatePrintQuad -> .

    RPAREN          reduce using rule 93 (puntoCreatePrintQuad -> .)

    puntoCreatePrintQuad           shift and go to state 165

state 131

    (92) escritura1 -> CTE_STRING . puntoCreatePrintConstantQuad
    (94) puntoCreatePrintConstantQuad -> .

    RPAREN          reduce using rule 94 (puntoCreatePrintConstantQuad -> .)

    puntoCreatePrintConstantQuad   shift and go to state 166

state 132

    (103) return -> RETURN expresion puntoReturnQuad . SEMICOLON

    SEMICOLON       shift and go to state 167


state 133

    (112) expresion -> compare expresion2 .

    SEMICOLON       reduce using rule 112 (expresion -> compare expresion2 .)
    RPAREN          reduce using rule 112 (expresion -> compare expresion2 .)
    RBRACKET        reduce using rule 112 (expresion -> compare expresion2 .)
    COMMA           reduce using rule 112 (expresion -> compare expresion2 .)


state 134

    (113) expresion2 -> AND . puntoPushOperador compare puntoAndOr
    (136) puntoPushOperador -> .

    LPAREN          reduce using rule 136 (puntoPushOperador -> .)
    MINUS           reduce using rule 136 (puntoPushOperador -> .)
    NOT             reduce using rule 136 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 136 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 136 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 136 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 136 (puntoPushOperador -> .)
    ID              reduce using rule 136 (puntoPushOperador -> .)
    CALL            reduce using rule 136 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 168

state 135

    (114) expresion2 -> OR . puntoPushOperador compare puntoAndOr
    (136) puntoPushOperador -> .

    LPAREN          reduce using rule 136 (puntoPushOperador -> .)
    MINUS           reduce using rule 136 (puntoPushOperador -> .)
    NOT             reduce using rule 136 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 136 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 136 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 136 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 136 (puntoPushOperador -> .)
    ID              reduce using rule 136 (puntoPushOperador -> .)
    CALL            reduce using rule 136 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 169

state 136

    (115) expresion2 -> empty .

    SEMICOLON       reduce using rule 115 (expresion2 -> empty .)
    RPAREN          reduce using rule 115 (expresion2 -> empty .)
    RBRACKET        reduce using rule 115 (expresion2 -> empty .)
    COMMA           reduce using rule 115 (expresion2 -> empty .)


state 137

    (117) compare -> exp compare1 .

    AND             reduce using rule 117 (compare -> exp compare1 .)
    OR              reduce using rule 117 (compare -> exp compare1 .)
    SEMICOLON       reduce using rule 117 (compare -> exp compare1 .)
    RPAREN          reduce using rule 117 (compare -> exp compare1 .)
    RBRACKET        reduce using rule 117 (compare -> exp compare1 .)
    COMMA           reduce using rule 117 (compare -> exp compare1 .)


state 138

    (118) compare1 -> GREATERTHAN . puntoPushOperador exp puntoOperacionRelacional
    (136) puntoPushOperador -> .

    LPAREN          reduce using rule 136 (puntoPushOperador -> .)
    MINUS           reduce using rule 136 (puntoPushOperador -> .)
    NOT             reduce using rule 136 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 136 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 136 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 136 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 136 (puntoPushOperador -> .)
    ID              reduce using rule 136 (puntoPushOperador -> .)
    CALL            reduce using rule 136 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 170

state 139

    (119) compare1 -> LESSTHAN . puntoPushOperador exp puntoOperacionRelacional
    (136) puntoPushOperador -> .

    LPAREN          reduce using rule 136 (puntoPushOperador -> .)
    MINUS           reduce using rule 136 (puntoPushOperador -> .)
    NOT             reduce using rule 136 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 136 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 136 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 136 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 136 (puntoPushOperador -> .)
    ID              reduce using rule 136 (puntoPushOperador -> .)
    CALL            reduce using rule 136 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 171

state 140

    (120) compare1 -> GREATERTHANEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (136) puntoPushOperador -> .

    LPAREN          reduce using rule 136 (puntoPushOperador -> .)
    MINUS           reduce using rule 136 (puntoPushOperador -> .)
    NOT             reduce using rule 136 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 136 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 136 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 136 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 136 (puntoPushOperador -> .)
    ID              reduce using rule 136 (puntoPushOperador -> .)
    CALL            reduce using rule 136 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 172

state 141

    (121) compare1 -> LESSTHANEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (136) puntoPushOperador -> .

    LPAREN          reduce using rule 136 (puntoPushOperador -> .)
    MINUS           reduce using rule 136 (puntoPushOperador -> .)
    NOT             reduce using rule 136 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 136 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 136 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 136 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 136 (puntoPushOperador -> .)
    ID              reduce using rule 136 (puntoPushOperador -> .)
    CALL            reduce using rule 136 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 173

state 142

    (122) compare1 -> EQUALEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (136) puntoPushOperador -> .

    LPAREN          reduce using rule 136 (puntoPushOperador -> .)
    MINUS           reduce using rule 136 (puntoPushOperador -> .)
    NOT             reduce using rule 136 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 136 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 136 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 136 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 136 (puntoPushOperador -> .)
    ID              reduce using rule 136 (puntoPushOperador -> .)
    CALL            reduce using rule 136 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 174

state 143

    (123) compare1 -> NOTEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (136) puntoPushOperador -> .

    LPAREN          reduce using rule 136 (puntoPushOperador -> .)
    MINUS           reduce using rule 136 (puntoPushOperador -> .)
    NOT             reduce using rule 136 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 136 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 136 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 136 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 136 (puntoPushOperador -> .)
    ID              reduce using rule 136 (puntoPushOperador -> .)
    CALL            reduce using rule 136 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 175

state 144

    (124) compare1 -> empty .

    AND             reduce using rule 124 (compare1 -> empty .)
    OR              reduce using rule 124 (compare1 -> empty .)
    SEMICOLON       reduce using rule 124 (compare1 -> empty .)
    RPAREN          reduce using rule 124 (compare1 -> empty .)
    RBRACKET        reduce using rule 124 (compare1 -> empty .)
    COMMA           reduce using rule 124 (compare1 -> empty .)


state 145

    (126) exp -> termino puntoSumaResta . exp1
    (127) exp1 -> . PLUS puntoPushOperador termino puntoSumaResta exp1
    (128) exp1 -> . MINUS puntoPushOperador termino puntoSumaResta exp1
    (129) exp1 -> . empty
    (154) empty -> .

    PLUS            shift and go to state 177
    MINUS           shift and go to state 178
    GREATERTHAN     reduce using rule 154 (empty -> .)
    LESSTHAN        reduce using rule 154 (empty -> .)
    GREATERTHANEQUAL reduce using rule 154 (empty -> .)
    LESSTHANEQUAL   reduce using rule 154 (empty -> .)
    EQUALEQUAL      reduce using rule 154 (empty -> .)
    NOTEQUAL        reduce using rule 154 (empty -> .)
    AND             reduce using rule 154 (empty -> .)
    OR              reduce using rule 154 (empty -> .)
    SEMICOLON       reduce using rule 154 (empty -> .)
    RPAREN          reduce using rule 154 (empty -> .)
    RBRACKET        reduce using rule 154 (empty -> .)
    COMMA           reduce using rule 154 (empty -> .)

    exp1                           shift and go to state 176
    empty                          shift and go to state 179

state 146

    (131) termino -> factor puntoMultDivide . termino1
    (132) termino1 -> . TIMES puntoPushOperador factor puntoMultDivide termino1
    (133) termino1 -> . DIVIDE puntoPushOperador factor puntoMultDivide termino1
    (134) termino1 -> . empty
    (154) empty -> .

    TIMES           shift and go to state 181
    DIVIDE          shift and go to state 182
    PLUS            reduce using rule 154 (empty -> .)
    MINUS           reduce using rule 154 (empty -> .)
    GREATERTHAN     reduce using rule 154 (empty -> .)
    LESSTHAN        reduce using rule 154 (empty -> .)
    GREATERTHANEQUAL reduce using rule 154 (empty -> .)
    LESSTHANEQUAL   reduce using rule 154 (empty -> .)
    EQUALEQUAL      reduce using rule 154 (empty -> .)
    NOTEQUAL        reduce using rule 154 (empty -> .)
    AND             reduce using rule 154 (empty -> .)
    OR              reduce using rule 154 (empty -> .)
    SEMICOLON       reduce using rule 154 (empty -> .)
    RPAREN          reduce using rule 154 (empty -> .)
    RBRACKET        reduce using rule 154 (empty -> .)
    COMMA           reduce using rule 154 (empty -> .)

    termino1                       shift and go to state 180
    empty                          shift and go to state 183

state 147

    (137) factor -> LPAREN puntoPushFondoFalso . expresion RPAREN puntoPopFondoFalso
    (112) expresion -> . compare expresion2
    (117) compare -> . exp compare1
    (126) exp -> . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    expresion                      shift and go to state 184
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 148

    (139) factor -> MINUS tipo_cte .

    TIMES           reduce using rule 139 (factor -> MINUS tipo_cte .)
    DIVIDE          reduce using rule 139 (factor -> MINUS tipo_cte .)
    PLUS            reduce using rule 139 (factor -> MINUS tipo_cte .)
    MINUS           reduce using rule 139 (factor -> MINUS tipo_cte .)
    GREATERTHAN     reduce using rule 139 (factor -> MINUS tipo_cte .)
    LESSTHAN        reduce using rule 139 (factor -> MINUS tipo_cte .)
    GREATERTHANEQUAL reduce using rule 139 (factor -> MINUS tipo_cte .)
    LESSTHANEQUAL   reduce using rule 139 (factor -> MINUS tipo_cte .)
    EQUALEQUAL      reduce using rule 139 (factor -> MINUS tipo_cte .)
    NOTEQUAL        reduce using rule 139 (factor -> MINUS tipo_cte .)
    AND             reduce using rule 139 (factor -> MINUS tipo_cte .)
    OR              reduce using rule 139 (factor -> MINUS tipo_cte .)
    SEMICOLON       reduce using rule 139 (factor -> MINUS tipo_cte .)
    RPAREN          reduce using rule 139 (factor -> MINUS tipo_cte .)
    RBRACKET        reduce using rule 139 (factor -> MINUS tipo_cte .)
    COMMA           reduce using rule 139 (factor -> MINUS tipo_cte .)


state 149

    (140) factor -> NOT tipo_cte .

    TIMES           reduce using rule 140 (factor -> NOT tipo_cte .)
    DIVIDE          reduce using rule 140 (factor -> NOT tipo_cte .)
    PLUS            reduce using rule 140 (factor -> NOT tipo_cte .)
    MINUS           reduce using rule 140 (factor -> NOT tipo_cte .)
    GREATERTHAN     reduce using rule 140 (factor -> NOT tipo_cte .)
    LESSTHAN        reduce using rule 140 (factor -> NOT tipo_cte .)
    GREATERTHANEQUAL reduce using rule 140 (factor -> NOT tipo_cte .)
    LESSTHANEQUAL   reduce using rule 140 (factor -> NOT tipo_cte .)
    EQUALEQUAL      reduce using rule 140 (factor -> NOT tipo_cte .)
    NOTEQUAL        reduce using rule 140 (factor -> NOT tipo_cte .)
    AND             reduce using rule 140 (factor -> NOT tipo_cte .)
    OR              reduce using rule 140 (factor -> NOT tipo_cte .)
    SEMICOLON       reduce using rule 140 (factor -> NOT tipo_cte .)
    RPAREN          reduce using rule 140 (factor -> NOT tipo_cte .)
    RBRACKET        reduce using rule 140 (factor -> NOT tipo_cte .)
    COMMA           reduce using rule 140 (factor -> NOT tipo_cte .)


state 150

    (28) tipo_cte -> CTE_INT puntoPushInt .

    TIMES           reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    DIVIDE          reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    PLUS            reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    MINUS           reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    GREATERTHAN     reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    LESSTHAN        reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    GREATERTHANEQUAL reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    LESSTHANEQUAL   reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    EQUALEQUAL      reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    NOTEQUAL        reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    AND             reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    OR              reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    SEMICOLON       reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    RPAREN          reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    RBRACKET        reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)
    COMMA           reduce using rule 28 (tipo_cte -> CTE_INT puntoPushInt .)


state 151

    (29) tipo_cte -> CTE_FLOAT puntoPushFloat .

    TIMES           reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    DIVIDE          reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    PLUS            reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    MINUS           reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    GREATERTHAN     reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    LESSTHAN        reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    GREATERTHANEQUAL reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    LESSTHANEQUAL   reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    EQUALEQUAL      reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    NOTEQUAL        reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    AND             reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    OR              reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    SEMICOLON       reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    RPAREN          reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    RBRACKET        reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    COMMA           reduce using rule 29 (tipo_cte -> CTE_FLOAT puntoPushFloat .)


state 152

    (30) tipo_cte -> CTE_BOOL puntoPushBool .

    TIMES           reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    DIVIDE          reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    PLUS            reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    MINUS           reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    GREATERTHAN     reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    LESSTHAN        reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    GREATERTHANEQUAL reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    LESSTHANEQUAL   reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    EQUALEQUAL      reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    NOTEQUAL        reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    AND             reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    OR              reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    SEMICOLON       reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    RPAREN          reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    RBRACKET        reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)
    COMMA           reduce using rule 30 (tipo_cte -> CTE_BOOL puntoPushBool .)


state 153

    (31) tipo_cte -> CTE_CHAR puntoPushChar .

    TIMES           reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    DIVIDE          reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    PLUS            reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    MINUS           reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    GREATERTHAN     reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    LESSTHAN        reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    GREATERTHANEQUAL reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    LESSTHANEQUAL   reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    EQUALEQUAL      reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    NOTEQUAL        reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    AND             reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    OR              reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    SEMICOLON       reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    RPAREN          reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    RBRACKET        reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)
    COMMA           reduce using rule 31 (tipo_cte -> CTE_CHAR puntoPushChar .)


state 154

    (32) tipo_cte -> ID puntoPushID . tipo_cte1
    (34) tipo_cte1 -> . LBRACKET CTE_INT RBRACKET
    (35) tipo_cte1 -> . funciones_arr
    (36) tipo_cte1 -> . empty
    (143) funciones_arr -> . PUNTO funciones_arr1 LPAREN RPAREN
    (154) empty -> .

    LBRACKET        shift and go to state 186
    PUNTO           shift and go to state 189
    TIMES           reduce using rule 154 (empty -> .)
    DIVIDE          reduce using rule 154 (empty -> .)
    PLUS            reduce using rule 154 (empty -> .)
    MINUS           reduce using rule 154 (empty -> .)
    GREATERTHAN     reduce using rule 154 (empty -> .)
    LESSTHAN        reduce using rule 154 (empty -> .)
    GREATERTHANEQUAL reduce using rule 154 (empty -> .)
    LESSTHANEQUAL   reduce using rule 154 (empty -> .)
    EQUALEQUAL      reduce using rule 154 (empty -> .)
    NOTEQUAL        reduce using rule 154 (empty -> .)
    AND             reduce using rule 154 (empty -> .)
    OR              reduce using rule 154 (empty -> .)
    SEMICOLON       reduce using rule 154 (empty -> .)
    RPAREN          reduce using rule 154 (empty -> .)
    RBRACKET        reduce using rule 154 (empty -> .)
    COMMA           reduce using rule 154 (empty -> .)

    tipo_cte1                      shift and go to state 185
    funciones_arr                  shift and go to state 187
    empty                          shift and go to state 188

state 155

    (105) while -> WHILE puntoPushSaltoWhile LPAREN . expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (112) expresion -> . compare expresion2
    (117) compare -> . exp compare1
    (126) exp -> . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    expresion                      shift and go to state 190
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 156

    (109) do_while -> DO puntoPushSaltoDoWhile bloque . WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad

    WHILE           shift and go to state 191


state 157

    (65) bloque -> LBLOQUE . bloque1 RBLOQUE
    (66) bloque1 -> . estatuto bloque1
    (67) bloque1 -> . empty
    (68) estatuto -> . asignacion
    (69) estatuto -> . condicion
    (70) estatuto -> . escritura
    (71) estatuto -> . return
    (72) estatuto -> . while
    (73) estatuto -> . do_while
    (74) estatuto -> . llamada SEMICOLON
    (154) empty -> .
    (75) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (84) condicion -> . IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (90) escritura -> . PRINT LPAREN escritura1 RPAREN SEMICOLON
    (103) return -> . RETURN expresion puntoReturnQuad SEMICOLON
    (105) while -> . WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (109) do_while -> . DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    RBLOQUE         reduce using rule 154 (empty -> .)
    ID              shift and go to state 89
    IF              shift and go to state 90
    PRINT           shift and go to state 91
    RETURN          shift and go to state 92
    WHILE           shift and go to state 93
    DO              shift and go to state 94
    CALL            shift and go to state 95

    bloque1                        shift and go to state 192
    estatuto                       shift and go to state 193
    empty                          shift and go to state 194
    asignacion                     shift and go to state 82
    condicion                      shift and go to state 83
    escritura                      shift and go to state 84
    return                         shift and go to state 85
    while                          shift and go to state 86
    do_while                       shift and go to state 87
    llamada                        shift and go to state 88

state 158

    (95) llamada -> CALL PUNTO puntoPushFondoFalso . ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    ID              shift and go to state 195


state 159

    (45) funciones -> FUNC puntoResetMemoria funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad .

    FUNC            reduce using rule 45 (funciones -> FUNC puntoResetMemoria funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad .)
    VOID            reduce using rule 45 (funciones -> FUNC puntoResetMemoria funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN puntoCreateParamTable funciones2 RPAREN puntoCreateParamCount bloque_modular puntoFinalFuncQuad .)


state 160

    (48) funciones2 -> tipo ID puntoCreateVar puntoCreateVarType puntoPushParam . funciones3
    (50) funciones3 -> . COMMA tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (51) funciones3 -> . empty
    (154) empty -> .

    COMMA           shift and go to state 197
    RPAREN          reduce using rule 154 (empty -> .)

    funciones3                     shift and go to state 196
    empty                          shift and go to state 198

state 161

    (75) asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS . asignacion2 SEMICOLON
    (78) asignacion2 -> . expresion puntoCreateAsignacionQuad
    (79) asignacion2 -> . leida
    (112) expresion -> . compare expresion2
    (83) leida -> . INPUT LPAREN RPAREN
    (117) compare -> . exp compare1
    (126) exp -> . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    INPUT           shift and go to state 202
    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    asignacion2                    shift and go to state 199
    expresion                      shift and go to state 200
    leida                          shift and go to state 201
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 162

    (76) asignacion1 -> LBRACKET expresion . puntoCreateArrQuad RBRACKET
    (81) puntoCreateArrQuad -> .

    RBRACKET        reduce using rule 81 (puntoCreateArrQuad -> .)

    puntoCreateArrQuad             shift and go to state 203

state 163

    (84) condicion -> IF LPAREN expresion RPAREN . puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (87) puntoCreateIfQuad -> .

    LBLOQUE         reduce using rule 87 (puntoCreateIfQuad -> .)

    puntoCreateIfQuad              shift and go to state 204

state 164

    (90) escritura -> PRINT LPAREN escritura1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 205


state 165

    (91) escritura1 -> expresion puntoCreatePrintQuad .

    RPAREN          reduce using rule 91 (escritura1 -> expresion puntoCreatePrintQuad .)


state 166

    (92) escritura1 -> CTE_STRING puntoCreatePrintConstantQuad .

    RPAREN          reduce using rule 92 (escritura1 -> CTE_STRING puntoCreatePrintConstantQuad .)


state 167

    (103) return -> RETURN expresion puntoReturnQuad SEMICOLON .

    ID              reduce using rule 103 (return -> RETURN expresion puntoReturnQuad SEMICOLON .)
    IF              reduce using rule 103 (return -> RETURN expresion puntoReturnQuad SEMICOLON .)
    PRINT           reduce using rule 103 (return -> RETURN expresion puntoReturnQuad SEMICOLON .)
    RETURN          reduce using rule 103 (return -> RETURN expresion puntoReturnQuad SEMICOLON .)
    WHILE           reduce using rule 103 (return -> RETURN expresion puntoReturnQuad SEMICOLON .)
    DO              reduce using rule 103 (return -> RETURN expresion puntoReturnQuad SEMICOLON .)
    CALL            reduce using rule 103 (return -> RETURN expresion puntoReturnQuad SEMICOLON .)
    RBLOQUE         reduce using rule 103 (return -> RETURN expresion puntoReturnQuad SEMICOLON .)


state 168

    (113) expresion2 -> AND puntoPushOperador . compare puntoAndOr
    (117) compare -> . exp compare1
    (126) exp -> . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    compare                        shift and go to state 206
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 169

    (114) expresion2 -> OR puntoPushOperador . compare puntoAndOr
    (117) compare -> . exp compare1
    (126) exp -> . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    compare                        shift and go to state 207
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 170

    (118) compare1 -> GREATERTHAN puntoPushOperador . exp puntoOperacionRelacional
    (126) exp -> . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    exp                            shift and go to state 208
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 171

    (119) compare1 -> LESSTHAN puntoPushOperador . exp puntoOperacionRelacional
    (126) exp -> . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    exp                            shift and go to state 209
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 172

    (120) compare1 -> GREATERTHANEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (126) exp -> . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    exp                            shift and go to state 210
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 173

    (121) compare1 -> LESSTHANEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (126) exp -> . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    exp                            shift and go to state 211
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 174

    (122) compare1 -> EQUALEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (126) exp -> . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    exp                            shift and go to state 212
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 175

    (123) compare1 -> NOTEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (126) exp -> . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    exp                            shift and go to state 213
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 176

    (126) exp -> termino puntoSumaResta exp1 .

    GREATERTHAN     reduce using rule 126 (exp -> termino puntoSumaResta exp1 .)
    LESSTHAN        reduce using rule 126 (exp -> termino puntoSumaResta exp1 .)
    GREATERTHANEQUAL reduce using rule 126 (exp -> termino puntoSumaResta exp1 .)
    LESSTHANEQUAL   reduce using rule 126 (exp -> termino puntoSumaResta exp1 .)
    EQUALEQUAL      reduce using rule 126 (exp -> termino puntoSumaResta exp1 .)
    NOTEQUAL        reduce using rule 126 (exp -> termino puntoSumaResta exp1 .)
    AND             reduce using rule 126 (exp -> termino puntoSumaResta exp1 .)
    OR              reduce using rule 126 (exp -> termino puntoSumaResta exp1 .)
    SEMICOLON       reduce using rule 126 (exp -> termino puntoSumaResta exp1 .)
    RPAREN          reduce using rule 126 (exp -> termino puntoSumaResta exp1 .)
    RBRACKET        reduce using rule 126 (exp -> termino puntoSumaResta exp1 .)
    COMMA           reduce using rule 126 (exp -> termino puntoSumaResta exp1 .)


state 177

    (127) exp1 -> PLUS . puntoPushOperador termino puntoSumaResta exp1
    (136) puntoPushOperador -> .

    LPAREN          reduce using rule 136 (puntoPushOperador -> .)
    MINUS           reduce using rule 136 (puntoPushOperador -> .)
    NOT             reduce using rule 136 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 136 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 136 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 136 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 136 (puntoPushOperador -> .)
    ID              reduce using rule 136 (puntoPushOperador -> .)
    CALL            reduce using rule 136 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 214

state 178

    (128) exp1 -> MINUS . puntoPushOperador termino puntoSumaResta exp1
    (136) puntoPushOperador -> .

    LPAREN          reduce using rule 136 (puntoPushOperador -> .)
    MINUS           reduce using rule 136 (puntoPushOperador -> .)
    NOT             reduce using rule 136 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 136 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 136 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 136 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 136 (puntoPushOperador -> .)
    ID              reduce using rule 136 (puntoPushOperador -> .)
    CALL            reduce using rule 136 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 215

state 179

    (129) exp1 -> empty .

    GREATERTHAN     reduce using rule 129 (exp1 -> empty .)
    LESSTHAN        reduce using rule 129 (exp1 -> empty .)
    GREATERTHANEQUAL reduce using rule 129 (exp1 -> empty .)
    LESSTHANEQUAL   reduce using rule 129 (exp1 -> empty .)
    EQUALEQUAL      reduce using rule 129 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 129 (exp1 -> empty .)
    AND             reduce using rule 129 (exp1 -> empty .)
    OR              reduce using rule 129 (exp1 -> empty .)
    SEMICOLON       reduce using rule 129 (exp1 -> empty .)
    RPAREN          reduce using rule 129 (exp1 -> empty .)
    RBRACKET        reduce using rule 129 (exp1 -> empty .)
    COMMA           reduce using rule 129 (exp1 -> empty .)


state 180

    (131) termino -> factor puntoMultDivide termino1 .

    PLUS            reduce using rule 131 (termino -> factor puntoMultDivide termino1 .)
    MINUS           reduce using rule 131 (termino -> factor puntoMultDivide termino1 .)
    GREATERTHAN     reduce using rule 131 (termino -> factor puntoMultDivide termino1 .)
    LESSTHAN        reduce using rule 131 (termino -> factor puntoMultDivide termino1 .)
    GREATERTHANEQUAL reduce using rule 131 (termino -> factor puntoMultDivide termino1 .)
    LESSTHANEQUAL   reduce using rule 131 (termino -> factor puntoMultDivide termino1 .)
    EQUALEQUAL      reduce using rule 131 (termino -> factor puntoMultDivide termino1 .)
    NOTEQUAL        reduce using rule 131 (termino -> factor puntoMultDivide termino1 .)
    AND             reduce using rule 131 (termino -> factor puntoMultDivide termino1 .)
    OR              reduce using rule 131 (termino -> factor puntoMultDivide termino1 .)
    SEMICOLON       reduce using rule 131 (termino -> factor puntoMultDivide termino1 .)
    RPAREN          reduce using rule 131 (termino -> factor puntoMultDivide termino1 .)
    RBRACKET        reduce using rule 131 (termino -> factor puntoMultDivide termino1 .)
    COMMA           reduce using rule 131 (termino -> factor puntoMultDivide termino1 .)


state 181

    (132) termino1 -> TIMES . puntoPushOperador factor puntoMultDivide termino1
    (136) puntoPushOperador -> .

    LPAREN          reduce using rule 136 (puntoPushOperador -> .)
    MINUS           reduce using rule 136 (puntoPushOperador -> .)
    NOT             reduce using rule 136 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 136 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 136 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 136 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 136 (puntoPushOperador -> .)
    ID              reduce using rule 136 (puntoPushOperador -> .)
    CALL            reduce using rule 136 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 216

state 182

    (133) termino1 -> DIVIDE . puntoPushOperador factor puntoMultDivide termino1
    (136) puntoPushOperador -> .

    LPAREN          reduce using rule 136 (puntoPushOperador -> .)
    MINUS           reduce using rule 136 (puntoPushOperador -> .)
    NOT             reduce using rule 136 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 136 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 136 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 136 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 136 (puntoPushOperador -> .)
    ID              reduce using rule 136 (puntoPushOperador -> .)
    CALL            reduce using rule 136 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 217

state 183

    (134) termino1 -> empty .

    PLUS            reduce using rule 134 (termino1 -> empty .)
    MINUS           reduce using rule 134 (termino1 -> empty .)
    GREATERTHAN     reduce using rule 134 (termino1 -> empty .)
    LESSTHAN        reduce using rule 134 (termino1 -> empty .)
    GREATERTHANEQUAL reduce using rule 134 (termino1 -> empty .)
    LESSTHANEQUAL   reduce using rule 134 (termino1 -> empty .)
    EQUALEQUAL      reduce using rule 134 (termino1 -> empty .)
    NOTEQUAL        reduce using rule 134 (termino1 -> empty .)
    AND             reduce using rule 134 (termino1 -> empty .)
    OR              reduce using rule 134 (termino1 -> empty .)
    SEMICOLON       reduce using rule 134 (termino1 -> empty .)
    RPAREN          reduce using rule 134 (termino1 -> empty .)
    RBRACKET        reduce using rule 134 (termino1 -> empty .)
    COMMA           reduce using rule 134 (termino1 -> empty .)


state 184

    (137) factor -> LPAREN puntoPushFondoFalso expresion . RPAREN puntoPopFondoFalso

    RPAREN          shift and go to state 218


state 185

    (32) tipo_cte -> ID puntoPushID tipo_cte1 .

    TIMES           reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    DIVIDE          reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    PLUS            reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    MINUS           reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    GREATERTHAN     reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    LESSTHAN        reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    GREATERTHANEQUAL reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    LESSTHANEQUAL   reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    EQUALEQUAL      reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    NOTEQUAL        reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    AND             reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    OR              reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    SEMICOLON       reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    RPAREN          reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    RBRACKET        reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    COMMA           reduce using rule 32 (tipo_cte -> ID puntoPushID tipo_cte1 .)


state 186

    (34) tipo_cte1 -> LBRACKET . CTE_INT RBRACKET

    CTE_INT         shift and go to state 219


state 187

    (35) tipo_cte1 -> funciones_arr .

    TIMES           reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    DIVIDE          reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    PLUS            reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    MINUS           reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    GREATERTHAN     reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    LESSTHAN        reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    GREATERTHANEQUAL reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    LESSTHANEQUAL   reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    EQUALEQUAL      reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    NOTEQUAL        reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    AND             reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    OR              reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    SEMICOLON       reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    RPAREN          reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    RBRACKET        reduce using rule 35 (tipo_cte1 -> funciones_arr .)
    COMMA           reduce using rule 35 (tipo_cte1 -> funciones_arr .)


state 188

    (36) tipo_cte1 -> empty .

    TIMES           reduce using rule 36 (tipo_cte1 -> empty .)
    DIVIDE          reduce using rule 36 (tipo_cte1 -> empty .)
    PLUS            reduce using rule 36 (tipo_cte1 -> empty .)
    MINUS           reduce using rule 36 (tipo_cte1 -> empty .)
    GREATERTHAN     reduce using rule 36 (tipo_cte1 -> empty .)
    LESSTHAN        reduce using rule 36 (tipo_cte1 -> empty .)
    GREATERTHANEQUAL reduce using rule 36 (tipo_cte1 -> empty .)
    LESSTHANEQUAL   reduce using rule 36 (tipo_cte1 -> empty .)
    EQUALEQUAL      reduce using rule 36 (tipo_cte1 -> empty .)
    NOTEQUAL        reduce using rule 36 (tipo_cte1 -> empty .)
    AND             reduce using rule 36 (tipo_cte1 -> empty .)
    OR              reduce using rule 36 (tipo_cte1 -> empty .)
    SEMICOLON       reduce using rule 36 (tipo_cte1 -> empty .)
    RPAREN          reduce using rule 36 (tipo_cte1 -> empty .)
    RBRACKET        reduce using rule 36 (tipo_cte1 -> empty .)
    COMMA           reduce using rule 36 (tipo_cte1 -> empty .)


state 189

    (143) funciones_arr -> PUNTO . funciones_arr1 LPAREN RPAREN
    (144) funciones_arr1 -> . MAX
    (145) funciones_arr1 -> . MIN
    (146) funciones_arr1 -> . RANGE
    (147) funciones_arr1 -> . MEDIAN
    (148) funciones_arr1 -> . AVERAGE
    (149) funciones_arr1 -> . IQRANGE
    (150) funciones_arr1 -> . STDEV
    (151) funciones_arr1 -> . VARIANCE
    (152) funciones_arr1 -> . MODIFY
    (153) funciones_arr1 -> . DRAW

    MAX             shift and go to state 221
    MIN             shift and go to state 222
    RANGE           shift and go to state 223
    MEDIAN          shift and go to state 224
    AVERAGE         shift and go to state 225
    IQRANGE         shift and go to state 226
    STDEV           shift and go to state 227
    VARIANCE        shift and go to state 228
    MODIFY          shift and go to state 229
    DRAW            shift and go to state 230

    funciones_arr1                 shift and go to state 220

state 190

    (105) while -> WHILE puntoPushSaltoWhile LPAREN expresion . RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad

    RPAREN          shift and go to state 231


state 191

    (109) do_while -> DO puntoPushSaltoDoWhile bloque WHILE . LPAREN expresion RPAREN puntoCreateDoWhileQuad

    LPAREN          shift and go to state 232


state 192

    (65) bloque -> LBLOQUE bloque1 . RBLOQUE

    RBLOQUE         shift and go to state 233


state 193

    (66) bloque1 -> estatuto . bloque1
    (66) bloque1 -> . estatuto bloque1
    (67) bloque1 -> . empty
    (68) estatuto -> . asignacion
    (69) estatuto -> . condicion
    (70) estatuto -> . escritura
    (71) estatuto -> . return
    (72) estatuto -> . while
    (73) estatuto -> . do_while
    (74) estatuto -> . llamada SEMICOLON
    (154) empty -> .
    (75) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (84) condicion -> . IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad
    (90) escritura -> . PRINT LPAREN escritura1 RPAREN SEMICOLON
    (103) return -> . RETURN expresion puntoReturnQuad SEMICOLON
    (105) while -> . WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad
    (109) do_while -> . DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    RBLOQUE         reduce using rule 154 (empty -> .)
    ID              shift and go to state 89
    IF              shift and go to state 90
    PRINT           shift and go to state 91
    RETURN          shift and go to state 92
    WHILE           shift and go to state 93
    DO              shift and go to state 94
    CALL            shift and go to state 95

    estatuto                       shift and go to state 193
    bloque1                        shift and go to state 234
    empty                          shift and go to state 194
    asignacion                     shift and go to state 82
    condicion                      shift and go to state 83
    escritura                      shift and go to state 84
    return                         shift and go to state 85
    while                          shift and go to state 86
    do_while                       shift and go to state 87
    llamada                        shift and go to state 88

state 194

    (67) bloque1 -> empty .

    RBLOQUE         reduce using rule 67 (bloque1 -> empty .)


state 195

    (95) llamada -> CALL PUNTO puntoPushFondoFalso ID . puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad
    (100) puntoVerifyLlamada -> .

    LPAREN          reduce using rule 100 (puntoVerifyLlamada -> .)

    puntoVerifyLlamada             shift and go to state 235

state 196

    (48) funciones2 -> tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3 .

    RPAREN          reduce using rule 48 (funciones2 -> tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3 .)


state 197

    (50) funciones3 -> COMMA . tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (23) tipo -> . INT puntoCurrentType
    (24) tipo -> . FLOAT puntoCurrentType
    (25) tipo -> . BOOL puntoCurrentType
    (26) tipo -> . CHAR puntoCurrentType

    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    BOOL            shift and go to state 28
    CHAR            shift and go to state 29

    tipo                           shift and go to state 236

state 198

    (51) funciones3 -> empty .

    RPAREN          reduce using rule 51 (funciones3 -> empty .)


state 199

    (75) asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 . SEMICOLON

    SEMICOLON       shift and go to state 237


state 200

    (78) asignacion2 -> expresion . puntoCreateAsignacionQuad
    (82) puntoCreateAsignacionQuad -> .

    SEMICOLON       reduce using rule 82 (puntoCreateAsignacionQuad -> .)

    puntoCreateAsignacionQuad      shift and go to state 238

state 201

    (79) asignacion2 -> leida .

    SEMICOLON       reduce using rule 79 (asignacion2 -> leida .)


state 202

    (83) leida -> INPUT . LPAREN RPAREN

    LPAREN          shift and go to state 239


state 203

    (76) asignacion1 -> LBRACKET expresion puntoCreateArrQuad . RBRACKET

    RBRACKET        shift and go to state 240


state 204

    (84) condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad . bloque condicion1 puntoFillIfQuad
    (65) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 157

    bloque                         shift and go to state 241

state 205

    (90) escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .

    ID              reduce using rule 90 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    IF              reduce using rule 90 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    PRINT           reduce using rule 90 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 90 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 90 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    DO              reduce using rule 90 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    CALL            reduce using rule 90 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)
    RBLOQUE         reduce using rule 90 (escritura -> PRINT LPAREN escritura1 RPAREN SEMICOLON .)


state 206

    (113) expresion2 -> AND puntoPushOperador compare . puntoAndOr
    (116) puntoAndOr -> .

    SEMICOLON       reduce using rule 116 (puntoAndOr -> .)
    RPAREN          reduce using rule 116 (puntoAndOr -> .)
    RBRACKET        reduce using rule 116 (puntoAndOr -> .)
    COMMA           reduce using rule 116 (puntoAndOr -> .)

    puntoAndOr                     shift and go to state 242

state 207

    (114) expresion2 -> OR puntoPushOperador compare . puntoAndOr
    (116) puntoAndOr -> .

    SEMICOLON       reduce using rule 116 (puntoAndOr -> .)
    RPAREN          reduce using rule 116 (puntoAndOr -> .)
    RBRACKET        reduce using rule 116 (puntoAndOr -> .)
    COMMA           reduce using rule 116 (puntoAndOr -> .)

    puntoAndOr                     shift and go to state 243

state 208

    (118) compare1 -> GREATERTHAN puntoPushOperador exp . puntoOperacionRelacional
    (125) puntoOperacionRelacional -> .

    AND             reduce using rule 125 (puntoOperacionRelacional -> .)
    OR              reduce using rule 125 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 125 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 125 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 125 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 125 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 244

state 209

    (119) compare1 -> LESSTHAN puntoPushOperador exp . puntoOperacionRelacional
    (125) puntoOperacionRelacional -> .

    AND             reduce using rule 125 (puntoOperacionRelacional -> .)
    OR              reduce using rule 125 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 125 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 125 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 125 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 125 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 245

state 210

    (120) compare1 -> GREATERTHANEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (125) puntoOperacionRelacional -> .

    AND             reduce using rule 125 (puntoOperacionRelacional -> .)
    OR              reduce using rule 125 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 125 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 125 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 125 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 125 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 246

state 211

    (121) compare1 -> LESSTHANEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (125) puntoOperacionRelacional -> .

    AND             reduce using rule 125 (puntoOperacionRelacional -> .)
    OR              reduce using rule 125 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 125 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 125 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 125 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 125 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 247

state 212

    (122) compare1 -> EQUALEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (125) puntoOperacionRelacional -> .

    AND             reduce using rule 125 (puntoOperacionRelacional -> .)
    OR              reduce using rule 125 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 125 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 125 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 125 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 125 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 248

state 213

    (123) compare1 -> NOTEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (125) puntoOperacionRelacional -> .

    AND             reduce using rule 125 (puntoOperacionRelacional -> .)
    OR              reduce using rule 125 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 125 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 125 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 125 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 125 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 249

state 214

    (127) exp1 -> PLUS puntoPushOperador . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    termino                        shift and go to state 250
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 215

    (128) exp1 -> MINUS puntoPushOperador . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    termino                        shift and go to state 251
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 216

    (132) termino1 -> TIMES puntoPushOperador . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    factor                         shift and go to state 252
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 217

    (133) termino1 -> DIVIDE puntoPushOperador . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    factor                         shift and go to state 253
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 218

    (137) factor -> LPAREN puntoPushFondoFalso expresion RPAREN . puntoPopFondoFalso
    (142) puntoPopFondoFalso -> .

    TIMES           reduce using rule 142 (puntoPopFondoFalso -> .)
    DIVIDE          reduce using rule 142 (puntoPopFondoFalso -> .)
    PLUS            reduce using rule 142 (puntoPopFondoFalso -> .)
    MINUS           reduce using rule 142 (puntoPopFondoFalso -> .)
    GREATERTHAN     reduce using rule 142 (puntoPopFondoFalso -> .)
    LESSTHAN        reduce using rule 142 (puntoPopFondoFalso -> .)
    GREATERTHANEQUAL reduce using rule 142 (puntoPopFondoFalso -> .)
    LESSTHANEQUAL   reduce using rule 142 (puntoPopFondoFalso -> .)
    EQUALEQUAL      reduce using rule 142 (puntoPopFondoFalso -> .)
    NOTEQUAL        reduce using rule 142 (puntoPopFondoFalso -> .)
    AND             reduce using rule 142 (puntoPopFondoFalso -> .)
    OR              reduce using rule 142 (puntoPopFondoFalso -> .)
    SEMICOLON       reduce using rule 142 (puntoPopFondoFalso -> .)
    RPAREN          reduce using rule 142 (puntoPopFondoFalso -> .)
    RBRACKET        reduce using rule 142 (puntoPopFondoFalso -> .)
    COMMA           reduce using rule 142 (puntoPopFondoFalso -> .)

    puntoPopFondoFalso             shift and go to state 254

state 219

    (34) tipo_cte1 -> LBRACKET CTE_INT . RBRACKET

    RBRACKET        shift and go to state 255


state 220

    (143) funciones_arr -> PUNTO funciones_arr1 . LPAREN RPAREN

    LPAREN          shift and go to state 256


state 221

    (144) funciones_arr1 -> MAX .

    LPAREN          reduce using rule 144 (funciones_arr1 -> MAX .)


state 222

    (145) funciones_arr1 -> MIN .

    LPAREN          reduce using rule 145 (funciones_arr1 -> MIN .)


state 223

    (146) funciones_arr1 -> RANGE .

    LPAREN          reduce using rule 146 (funciones_arr1 -> RANGE .)


state 224

    (147) funciones_arr1 -> MEDIAN .

    LPAREN          reduce using rule 147 (funciones_arr1 -> MEDIAN .)


state 225

    (148) funciones_arr1 -> AVERAGE .

    LPAREN          reduce using rule 148 (funciones_arr1 -> AVERAGE .)


state 226

    (149) funciones_arr1 -> IQRANGE .

    LPAREN          reduce using rule 149 (funciones_arr1 -> IQRANGE .)


state 227

    (150) funciones_arr1 -> STDEV .

    LPAREN          reduce using rule 150 (funciones_arr1 -> STDEV .)


state 228

    (151) funciones_arr1 -> VARIANCE .

    LPAREN          reduce using rule 151 (funciones_arr1 -> VARIANCE .)


state 229

    (152) funciones_arr1 -> MODIFY .

    LPAREN          reduce using rule 152 (funciones_arr1 -> MODIFY .)


state 230

    (153) funciones_arr1 -> DRAW .

    LPAREN          reduce using rule 153 (funciones_arr1 -> DRAW .)


state 231

    (105) while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN . puntoCreateWhileQuad bloque puntoEndWhileQuad
    (107) puntoCreateWhileQuad -> .

    LBLOQUE         reduce using rule 107 (puntoCreateWhileQuad -> .)

    puntoCreateWhileQuad           shift and go to state 257

state 232

    (109) do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN . expresion RPAREN puntoCreateDoWhileQuad
    (112) expresion -> . compare expresion2
    (117) compare -> . exp compare1
    (126) exp -> . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    expresion                      shift and go to state 258
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 233

    (65) bloque -> LBLOQUE bloque1 RBLOQUE .

    WHILE           reduce using rule 65 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    ELSE            reduce using rule 65 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    ID              reduce using rule 65 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    IF              reduce using rule 65 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    PRINT           reduce using rule 65 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    RETURN          reduce using rule 65 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    DO              reduce using rule 65 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    CALL            reduce using rule 65 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    RBLOQUE         reduce using rule 65 (bloque -> LBLOQUE bloque1 RBLOQUE .)


state 234

    (66) bloque1 -> estatuto bloque1 .

    RBLOQUE         reduce using rule 66 (bloque1 -> estatuto bloque1 .)


state 235

    (95) llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada . LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 259


state 236

    (50) funciones3 -> COMMA tipo . ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3

    ID              shift and go to state 260


state 237

    (75) asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .

    ID              reduce using rule 75 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    IF              reduce using rule 75 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    PRINT           reduce using rule 75 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    RETURN          reduce using rule 75 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    WHILE           reduce using rule 75 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    DO              reduce using rule 75 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    CALL            reduce using rule 75 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    RBLOQUE         reduce using rule 75 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)


state 238

    (78) asignacion2 -> expresion puntoCreateAsignacionQuad .

    SEMICOLON       reduce using rule 78 (asignacion2 -> expresion puntoCreateAsignacionQuad .)


state 239

    (83) leida -> INPUT LPAREN . RPAREN

    RPAREN          shift and go to state 261


state 240

    (76) asignacion1 -> LBRACKET expresion puntoCreateArrQuad RBRACKET .

    EQUALS          reduce using rule 76 (asignacion1 -> LBRACKET expresion puntoCreateArrQuad RBRACKET .)


state 241

    (84) condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque . condicion1 puntoFillIfQuad
    (85) condicion1 -> . ELSE puntoCreateElseQuad bloque
    (86) condicion1 -> . empty
    (154) empty -> .

    ELSE            shift and go to state 263
    ID              reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    PRINT           reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    DO              reduce using rule 154 (empty -> .)
    CALL            reduce using rule 154 (empty -> .)
    RBLOQUE         reduce using rule 154 (empty -> .)

    condicion1                     shift and go to state 262
    empty                          shift and go to state 264

state 242

    (113) expresion2 -> AND puntoPushOperador compare puntoAndOr .

    SEMICOLON       reduce using rule 113 (expresion2 -> AND puntoPushOperador compare puntoAndOr .)
    RPAREN          reduce using rule 113 (expresion2 -> AND puntoPushOperador compare puntoAndOr .)
    RBRACKET        reduce using rule 113 (expresion2 -> AND puntoPushOperador compare puntoAndOr .)
    COMMA           reduce using rule 113 (expresion2 -> AND puntoPushOperador compare puntoAndOr .)


state 243

    (114) expresion2 -> OR puntoPushOperador compare puntoAndOr .

    SEMICOLON       reduce using rule 114 (expresion2 -> OR puntoPushOperador compare puntoAndOr .)
    RPAREN          reduce using rule 114 (expresion2 -> OR puntoPushOperador compare puntoAndOr .)
    RBRACKET        reduce using rule 114 (expresion2 -> OR puntoPushOperador compare puntoAndOr .)
    COMMA           reduce using rule 114 (expresion2 -> OR puntoPushOperador compare puntoAndOr .)


state 244

    (118) compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 118 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 118 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 118 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 118 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 118 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 118 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)


state 245

    (119) compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 119 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 119 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 119 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 119 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 119 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 119 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)


state 246

    (120) compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 120 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 120 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 120 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 120 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 120 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 120 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 247

    (121) compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 121 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 121 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 121 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 121 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 121 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 121 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 248

    (122) compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 122 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 122 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 122 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 122 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 122 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 122 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 249

    (123) compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 123 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 123 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 123 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 123 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 123 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 123 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 250

    (127) exp1 -> PLUS puntoPushOperador termino . puntoSumaResta exp1
    (130) puntoSumaResta -> .

    PLUS            reduce using rule 130 (puntoSumaResta -> .)
    MINUS           reduce using rule 130 (puntoSumaResta -> .)
    GREATERTHAN     reduce using rule 130 (puntoSumaResta -> .)
    LESSTHAN        reduce using rule 130 (puntoSumaResta -> .)
    GREATERTHANEQUAL reduce using rule 130 (puntoSumaResta -> .)
    LESSTHANEQUAL   reduce using rule 130 (puntoSumaResta -> .)
    EQUALEQUAL      reduce using rule 130 (puntoSumaResta -> .)
    NOTEQUAL        reduce using rule 130 (puntoSumaResta -> .)
    AND             reduce using rule 130 (puntoSumaResta -> .)
    OR              reduce using rule 130 (puntoSumaResta -> .)
    SEMICOLON       reduce using rule 130 (puntoSumaResta -> .)
    RPAREN          reduce using rule 130 (puntoSumaResta -> .)
    RBRACKET        reduce using rule 130 (puntoSumaResta -> .)
    COMMA           reduce using rule 130 (puntoSumaResta -> .)

    puntoSumaResta                 shift and go to state 265

state 251

    (128) exp1 -> MINUS puntoPushOperador termino . puntoSumaResta exp1
    (130) puntoSumaResta -> .

    PLUS            reduce using rule 130 (puntoSumaResta -> .)
    MINUS           reduce using rule 130 (puntoSumaResta -> .)
    GREATERTHAN     reduce using rule 130 (puntoSumaResta -> .)
    LESSTHAN        reduce using rule 130 (puntoSumaResta -> .)
    GREATERTHANEQUAL reduce using rule 130 (puntoSumaResta -> .)
    LESSTHANEQUAL   reduce using rule 130 (puntoSumaResta -> .)
    EQUALEQUAL      reduce using rule 130 (puntoSumaResta -> .)
    NOTEQUAL        reduce using rule 130 (puntoSumaResta -> .)
    AND             reduce using rule 130 (puntoSumaResta -> .)
    OR              reduce using rule 130 (puntoSumaResta -> .)
    SEMICOLON       reduce using rule 130 (puntoSumaResta -> .)
    RPAREN          reduce using rule 130 (puntoSumaResta -> .)
    RBRACKET        reduce using rule 130 (puntoSumaResta -> .)
    COMMA           reduce using rule 130 (puntoSumaResta -> .)

    puntoSumaResta                 shift and go to state 266

state 252

    (132) termino1 -> TIMES puntoPushOperador factor . puntoMultDivide termino1
    (135) puntoMultDivide -> .

    TIMES           reduce using rule 135 (puntoMultDivide -> .)
    DIVIDE          reduce using rule 135 (puntoMultDivide -> .)
    PLUS            reduce using rule 135 (puntoMultDivide -> .)
    MINUS           reduce using rule 135 (puntoMultDivide -> .)
    GREATERTHAN     reduce using rule 135 (puntoMultDivide -> .)
    LESSTHAN        reduce using rule 135 (puntoMultDivide -> .)
    GREATERTHANEQUAL reduce using rule 135 (puntoMultDivide -> .)
    LESSTHANEQUAL   reduce using rule 135 (puntoMultDivide -> .)
    EQUALEQUAL      reduce using rule 135 (puntoMultDivide -> .)
    NOTEQUAL        reduce using rule 135 (puntoMultDivide -> .)
    AND             reduce using rule 135 (puntoMultDivide -> .)
    OR              reduce using rule 135 (puntoMultDivide -> .)
    SEMICOLON       reduce using rule 135 (puntoMultDivide -> .)
    RPAREN          reduce using rule 135 (puntoMultDivide -> .)
    RBRACKET        reduce using rule 135 (puntoMultDivide -> .)
    COMMA           reduce using rule 135 (puntoMultDivide -> .)

    puntoMultDivide                shift and go to state 267

state 253

    (133) termino1 -> DIVIDE puntoPushOperador factor . puntoMultDivide termino1
    (135) puntoMultDivide -> .

    TIMES           reduce using rule 135 (puntoMultDivide -> .)
    DIVIDE          reduce using rule 135 (puntoMultDivide -> .)
    PLUS            reduce using rule 135 (puntoMultDivide -> .)
    MINUS           reduce using rule 135 (puntoMultDivide -> .)
    GREATERTHAN     reduce using rule 135 (puntoMultDivide -> .)
    LESSTHAN        reduce using rule 135 (puntoMultDivide -> .)
    GREATERTHANEQUAL reduce using rule 135 (puntoMultDivide -> .)
    LESSTHANEQUAL   reduce using rule 135 (puntoMultDivide -> .)
    EQUALEQUAL      reduce using rule 135 (puntoMultDivide -> .)
    NOTEQUAL        reduce using rule 135 (puntoMultDivide -> .)
    AND             reduce using rule 135 (puntoMultDivide -> .)
    OR              reduce using rule 135 (puntoMultDivide -> .)
    SEMICOLON       reduce using rule 135 (puntoMultDivide -> .)
    RPAREN          reduce using rule 135 (puntoMultDivide -> .)
    RBRACKET        reduce using rule 135 (puntoMultDivide -> .)
    COMMA           reduce using rule 135 (puntoMultDivide -> .)

    puntoMultDivide                shift and go to state 268

state 254

    (137) factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .

    TIMES           reduce using rule 137 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    DIVIDE          reduce using rule 137 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    PLUS            reduce using rule 137 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    MINUS           reduce using rule 137 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    GREATERTHAN     reduce using rule 137 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    LESSTHAN        reduce using rule 137 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    GREATERTHANEQUAL reduce using rule 137 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    LESSTHANEQUAL   reduce using rule 137 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    EQUALEQUAL      reduce using rule 137 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    NOTEQUAL        reduce using rule 137 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    AND             reduce using rule 137 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    OR              reduce using rule 137 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    SEMICOLON       reduce using rule 137 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    RPAREN          reduce using rule 137 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    RBRACKET        reduce using rule 137 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    COMMA           reduce using rule 137 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)


state 255

    (34) tipo_cte1 -> LBRACKET CTE_INT RBRACKET .

    TIMES           reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    DIVIDE          reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    PLUS            reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    MINUS           reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    GREATERTHAN     reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    LESSTHAN        reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    GREATERTHANEQUAL reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    LESSTHANEQUAL   reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    EQUALEQUAL      reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    NOTEQUAL        reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    AND             reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    OR              reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    SEMICOLON       reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    RPAREN          reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    RBRACKET        reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    COMMA           reduce using rule 34 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)


state 256

    (143) funciones_arr -> PUNTO funciones_arr1 LPAREN . RPAREN

    RPAREN          shift and go to state 269


state 257

    (105) while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad . bloque puntoEndWhileQuad
    (65) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 157

    bloque                         shift and go to state 270

state 258

    (109) do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion . RPAREN puntoCreateDoWhileQuad

    RPAREN          shift and go to state 271


state 259

    (95) llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN . llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad
    (96) llamada1 -> . expresion puntoVerifyArgumento llamada2
    (97) llamada1 -> . empty
    (112) expresion -> . compare expresion2
    (154) empty -> .
    (117) compare -> . exp compare1
    (126) exp -> . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    RPAREN          reduce using rule 154 (empty -> .)
    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    llamada1                       shift and go to state 272
    expresion                      shift and go to state 273
    empty                          shift and go to state 274
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 260

    (50) funciones3 -> COMMA tipo ID . puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (20) puntoCreateVar -> .

    COMMA           reduce using rule 20 (puntoCreateVar -> .)
    RPAREN          reduce using rule 20 (puntoCreateVar -> .)

    puntoCreateVar                 shift and go to state 275

state 261

    (83) leida -> INPUT LPAREN RPAREN .

    SEMICOLON       reduce using rule 83 (leida -> INPUT LPAREN RPAREN .)


state 262

    (84) condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 . puntoFillIfQuad
    (88) puntoFillIfQuad -> .

    ID              reduce using rule 88 (puntoFillIfQuad -> .)
    IF              reduce using rule 88 (puntoFillIfQuad -> .)
    PRINT           reduce using rule 88 (puntoFillIfQuad -> .)
    RETURN          reduce using rule 88 (puntoFillIfQuad -> .)
    WHILE           reduce using rule 88 (puntoFillIfQuad -> .)
    DO              reduce using rule 88 (puntoFillIfQuad -> .)
    CALL            reduce using rule 88 (puntoFillIfQuad -> .)
    RBLOQUE         reduce using rule 88 (puntoFillIfQuad -> .)

    puntoFillIfQuad                shift and go to state 276

state 263

    (85) condicion1 -> ELSE . puntoCreateElseQuad bloque
    (89) puntoCreateElseQuad -> .

    LBLOQUE         reduce using rule 89 (puntoCreateElseQuad -> .)

    puntoCreateElseQuad            shift and go to state 277

state 264

    (86) condicion1 -> empty .

    ID              reduce using rule 86 (condicion1 -> empty .)
    IF              reduce using rule 86 (condicion1 -> empty .)
    PRINT           reduce using rule 86 (condicion1 -> empty .)
    RETURN          reduce using rule 86 (condicion1 -> empty .)
    WHILE           reduce using rule 86 (condicion1 -> empty .)
    DO              reduce using rule 86 (condicion1 -> empty .)
    CALL            reduce using rule 86 (condicion1 -> empty .)
    RBLOQUE         reduce using rule 86 (condicion1 -> empty .)


state 265

    (127) exp1 -> PLUS puntoPushOperador termino puntoSumaResta . exp1
    (127) exp1 -> . PLUS puntoPushOperador termino puntoSumaResta exp1
    (128) exp1 -> . MINUS puntoPushOperador termino puntoSumaResta exp1
    (129) exp1 -> . empty
    (154) empty -> .

    PLUS            shift and go to state 177
    MINUS           shift and go to state 178
    GREATERTHAN     reduce using rule 154 (empty -> .)
    LESSTHAN        reduce using rule 154 (empty -> .)
    GREATERTHANEQUAL reduce using rule 154 (empty -> .)
    LESSTHANEQUAL   reduce using rule 154 (empty -> .)
    EQUALEQUAL      reduce using rule 154 (empty -> .)
    NOTEQUAL        reduce using rule 154 (empty -> .)
    AND             reduce using rule 154 (empty -> .)
    OR              reduce using rule 154 (empty -> .)
    SEMICOLON       reduce using rule 154 (empty -> .)
    RPAREN          reduce using rule 154 (empty -> .)
    RBRACKET        reduce using rule 154 (empty -> .)
    COMMA           reduce using rule 154 (empty -> .)

    exp1                           shift and go to state 278
    empty                          shift and go to state 179

state 266

    (128) exp1 -> MINUS puntoPushOperador termino puntoSumaResta . exp1
    (127) exp1 -> . PLUS puntoPushOperador termino puntoSumaResta exp1
    (128) exp1 -> . MINUS puntoPushOperador termino puntoSumaResta exp1
    (129) exp1 -> . empty
    (154) empty -> .

    PLUS            shift and go to state 177
    MINUS           shift and go to state 178
    GREATERTHAN     reduce using rule 154 (empty -> .)
    LESSTHAN        reduce using rule 154 (empty -> .)
    GREATERTHANEQUAL reduce using rule 154 (empty -> .)
    LESSTHANEQUAL   reduce using rule 154 (empty -> .)
    EQUALEQUAL      reduce using rule 154 (empty -> .)
    NOTEQUAL        reduce using rule 154 (empty -> .)
    AND             reduce using rule 154 (empty -> .)
    OR              reduce using rule 154 (empty -> .)
    SEMICOLON       reduce using rule 154 (empty -> .)
    RPAREN          reduce using rule 154 (empty -> .)
    RBRACKET        reduce using rule 154 (empty -> .)
    COMMA           reduce using rule 154 (empty -> .)

    exp1                           shift and go to state 279
    empty                          shift and go to state 179

state 267

    (132) termino1 -> TIMES puntoPushOperador factor puntoMultDivide . termino1
    (132) termino1 -> . TIMES puntoPushOperador factor puntoMultDivide termino1
    (133) termino1 -> . DIVIDE puntoPushOperador factor puntoMultDivide termino1
    (134) termino1 -> . empty
    (154) empty -> .

    TIMES           shift and go to state 181
    DIVIDE          shift and go to state 182
    PLUS            reduce using rule 154 (empty -> .)
    MINUS           reduce using rule 154 (empty -> .)
    GREATERTHAN     reduce using rule 154 (empty -> .)
    LESSTHAN        reduce using rule 154 (empty -> .)
    GREATERTHANEQUAL reduce using rule 154 (empty -> .)
    LESSTHANEQUAL   reduce using rule 154 (empty -> .)
    EQUALEQUAL      reduce using rule 154 (empty -> .)
    NOTEQUAL        reduce using rule 154 (empty -> .)
    AND             reduce using rule 154 (empty -> .)
    OR              reduce using rule 154 (empty -> .)
    SEMICOLON       reduce using rule 154 (empty -> .)
    RPAREN          reduce using rule 154 (empty -> .)
    RBRACKET        reduce using rule 154 (empty -> .)
    COMMA           reduce using rule 154 (empty -> .)

    termino1                       shift and go to state 280
    empty                          shift and go to state 183

state 268

    (133) termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide . termino1
    (132) termino1 -> . TIMES puntoPushOperador factor puntoMultDivide termino1
    (133) termino1 -> . DIVIDE puntoPushOperador factor puntoMultDivide termino1
    (134) termino1 -> . empty
    (154) empty -> .

    TIMES           shift and go to state 181
    DIVIDE          shift and go to state 182
    PLUS            reduce using rule 154 (empty -> .)
    MINUS           reduce using rule 154 (empty -> .)
    GREATERTHAN     reduce using rule 154 (empty -> .)
    LESSTHAN        reduce using rule 154 (empty -> .)
    GREATERTHANEQUAL reduce using rule 154 (empty -> .)
    LESSTHANEQUAL   reduce using rule 154 (empty -> .)
    EQUALEQUAL      reduce using rule 154 (empty -> .)
    NOTEQUAL        reduce using rule 154 (empty -> .)
    AND             reduce using rule 154 (empty -> .)
    OR              reduce using rule 154 (empty -> .)
    SEMICOLON       reduce using rule 154 (empty -> .)
    RPAREN          reduce using rule 154 (empty -> .)
    RBRACKET        reduce using rule 154 (empty -> .)
    COMMA           reduce using rule 154 (empty -> .)

    termino1                       shift and go to state 281
    empty                          shift and go to state 183

state 269

    (143) funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .

    TIMES           reduce using rule 143 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    DIVIDE          reduce using rule 143 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    PLUS            reduce using rule 143 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    MINUS           reduce using rule 143 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    GREATERTHAN     reduce using rule 143 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    LESSTHAN        reduce using rule 143 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    GREATERTHANEQUAL reduce using rule 143 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    LESSTHANEQUAL   reduce using rule 143 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    EQUALEQUAL      reduce using rule 143 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 143 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    AND             reduce using rule 143 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    OR              reduce using rule 143 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    SEMICOLON       reduce using rule 143 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    RPAREN          reduce using rule 143 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    RBRACKET        reduce using rule 143 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    COMMA           reduce using rule 143 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)


state 270

    (105) while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque . puntoEndWhileQuad
    (108) puntoEndWhileQuad -> .

    ID              reduce using rule 108 (puntoEndWhileQuad -> .)
    IF              reduce using rule 108 (puntoEndWhileQuad -> .)
    PRINT           reduce using rule 108 (puntoEndWhileQuad -> .)
    RETURN          reduce using rule 108 (puntoEndWhileQuad -> .)
    WHILE           reduce using rule 108 (puntoEndWhileQuad -> .)
    DO              reduce using rule 108 (puntoEndWhileQuad -> .)
    CALL            reduce using rule 108 (puntoEndWhileQuad -> .)
    RBLOQUE         reduce using rule 108 (puntoEndWhileQuad -> .)

    puntoEndWhileQuad              shift and go to state 282

state 271

    (109) do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN . puntoCreateDoWhileQuad
    (111) puntoCreateDoWhileQuad -> .

    ID              reduce using rule 111 (puntoCreateDoWhileQuad -> .)
    IF              reduce using rule 111 (puntoCreateDoWhileQuad -> .)
    PRINT           reduce using rule 111 (puntoCreateDoWhileQuad -> .)
    RETURN          reduce using rule 111 (puntoCreateDoWhileQuad -> .)
    WHILE           reduce using rule 111 (puntoCreateDoWhileQuad -> .)
    DO              reduce using rule 111 (puntoCreateDoWhileQuad -> .)
    CALL            reduce using rule 111 (puntoCreateDoWhileQuad -> .)
    RBLOQUE         reduce using rule 111 (puntoCreateDoWhileQuad -> .)

    puntoCreateDoWhileQuad         shift and go to state 283

state 272

    (95) llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 . RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    RPAREN          shift and go to state 284


state 273

    (96) llamada1 -> expresion . puntoVerifyArgumento llamada2
    (101) puntoVerifyArgumento -> .

    COMMA           reduce using rule 101 (puntoVerifyArgumento -> .)
    RPAREN          reduce using rule 101 (puntoVerifyArgumento -> .)

    puntoVerifyArgumento           shift and go to state 285

state 274

    (97) llamada1 -> empty .

    RPAREN          reduce using rule 97 (llamada1 -> empty .)


state 275

    (50) funciones3 -> COMMA tipo ID puntoCreateVar . puntoCreateVarType puntoPushParam funciones3
    (21) puntoCreateVarType -> .

    COMMA           reduce using rule 21 (puntoCreateVarType -> .)
    RPAREN          reduce using rule 21 (puntoCreateVarType -> .)

    puntoCreateVarType             shift and go to state 286

state 276

    (84) condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .

    ID              reduce using rule 84 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    IF              reduce using rule 84 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    PRINT           reduce using rule 84 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    RETURN          reduce using rule 84 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    WHILE           reduce using rule 84 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    DO              reduce using rule 84 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    CALL            reduce using rule 84 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)
    RBLOQUE         reduce using rule 84 (condicion -> IF LPAREN expresion RPAREN puntoCreateIfQuad bloque condicion1 puntoFillIfQuad .)


state 277

    (85) condicion1 -> ELSE puntoCreateElseQuad . bloque
    (65) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 157

    bloque                         shift and go to state 287

state 278

    (127) exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .

    GREATERTHAN     reduce using rule 127 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHAN        reduce using rule 127 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    GREATERTHANEQUAL reduce using rule 127 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHANEQUAL   reduce using rule 127 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    EQUALEQUAL      reduce using rule 127 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    NOTEQUAL        reduce using rule 127 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    AND             reduce using rule 127 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    OR              reduce using rule 127 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    SEMICOLON       reduce using rule 127 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    RPAREN          reduce using rule 127 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    RBRACKET        reduce using rule 127 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    COMMA           reduce using rule 127 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)


state 279

    (128) exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .

    GREATERTHAN     reduce using rule 128 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHAN        reduce using rule 128 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    GREATERTHANEQUAL reduce using rule 128 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHANEQUAL   reduce using rule 128 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    EQUALEQUAL      reduce using rule 128 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    NOTEQUAL        reduce using rule 128 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    AND             reduce using rule 128 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    OR              reduce using rule 128 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    SEMICOLON       reduce using rule 128 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    RPAREN          reduce using rule 128 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    RBRACKET        reduce using rule 128 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    COMMA           reduce using rule 128 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)


state 280

    (132) termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .

    PLUS            reduce using rule 132 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    MINUS           reduce using rule 132 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHAN     reduce using rule 132 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHAN        reduce using rule 132 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHANEQUAL reduce using rule 132 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHANEQUAL   reduce using rule 132 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    EQUALEQUAL      reduce using rule 132 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    NOTEQUAL        reduce using rule 132 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    AND             reduce using rule 132 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    OR              reduce using rule 132 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    SEMICOLON       reduce using rule 132 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    RPAREN          reduce using rule 132 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    RBRACKET        reduce using rule 132 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    COMMA           reduce using rule 132 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)


state 281

    (133) termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .

    PLUS            reduce using rule 133 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    MINUS           reduce using rule 133 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHAN     reduce using rule 133 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHAN        reduce using rule 133 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHANEQUAL reduce using rule 133 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHANEQUAL   reduce using rule 133 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    EQUALEQUAL      reduce using rule 133 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    NOTEQUAL        reduce using rule 133 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    AND             reduce using rule 133 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    OR              reduce using rule 133 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    SEMICOLON       reduce using rule 133 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    RPAREN          reduce using rule 133 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    RBRACKET        reduce using rule 133 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    COMMA           reduce using rule 133 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)


state 282

    (105) while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .

    ID              reduce using rule 105 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    IF              reduce using rule 105 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    PRINT           reduce using rule 105 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    RETURN          reduce using rule 105 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    WHILE           reduce using rule 105 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    DO              reduce using rule 105 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    CALL            reduce using rule 105 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)
    RBLOQUE         reduce using rule 105 (while -> WHILE puntoPushSaltoWhile LPAREN expresion RPAREN puntoCreateWhileQuad bloque puntoEndWhileQuad .)


state 283

    (109) do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .

    ID              reduce using rule 109 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    IF              reduce using rule 109 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    PRINT           reduce using rule 109 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    RETURN          reduce using rule 109 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    WHILE           reduce using rule 109 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    DO              reduce using rule 109 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    CALL            reduce using rule 109 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)
    RBLOQUE         reduce using rule 109 (do_while -> DO puntoPushSaltoDoWhile bloque WHILE LPAREN expresion RPAREN puntoCreateDoWhileQuad .)


state 284

    (95) llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN . puntoPopFondoFalso puntoCreateGoSubQuad
    (142) puntoPopFondoFalso -> .

    SEMICOLON       reduce using rule 142 (puntoPopFondoFalso -> .)
    TIMES           reduce using rule 142 (puntoPopFondoFalso -> .)
    DIVIDE          reduce using rule 142 (puntoPopFondoFalso -> .)
    PLUS            reduce using rule 142 (puntoPopFondoFalso -> .)
    MINUS           reduce using rule 142 (puntoPopFondoFalso -> .)
    GREATERTHAN     reduce using rule 142 (puntoPopFondoFalso -> .)
    LESSTHAN        reduce using rule 142 (puntoPopFondoFalso -> .)
    GREATERTHANEQUAL reduce using rule 142 (puntoPopFondoFalso -> .)
    LESSTHANEQUAL   reduce using rule 142 (puntoPopFondoFalso -> .)
    EQUALEQUAL      reduce using rule 142 (puntoPopFondoFalso -> .)
    NOTEQUAL        reduce using rule 142 (puntoPopFondoFalso -> .)
    AND             reduce using rule 142 (puntoPopFondoFalso -> .)
    OR              reduce using rule 142 (puntoPopFondoFalso -> .)
    RPAREN          reduce using rule 142 (puntoPopFondoFalso -> .)
    RBRACKET        reduce using rule 142 (puntoPopFondoFalso -> .)
    COMMA           reduce using rule 142 (puntoPopFondoFalso -> .)

    puntoPopFondoFalso             shift and go to state 288

state 285

    (96) llamada1 -> expresion puntoVerifyArgumento . llamada2
    (98) llamada2 -> . COMMA expresion puntoVerifyArgumento llamada2
    (99) llamada2 -> . empty
    (154) empty -> .

    COMMA           shift and go to state 290
    RPAREN          reduce using rule 154 (empty -> .)

    llamada2                       shift and go to state 289
    empty                          shift and go to state 291

state 286

    (50) funciones3 -> COMMA tipo ID puntoCreateVar puntoCreateVarType . puntoPushParam funciones3
    (56) puntoPushParam -> .

    COMMA           reduce using rule 56 (puntoPushParam -> .)
    RPAREN          reduce using rule 56 (puntoPushParam -> .)

    puntoPushParam                 shift and go to state 292

state 287

    (85) condicion1 -> ELSE puntoCreateElseQuad bloque .

    ID              reduce using rule 85 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    IF              reduce using rule 85 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    PRINT           reduce using rule 85 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    RETURN          reduce using rule 85 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    WHILE           reduce using rule 85 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    DO              reduce using rule 85 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    CALL            reduce using rule 85 (condicion1 -> ELSE puntoCreateElseQuad bloque .)
    RBLOQUE         reduce using rule 85 (condicion1 -> ELSE puntoCreateElseQuad bloque .)


state 288

    (95) llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso . puntoCreateGoSubQuad
    (102) puntoCreateGoSubQuad -> .

    SEMICOLON       reduce using rule 102 (puntoCreateGoSubQuad -> .)
    TIMES           reduce using rule 102 (puntoCreateGoSubQuad -> .)
    DIVIDE          reduce using rule 102 (puntoCreateGoSubQuad -> .)
    PLUS            reduce using rule 102 (puntoCreateGoSubQuad -> .)
    MINUS           reduce using rule 102 (puntoCreateGoSubQuad -> .)
    GREATERTHAN     reduce using rule 102 (puntoCreateGoSubQuad -> .)
    LESSTHAN        reduce using rule 102 (puntoCreateGoSubQuad -> .)
    GREATERTHANEQUAL reduce using rule 102 (puntoCreateGoSubQuad -> .)
    LESSTHANEQUAL   reduce using rule 102 (puntoCreateGoSubQuad -> .)
    EQUALEQUAL      reduce using rule 102 (puntoCreateGoSubQuad -> .)
    NOTEQUAL        reduce using rule 102 (puntoCreateGoSubQuad -> .)
    AND             reduce using rule 102 (puntoCreateGoSubQuad -> .)
    OR              reduce using rule 102 (puntoCreateGoSubQuad -> .)
    RPAREN          reduce using rule 102 (puntoCreateGoSubQuad -> .)
    RBRACKET        reduce using rule 102 (puntoCreateGoSubQuad -> .)
    COMMA           reduce using rule 102 (puntoCreateGoSubQuad -> .)

    puntoCreateGoSubQuad           shift and go to state 293

state 289

    (96) llamada1 -> expresion puntoVerifyArgumento llamada2 .

    RPAREN          reduce using rule 96 (llamada1 -> expresion puntoVerifyArgumento llamada2 .)


state 290

    (98) llamada2 -> COMMA . expresion puntoVerifyArgumento llamada2
    (112) expresion -> . compare expresion2
    (117) compare -> . exp compare1
    (126) exp -> . termino puntoSumaResta exp1
    (131) termino -> . factor puntoMultDivide termino1
    (137) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (138) factor -> . tipo_cte
    (139) factor -> . MINUS tipo_cte
    (140) factor -> . NOT tipo_cte
    (28) tipo_cte -> . CTE_INT puntoPushInt
    (29) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (30) tipo_cte -> . CTE_BOOL puntoPushBool
    (31) tipo_cte -> . CTE_CHAR puntoPushChar
    (32) tipo_cte -> . ID puntoPushID tipo_cte1
    (33) tipo_cte -> . llamada
    (95) llamada -> . CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad

    LPAREN          shift and go to state 110
    MINUS           shift and go to state 112
    NOT             shift and go to state 113
    CTE_INT         shift and go to state 114
    CTE_FLOAT       shift and go to state 115
    CTE_BOOL        shift and go to state 116
    CTE_CHAR        shift and go to state 117
    ID              shift and go to state 118
    CALL            shift and go to state 95

    expresion                      shift and go to state 294
    compare                        shift and go to state 106
    exp                            shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    tipo_cte                       shift and go to state 111
    llamada                        shift and go to state 119

state 291

    (99) llamada2 -> empty .

    RPAREN          reduce using rule 99 (llamada2 -> empty .)


state 292

    (50) funciones3 -> COMMA tipo ID puntoCreateVar puntoCreateVarType puntoPushParam . funciones3
    (50) funciones3 -> . COMMA tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3
    (51) funciones3 -> . empty
    (154) empty -> .

    COMMA           shift and go to state 197
    RPAREN          reduce using rule 154 (empty -> .)

    funciones3                     shift and go to state 295
    empty                          shift and go to state 198

state 293

    (95) llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .

    SEMICOLON       reduce using rule 95 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    TIMES           reduce using rule 95 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    DIVIDE          reduce using rule 95 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    PLUS            reduce using rule 95 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    MINUS           reduce using rule 95 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    GREATERTHAN     reduce using rule 95 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    LESSTHAN        reduce using rule 95 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    GREATERTHANEQUAL reduce using rule 95 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    LESSTHANEQUAL   reduce using rule 95 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    EQUALEQUAL      reduce using rule 95 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    NOTEQUAL        reduce using rule 95 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    AND             reduce using rule 95 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    OR              reduce using rule 95 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    RPAREN          reduce using rule 95 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    RBRACKET        reduce using rule 95 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)
    COMMA           reduce using rule 95 (llamada -> CALL PUNTO puntoPushFondoFalso ID puntoVerifyLlamada LPAREN llamada1 RPAREN puntoPopFondoFalso puntoCreateGoSubQuad .)


state 294

    (98) llamada2 -> COMMA expresion . puntoVerifyArgumento llamada2
    (101) puntoVerifyArgumento -> .

    COMMA           reduce using rule 101 (puntoVerifyArgumento -> .)
    RPAREN          reduce using rule 101 (puntoVerifyArgumento -> .)

    puntoVerifyArgumento           shift and go to state 296

state 295

    (50) funciones3 -> COMMA tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3 .

    RPAREN          reduce using rule 50 (funciones3 -> COMMA tipo ID puntoCreateVar puntoCreateVarType puntoPushParam funciones3 .)


state 296

    (98) llamada2 -> COMMA expresion puntoVerifyArgumento . llamada2
    (98) llamada2 -> . COMMA expresion puntoVerifyArgumento llamada2
    (99) llamada2 -> . empty
    (154) empty -> .

    COMMA           shift and go to state 290
    RPAREN          reduce using rule 154 (empty -> .)

    llamada2                       shift and go to state 297
    empty                          shift and go to state 291

state 297

    (98) llamada2 -> COMMA expresion puntoVerifyArgumento llamada2 .

    RPAREN          reduce using rule 98 (llamada2 -> COMMA expresion puntoVerifyArgumento llamada2 .)

