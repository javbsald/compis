Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal
Rule 2     programa1 -> vars programa1
Rule 3     programa1 -> empty
Rule 4     programa2 -> funciones programa2
Rule 5     programa2 -> empty
Rule 6     puntoCreateProgram -> <empty>
Rule 7     puntoChangeStateLocal -> <empty>
Rule 8     puntoPrintFinal -> <empty>
Rule 9     vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
Rule 10    vars1 -> COMMA ID puntoCreateVar vars1
Rule 11    vars1 -> empty
Rule 12    vars2 -> tipo puntoCreateVarType
Rule 13    vars2 -> tipo_graph
Rule 14    vars3 -> LBRACKET CTE_INT puntoChangeDimension RBRACKET
Rule 15    vars3 -> empty
Rule 16    puntoChangeDimension -> <empty>
Rule 17    puntoCreateVarTable -> <empty>
Rule 18    puntoCreateVarTableState -> <empty>
Rule 19    puntoCreateVar -> <empty>
Rule 20    puntoCreateVarType -> <empty>
Rule 21    puntoCreateDimension -> <empty>
Rule 22    tipo -> INT puntoCurrentType
Rule 23    tipo -> FLOAT puntoCurrentType
Rule 24    tipo -> BOOL puntoCurrentType
Rule 25    tipo -> CHAR puntoCurrentType
Rule 26    puntoCurrentType -> <empty>
Rule 27    tipo_cte -> CTE_INT puntoPushInt
Rule 28    tipo_cte -> CTE_FLOAT puntoPushFloat
Rule 29    tipo_cte -> CTE_BOOL puntoPushBool
Rule 30    tipo_cte -> CTE_CHAR puntoPushChar
Rule 31    tipo_cte -> ID puntoPushID tipo_cte1
Rule 32    tipo_cte -> llamada
Rule 33    tipo_cte1 -> LBRACKET CTE_INT RBRACKET
Rule 34    tipo_cte1 -> funciones_arr
Rule 35    tipo_cte1 -> empty
Rule 36    puntoPushInt -> <empty>
Rule 37    puntoPushFloat -> <empty>
Rule 38    puntoPushBool -> <empty>
Rule 39    puntoPushChar -> <empty>
Rule 40    puntoPushID -> <empty>
Rule 41    tipo_graph -> PIECHART
Rule 42    tipo_graph -> BARGRAPH
Rule 43    tipo_graph -> PLOTLINE
Rule 44    funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN funciones2 RPAREN bloque_modular
Rule 45    funciones1 -> VOID
Rule 46    funciones1 -> tipo
Rule 47    funciones2 -> tipo ID funciones3
Rule 48    funciones2 -> empty
Rule 49    funciones3 -> COMMA tipo ID funciones3
Rule 50    funciones3 -> empty
Rule 51    puntoChangeStateFuncion -> <empty>
Rule 52    main -> VOID MAIN LPAREN RPAREN bloque_modular
Rule 53    bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE
Rule 54    bloque_modular1 -> vars bloque_modular1
Rule 55    bloque_modular1 -> empty
Rule 56    bloque_modular2 -> estatuto bloque_modular2
Rule 57    bloque_modular2 -> empty
Rule 58    bloque -> LBLOQUE bloque1 RBLOQUE
Rule 59    bloque1 -> estatuto bloque1
Rule 60    bloque1 -> empty
Rule 61    estatuto -> asignacion
Rule 62    estatuto -> condicion
Rule 63    estatuto -> escritura
Rule 64    estatuto -> return
Rule 65    estatuto -> while
Rule 66    estatuto -> do_while
Rule 67    estatuto -> llamada SEMICOLON
Rule 68    asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
Rule 69    asignacion1 -> LBRACKET expresion RBRACKET
Rule 70    asignacion1 -> empty
Rule 71    asignacion2 -> expresion puntoCreateAsignacionQuad
Rule 72    asignacion2 -> leida
Rule 73    puntoSaveIDAsignacion -> <empty>
Rule 74    puntoCreateAsignacionQuad -> <empty>
Rule 75    leida -> INPUT LPAREN RPAREN
Rule 76    condicion -> IF LPAREN expresion RPAREN bloque condicion1
Rule 77    condicion1 -> ELSE bloque
Rule 78    condicion1 -> empty
Rule 79    escritura -> PRINT LPAREN escritura1 RPAREN puntoCreatePrintQuad SEMICOLON
Rule 80    escritura1 -> expresion
Rule 81    escritura1 -> CTE_STRING
Rule 82    puntoCreatePrintQuad -> <empty>
Rule 83    llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN
Rule 84    llamada1 -> expresion llamada2
Rule 85    llamada1 -> empty
Rule 86    llamada2 -> COMMA tipo ID llamada2
Rule 87    llamada2 -> empty
Rule 88    return -> RETURN expresion SEMICOLON
Rule 89    while -> WHILE LPAREN expresion RPAREN bloque
Rule 90    do_while -> DO bloque WHILE LPAREN expresion RPAREN
Rule 91    expresion -> compare expresion2
Rule 92    expresion2 -> AND compare
Rule 93    expresion2 -> OR compare
Rule 94    expresion2 -> empty
Rule 95    compare -> exp compare1
Rule 96    compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional
Rule 97    compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional
Rule 98    compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 99    compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 100   compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 101   compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional
Rule 102   compare1 -> empty
Rule 103   puntoOperacionRelacional -> <empty>
Rule 104   exp -> termino puntoSumaResta exp1
Rule 105   exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1
Rule 106   exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1
Rule 107   exp1 -> empty
Rule 108   puntoSumaResta -> <empty>
Rule 109   termino -> factor puntoMultDivide termino1
Rule 110   termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1
Rule 111   termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1
Rule 112   termino1 -> empty
Rule 113   puntoMultDivide -> <empty>
Rule 114   puntoPushOperador -> <empty>
Rule 115   factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
Rule 116   factor -> tipo_cte
Rule 117   factor -> MINUS tipo_cte
Rule 118   factor -> NOT tipo_cte
Rule 119   puntoPushFondoFalso -> <empty>
Rule 120   puntoPopFondoFalso -> <empty>
Rule 121   funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN
Rule 122   funciones_arr1 -> MAX
Rule 123   funciones_arr1 -> MIN
Rule 124   funciones_arr1 -> RANGE
Rule 125   funciones_arr1 -> MEDIAN
Rule 126   funciones_arr1 -> AVERAGE
Rule 127   funciones_arr1 -> IQRANGE
Rule 128   funciones_arr1 -> STDEV
Rule 129   funciones_arr1 -> VARIANCE
Rule 130   funciones_arr1 -> MODIFY
Rule 131   funciones_arr1 -> DRAW
Rule 132   empty -> <empty>

Terminals, with rules where they appear

AND                  : 92
AS                   : 9
AVERAGE              : 126
BARGRAPH             : 42
BOOL                 : 24
CALL                 : 83
CHAR                 : 25
COMMA                : 10 49 86
CTE_BOOL             : 29
CTE_CHAR             : 30
CTE_FLOAT            : 28
CTE_INT              : 14 27 33
CTE_STRING           : 81
DIVIDE               : 111
DO                   : 90
DRAW                 : 131
ELSE                 : 77
EQUALEQUAL           : 100
EQUALS               : 68
FLOAT                : 23
FUNC                 : 44
GREATERTHAN          : 96
GREATERTHANEQUAL     : 98
ID                   : 1 9 10 31 44 47 49 68 83 86
IF                   : 76
INPUT                : 75
INT                  : 22
IQRANGE              : 127
LBLOQUE              : 53 58
LBRACKET             : 14 33 69
LESSTHAN             : 97
LESSTHANEQUAL        : 99
LPAREN               : 44 52 75 76 79 83 89 90 115 121
MAIN                 : 52
MAX                  : 122
MEDIAN               : 125
MIN                  : 123
MINUS                : 106 117
MODIFY               : 130
NOT                  : 118
NOTEQUAL             : 101
OR                   : 93
PIECHART             : 41
PLOTLINE             : 43
PLUS                 : 105
PRINT                : 79
PROGRAM              : 1
PUNTO                : 83 121
RANGE                : 124
RBLOQUE              : 53 58
RBRACKET             : 14 33 69
RETURN               : 88
RPAREN               : 44 52 75 76 79 83 89 90 115 121
SEMICOLON            : 1 9 67 68 79 88
STDEV                : 128
TIMES                : 110
VAR                  : 9
VARIANCE             : 129
VOID                 : 45 52
WHILE                : 89 90
error                : 

Nonterminals, with rules where they appear

asignacion           : 61
asignacion1          : 68
asignacion2          : 68
bloque               : 76 77 89 90
bloque1              : 58 59
bloque_modular       : 44 52
bloque_modular1      : 53 54
bloque_modular2      : 53 56
compare              : 91 92 93
compare1             : 95
condicion            : 62
condicion1           : 76
do_while             : 66
empty                : 3 5 11 15 35 48 50 55 57 60 70 78 85 87 94 102 107 112
escritura            : 63
escritura1           : 79
estatuto             : 56 59
exp                  : 95 96 97 98 99 100 101
exp1                 : 104 105 106
expresion            : 69 71 76 80 84 88 89 90 115
expresion2           : 91
factor               : 109 110 111
funciones            : 4
funciones1           : 44
funciones2           : 44
funciones3           : 47 49
funciones_arr        : 34
funciones_arr1       : 121
leida                : 72
llamada              : 32 67
llamada1             : 83
llamada2             : 84 86
main                 : 1
programa             : 0
programa1            : 1 2
programa2            : 1 4
puntoChangeDimension : 14
puntoChangeStateFuncion : 44
puntoChangeStateLocal : 1
puntoCreateAsignacionQuad : 71
puntoCreateDimension : 9
puntoCreatePrintQuad : 79
puntoCreateProgram   : 1
puntoCreateVar       : 9 10
puntoCreateVarTable  : 1
puntoCreateVarTableState : 1 1 44
puntoCreateVarType   : 12
puntoCurrentType     : 22 23 24 25
puntoMultDivide      : 109 110 111
puntoOperacionRelacional : 96 97 98 99 100 101
puntoPopFondoFalso   : 115
puntoPrintFinal      : 1
puntoPushBool        : 29
puntoPushChar        : 30
puntoPushFloat       : 28
puntoPushFondoFalso  : 115
puntoPushID          : 31
puntoPushInt         : 27
puntoPushOperador    : 96 97 98 99 100 101 105 106 110 111
puntoSaveIDAsignacion : 68
puntoSumaResta       : 104 105 106
return               : 64
termino              : 104 105 106
termino1             : 109 110 111
tipo                 : 12 46 47 49 86
tipo_cte             : 116 117 118
tipo_cte1            : 31
tipo_graph           : 13
vars                 : 2 54
vars1                : 9 10
vars2                : 9
vars3                : 9
while                : 65

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal
    (6) puntoCreateProgram -> .

    SEMICOLON       reduce using rule 6 (puntoCreateProgram -> .)

    puntoCreateProgram             shift and go to state 4

state 4

    (1) programa -> PROGRAM ID puntoCreateProgram . SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON . puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal
    (17) puntoCreateVarTable -> .

    VAR             reduce using rule 17 (puntoCreateVarTable -> .)
    FUNC            reduce using rule 17 (puntoCreateVarTable -> .)
    VOID            reduce using rule 17 (puntoCreateVarTable -> .)

    puntoCreateVarTable            shift and go to state 6

state 6

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable . puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal
    (18) puntoCreateVarTableState -> .

    VAR             reduce using rule 18 (puntoCreateVarTableState -> .)
    FUNC            reduce using rule 18 (puntoCreateVarTableState -> .)
    VOID            reduce using rule 18 (puntoCreateVarTableState -> .)

    puntoCreateVarTableState       shift and go to state 7

state 7

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState . programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal
    (2) programa1 -> . vars programa1
    (3) programa1 -> . empty
    (9) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (132) empty -> .

    VAR             shift and go to state 11
    FUNC            reduce using rule 132 (empty -> .)
    VOID            reduce using rule 132 (empty -> .)

    programa1                      shift and go to state 8
    vars                           shift and go to state 9
    empty                          shift and go to state 10

state 8

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 . programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal
    (4) programa2 -> . funciones programa2
    (5) programa2 -> . empty
    (44) funciones -> . FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN funciones2 RPAREN bloque_modular
    (132) empty -> .

    FUNC            shift and go to state 15
    VOID            reduce using rule 132 (empty -> .)

    programa2                      shift and go to state 12
    funciones                      shift and go to state 13
    empty                          shift and go to state 14

state 9

    (2) programa1 -> vars . programa1
    (2) programa1 -> . vars programa1
    (3) programa1 -> . empty
    (9) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (132) empty -> .

    VAR             shift and go to state 11
    FUNC            reduce using rule 132 (empty -> .)
    VOID            reduce using rule 132 (empty -> .)

    vars                           shift and go to state 9
    programa1                      shift and go to state 16
    empty                          shift and go to state 10

state 10

    (3) programa1 -> empty .

    FUNC            reduce using rule 3 (programa1 -> empty .)
    VOID            reduce using rule 3 (programa1 -> empty .)


state 11

    (9) vars -> VAR . ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON

    ID              shift and go to state 17


state 12

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 . puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal
    (7) puntoChangeStateLocal -> .

    VOID            reduce using rule 7 (puntoChangeStateLocal -> .)

    puntoChangeStateLocal          shift and go to state 18

state 13

    (4) programa2 -> funciones . programa2
    (4) programa2 -> . funciones programa2
    (5) programa2 -> . empty
    (44) funciones -> . FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN funciones2 RPAREN bloque_modular
    (132) empty -> .

    FUNC            shift and go to state 15
    VOID            reduce using rule 132 (empty -> .)

    funciones                      shift and go to state 13
    programa2                      shift and go to state 19
    empty                          shift and go to state 14

state 14

    (5) programa2 -> empty .

    VOID            reduce using rule 5 (programa2 -> empty .)


state 15

    (44) funciones -> FUNC . funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN funciones2 RPAREN bloque_modular
    (45) funciones1 -> . VOID
    (46) funciones1 -> . tipo
    (22) tipo -> . INT puntoCurrentType
    (23) tipo -> . FLOAT puntoCurrentType
    (24) tipo -> . BOOL puntoCurrentType
    (25) tipo -> . CHAR puntoCurrentType

    VOID            shift and go to state 21
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 25
    CHAR            shift and go to state 26

    funciones1                     shift and go to state 20
    tipo                           shift and go to state 22

state 16

    (2) programa1 -> vars programa1 .

    FUNC            reduce using rule 2 (programa1 -> vars programa1 .)
    VOID            reduce using rule 2 (programa1 -> vars programa1 .)


state 17

    (9) vars -> VAR ID . puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (19) puntoCreateVar -> .

    COMMA           reduce using rule 19 (puntoCreateVar -> .)
    AS              reduce using rule 19 (puntoCreateVar -> .)

    puntoCreateVar                 shift and go to state 27

state 18

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal . puntoCreateVarTableState main puntoPrintFinal
    (18) puntoCreateVarTableState -> .

    VOID            reduce using rule 18 (puntoCreateVarTableState -> .)

    puntoCreateVarTableState       shift and go to state 28

state 19

    (4) programa2 -> funciones programa2 .

    VOID            reduce using rule 4 (programa2 -> funciones programa2 .)


state 20

    (44) funciones -> FUNC funciones1 . ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN funciones2 RPAREN bloque_modular

    ID              shift and go to state 29


state 21

    (45) funciones1 -> VOID .

    ID              reduce using rule 45 (funciones1 -> VOID .)


state 22

    (46) funciones1 -> tipo .

    ID              reduce using rule 46 (funciones1 -> tipo .)


state 23

    (22) tipo -> INT . puntoCurrentType
    (26) puntoCurrentType -> .

    ID              reduce using rule 26 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 26 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 26 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 30

state 24

    (23) tipo -> FLOAT . puntoCurrentType
    (26) puntoCurrentType -> .

    ID              reduce using rule 26 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 26 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 26 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 31

state 25

    (24) tipo -> BOOL . puntoCurrentType
    (26) puntoCurrentType -> .

    ID              reduce using rule 26 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 26 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 26 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 32

state 26

    (25) tipo -> CHAR . puntoCurrentType
    (26) puntoCurrentType -> .

    ID              reduce using rule 26 (puntoCurrentType -> .)
    LBRACKET        reduce using rule 26 (puntoCurrentType -> .)
    SEMICOLON       reduce using rule 26 (puntoCurrentType -> .)

    puntoCurrentType               shift and go to state 33

state 27

    (9) vars -> VAR ID puntoCreateVar . vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (10) vars1 -> . COMMA ID puntoCreateVar vars1
    (11) vars1 -> . empty
    (132) empty -> .

    COMMA           shift and go to state 35
    AS              reduce using rule 132 (empty -> .)

    vars1                          shift and go to state 34
    empty                          shift and go to state 36

state 28

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState . main puntoPrintFinal
    (52) main -> . VOID MAIN LPAREN RPAREN bloque_modular

    VOID            shift and go to state 38

    main                           shift and go to state 37

state 29

    (44) funciones -> FUNC funciones1 ID . puntoChangeStateFuncion puntoCreateVarTableState LPAREN funciones2 RPAREN bloque_modular
    (51) puntoChangeStateFuncion -> .

    LPAREN          reduce using rule 51 (puntoChangeStateFuncion -> .)

    puntoChangeStateFuncion        shift and go to state 39

state 30

    (22) tipo -> INT puntoCurrentType .

    ID              reduce using rule 22 (tipo -> INT puntoCurrentType .)
    LBRACKET        reduce using rule 22 (tipo -> INT puntoCurrentType .)
    SEMICOLON       reduce using rule 22 (tipo -> INT puntoCurrentType .)


state 31

    (23) tipo -> FLOAT puntoCurrentType .

    ID              reduce using rule 23 (tipo -> FLOAT puntoCurrentType .)
    LBRACKET        reduce using rule 23 (tipo -> FLOAT puntoCurrentType .)
    SEMICOLON       reduce using rule 23 (tipo -> FLOAT puntoCurrentType .)


state 32

    (24) tipo -> BOOL puntoCurrentType .

    ID              reduce using rule 24 (tipo -> BOOL puntoCurrentType .)
    LBRACKET        reduce using rule 24 (tipo -> BOOL puntoCurrentType .)
    SEMICOLON       reduce using rule 24 (tipo -> BOOL puntoCurrentType .)


state 33

    (25) tipo -> CHAR puntoCurrentType .

    ID              reduce using rule 25 (tipo -> CHAR puntoCurrentType .)
    LBRACKET        reduce using rule 25 (tipo -> CHAR puntoCurrentType .)
    SEMICOLON       reduce using rule 25 (tipo -> CHAR puntoCurrentType .)


state 34

    (9) vars -> VAR ID puntoCreateVar vars1 . AS vars2 vars3 puntoCreateDimension SEMICOLON

    AS              shift and go to state 40


state 35

    (10) vars1 -> COMMA . ID puntoCreateVar vars1

    ID              shift and go to state 41


state 36

    (11) vars1 -> empty .

    AS              reduce using rule 11 (vars1 -> empty .)


state 37

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main . puntoPrintFinal
    (8) puntoPrintFinal -> .

    $end            reduce using rule 8 (puntoPrintFinal -> .)

    puntoPrintFinal                shift and go to state 42

state 38

    (52) main -> VOID . MAIN LPAREN RPAREN bloque_modular

    MAIN            shift and go to state 43


state 39

    (44) funciones -> FUNC funciones1 ID puntoChangeStateFuncion . puntoCreateVarTableState LPAREN funciones2 RPAREN bloque_modular
    (18) puntoCreateVarTableState -> .

    LPAREN          reduce using rule 18 (puntoCreateVarTableState -> .)

    puntoCreateVarTableState       shift and go to state 44

state 40

    (9) vars -> VAR ID puntoCreateVar vars1 AS . vars2 vars3 puntoCreateDimension SEMICOLON
    (12) vars2 -> . tipo puntoCreateVarType
    (13) vars2 -> . tipo_graph
    (22) tipo -> . INT puntoCurrentType
    (23) tipo -> . FLOAT puntoCurrentType
    (24) tipo -> . BOOL puntoCurrentType
    (25) tipo -> . CHAR puntoCurrentType
    (41) tipo_graph -> . PIECHART
    (42) tipo_graph -> . BARGRAPH
    (43) tipo_graph -> . PLOTLINE

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 25
    CHAR            shift and go to state 26
    PIECHART        shift and go to state 48
    BARGRAPH        shift and go to state 49
    PLOTLINE        shift and go to state 50

    vars2                          shift and go to state 45
    tipo                           shift and go to state 46
    tipo_graph                     shift and go to state 47

state 41

    (10) vars1 -> COMMA ID . puntoCreateVar vars1
    (19) puntoCreateVar -> .

    COMMA           reduce using rule 19 (puntoCreateVar -> .)
    AS              reduce using rule 19 (puntoCreateVar -> .)

    puntoCreateVar                 shift and go to state 51

state 42

    (1) programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal .

    $end            reduce using rule 1 (programa -> PROGRAM ID puntoCreateProgram SEMICOLON puntoCreateVarTable puntoCreateVarTableState programa1 programa2 puntoChangeStateLocal puntoCreateVarTableState main puntoPrintFinal .)


state 43

    (52) main -> VOID MAIN . LPAREN RPAREN bloque_modular

    LPAREN          shift and go to state 52


state 44

    (44) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState . LPAREN funciones2 RPAREN bloque_modular

    LPAREN          shift and go to state 53


state 45

    (9) vars -> VAR ID puntoCreateVar vars1 AS vars2 . vars3 puntoCreateDimension SEMICOLON
    (14) vars3 -> . LBRACKET CTE_INT puntoChangeDimension RBRACKET
    (15) vars3 -> . empty
    (132) empty -> .

    LBRACKET        shift and go to state 55
    SEMICOLON       reduce using rule 132 (empty -> .)

    vars3                          shift and go to state 54
    empty                          shift and go to state 56

state 46

    (12) vars2 -> tipo . puntoCreateVarType
    (20) puntoCreateVarType -> .

    LBRACKET        reduce using rule 20 (puntoCreateVarType -> .)
    SEMICOLON       reduce using rule 20 (puntoCreateVarType -> .)

    puntoCreateVarType             shift and go to state 57

state 47

    (13) vars2 -> tipo_graph .

    LBRACKET        reduce using rule 13 (vars2 -> tipo_graph .)
    SEMICOLON       reduce using rule 13 (vars2 -> tipo_graph .)


state 48

    (41) tipo_graph -> PIECHART .

    LBRACKET        reduce using rule 41 (tipo_graph -> PIECHART .)
    SEMICOLON       reduce using rule 41 (tipo_graph -> PIECHART .)


state 49

    (42) tipo_graph -> BARGRAPH .

    LBRACKET        reduce using rule 42 (tipo_graph -> BARGRAPH .)
    SEMICOLON       reduce using rule 42 (tipo_graph -> BARGRAPH .)


state 50

    (43) tipo_graph -> PLOTLINE .

    LBRACKET        reduce using rule 43 (tipo_graph -> PLOTLINE .)
    SEMICOLON       reduce using rule 43 (tipo_graph -> PLOTLINE .)


state 51

    (10) vars1 -> COMMA ID puntoCreateVar . vars1
    (10) vars1 -> . COMMA ID puntoCreateVar vars1
    (11) vars1 -> . empty
    (132) empty -> .

    COMMA           shift and go to state 35
    AS              reduce using rule 132 (empty -> .)

    vars1                          shift and go to state 58
    empty                          shift and go to state 36

state 52

    (52) main -> VOID MAIN LPAREN . RPAREN bloque_modular

    RPAREN          shift and go to state 59


state 53

    (44) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN . funciones2 RPAREN bloque_modular
    (47) funciones2 -> . tipo ID funciones3
    (48) funciones2 -> . empty
    (22) tipo -> . INT puntoCurrentType
    (23) tipo -> . FLOAT puntoCurrentType
    (24) tipo -> . BOOL puntoCurrentType
    (25) tipo -> . CHAR puntoCurrentType
    (132) empty -> .

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 25
    CHAR            shift and go to state 26
    RPAREN          reduce using rule 132 (empty -> .)

    funciones2                     shift and go to state 60
    tipo                           shift and go to state 61
    empty                          shift and go to state 62

state 54

    (9) vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 . puntoCreateDimension SEMICOLON
    (21) puntoCreateDimension -> .

    SEMICOLON       reduce using rule 21 (puntoCreateDimension -> .)

    puntoCreateDimension           shift and go to state 63

state 55

    (14) vars3 -> LBRACKET . CTE_INT puntoChangeDimension RBRACKET

    CTE_INT         shift and go to state 64


state 56

    (15) vars3 -> empty .

    SEMICOLON       reduce using rule 15 (vars3 -> empty .)


state 57

    (12) vars2 -> tipo puntoCreateVarType .

    LBRACKET        reduce using rule 12 (vars2 -> tipo puntoCreateVarType .)
    SEMICOLON       reduce using rule 12 (vars2 -> tipo puntoCreateVarType .)


state 58

    (10) vars1 -> COMMA ID puntoCreateVar vars1 .

    AS              reduce using rule 10 (vars1 -> COMMA ID puntoCreateVar vars1 .)


state 59

    (52) main -> VOID MAIN LPAREN RPAREN . bloque_modular
    (53) bloque_modular -> . LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE

    LBLOQUE         shift and go to state 66

    bloque_modular                 shift and go to state 65

state 60

    (44) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN funciones2 . RPAREN bloque_modular

    RPAREN          shift and go to state 67


state 61

    (47) funciones2 -> tipo . ID funciones3

    ID              shift and go to state 68


state 62

    (48) funciones2 -> empty .

    RPAREN          reduce using rule 48 (funciones2 -> empty .)


state 63

    (9) vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension . SEMICOLON

    SEMICOLON       shift and go to state 69


state 64

    (14) vars3 -> LBRACKET CTE_INT . puntoChangeDimension RBRACKET
    (16) puntoChangeDimension -> .

    RBRACKET        reduce using rule 16 (puntoChangeDimension -> .)

    puntoChangeDimension           shift and go to state 70

state 65

    (52) main -> VOID MAIN LPAREN RPAREN bloque_modular .

    $end            reduce using rule 52 (main -> VOID MAIN LPAREN RPAREN bloque_modular .)


state 66

    (53) bloque_modular -> LBLOQUE . bloque_modular1 bloque_modular2 RBLOQUE
    (54) bloque_modular1 -> . vars bloque_modular1
    (55) bloque_modular1 -> . empty
    (9) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (132) empty -> .

    VAR             shift and go to state 11
    ID              reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    PRINT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)
    DO              reduce using rule 132 (empty -> .)
    CALL            reduce using rule 132 (empty -> .)
    RBLOQUE         reduce using rule 132 (empty -> .)

    bloque_modular1                shift and go to state 71
    vars                           shift and go to state 72
    empty                          shift and go to state 73

state 67

    (44) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN funciones2 RPAREN . bloque_modular
    (53) bloque_modular -> . LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE

    LBLOQUE         shift and go to state 66

    bloque_modular                 shift and go to state 74

state 68

    (47) funciones2 -> tipo ID . funciones3
    (49) funciones3 -> . COMMA tipo ID funciones3
    (50) funciones3 -> . empty
    (132) empty -> .

    COMMA           shift and go to state 76
    RPAREN          reduce using rule 132 (empty -> .)

    funciones3                     shift and go to state 75
    empty                          shift and go to state 77

state 69

    (9) vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .

    VAR             reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    FUNC            reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    VOID            reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    ID              reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    IF              reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    PRINT           reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    RETURN          reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    WHILE           reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    DO              reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    CALL            reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)
    RBLOQUE         reduce using rule 9 (vars -> VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON .)


state 70

    (14) vars3 -> LBRACKET CTE_INT puntoChangeDimension . RBRACKET

    RBRACKET        shift and go to state 78


state 71

    (53) bloque_modular -> LBLOQUE bloque_modular1 . bloque_modular2 RBLOQUE
    (56) bloque_modular2 -> . estatuto bloque_modular2
    (57) bloque_modular2 -> . empty
    (61) estatuto -> . asignacion
    (62) estatuto -> . condicion
    (63) estatuto -> . escritura
    (64) estatuto -> . return
    (65) estatuto -> . while
    (66) estatuto -> . do_while
    (67) estatuto -> . llamada SEMICOLON
    (132) empty -> .
    (68) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (76) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (79) escritura -> . PRINT LPAREN escritura1 RPAREN puntoCreatePrintQuad SEMICOLON
    (88) return -> . RETURN expresion SEMICOLON
    (89) while -> . WHILE LPAREN expresion RPAREN bloque
    (90) do_while -> . DO bloque WHILE LPAREN expresion RPAREN
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    RBLOQUE         reduce using rule 132 (empty -> .)
    ID              shift and go to state 89
    IF              shift and go to state 90
    PRINT           shift and go to state 91
    RETURN          shift and go to state 92
    WHILE           shift and go to state 93
    DO              shift and go to state 94
    CALL            shift and go to state 95

    bloque_modular2                shift and go to state 79
    estatuto                       shift and go to state 80
    empty                          shift and go to state 81
    asignacion                     shift and go to state 82
    condicion                      shift and go to state 83
    escritura                      shift and go to state 84
    return                         shift and go to state 85
    while                          shift and go to state 86
    do_while                       shift and go to state 87
    llamada                        shift and go to state 88

state 72

    (54) bloque_modular1 -> vars . bloque_modular1
    (54) bloque_modular1 -> . vars bloque_modular1
    (55) bloque_modular1 -> . empty
    (9) vars -> . VAR ID puntoCreateVar vars1 AS vars2 vars3 puntoCreateDimension SEMICOLON
    (132) empty -> .

    VAR             shift and go to state 11
    ID              reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    PRINT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)
    DO              reduce using rule 132 (empty -> .)
    CALL            reduce using rule 132 (empty -> .)
    RBLOQUE         reduce using rule 132 (empty -> .)

    vars                           shift and go to state 72
    bloque_modular1                shift and go to state 96
    empty                          shift and go to state 73

state 73

    (55) bloque_modular1 -> empty .

    ID              reduce using rule 55 (bloque_modular1 -> empty .)
    IF              reduce using rule 55 (bloque_modular1 -> empty .)
    PRINT           reduce using rule 55 (bloque_modular1 -> empty .)
    RETURN          reduce using rule 55 (bloque_modular1 -> empty .)
    WHILE           reduce using rule 55 (bloque_modular1 -> empty .)
    DO              reduce using rule 55 (bloque_modular1 -> empty .)
    CALL            reduce using rule 55 (bloque_modular1 -> empty .)
    RBLOQUE         reduce using rule 55 (bloque_modular1 -> empty .)


state 74

    (44) funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN funciones2 RPAREN bloque_modular .

    FUNC            reduce using rule 44 (funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN funciones2 RPAREN bloque_modular .)
    VOID            reduce using rule 44 (funciones -> FUNC funciones1 ID puntoChangeStateFuncion puntoCreateVarTableState LPAREN funciones2 RPAREN bloque_modular .)


state 75

    (47) funciones2 -> tipo ID funciones3 .

    RPAREN          reduce using rule 47 (funciones2 -> tipo ID funciones3 .)


state 76

    (49) funciones3 -> COMMA . tipo ID funciones3
    (22) tipo -> . INT puntoCurrentType
    (23) tipo -> . FLOAT puntoCurrentType
    (24) tipo -> . BOOL puntoCurrentType
    (25) tipo -> . CHAR puntoCurrentType

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 25
    CHAR            shift and go to state 26

    tipo                           shift and go to state 97

state 77

    (50) funciones3 -> empty .

    RPAREN          reduce using rule 50 (funciones3 -> empty .)


state 78

    (14) vars3 -> LBRACKET CTE_INT puntoChangeDimension RBRACKET .

    SEMICOLON       reduce using rule 14 (vars3 -> LBRACKET CTE_INT puntoChangeDimension RBRACKET .)


state 79

    (53) bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 . RBLOQUE

    RBLOQUE         shift and go to state 98


state 80

    (56) bloque_modular2 -> estatuto . bloque_modular2
    (56) bloque_modular2 -> . estatuto bloque_modular2
    (57) bloque_modular2 -> . empty
    (61) estatuto -> . asignacion
    (62) estatuto -> . condicion
    (63) estatuto -> . escritura
    (64) estatuto -> . return
    (65) estatuto -> . while
    (66) estatuto -> . do_while
    (67) estatuto -> . llamada SEMICOLON
    (132) empty -> .
    (68) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (76) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (79) escritura -> . PRINT LPAREN escritura1 RPAREN puntoCreatePrintQuad SEMICOLON
    (88) return -> . RETURN expresion SEMICOLON
    (89) while -> . WHILE LPAREN expresion RPAREN bloque
    (90) do_while -> . DO bloque WHILE LPAREN expresion RPAREN
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    RBLOQUE         reduce using rule 132 (empty -> .)
    ID              shift and go to state 89
    IF              shift and go to state 90
    PRINT           shift and go to state 91
    RETURN          shift and go to state 92
    WHILE           shift and go to state 93
    DO              shift and go to state 94
    CALL            shift and go to state 95

    estatuto                       shift and go to state 80
    bloque_modular2                shift and go to state 99
    empty                          shift and go to state 81
    asignacion                     shift and go to state 82
    condicion                      shift and go to state 83
    escritura                      shift and go to state 84
    return                         shift and go to state 85
    while                          shift and go to state 86
    do_while                       shift and go to state 87
    llamada                        shift and go to state 88

state 81

    (57) bloque_modular2 -> empty .

    RBLOQUE         reduce using rule 57 (bloque_modular2 -> empty .)


state 82

    (61) estatuto -> asignacion .

    ID              reduce using rule 61 (estatuto -> asignacion .)
    IF              reduce using rule 61 (estatuto -> asignacion .)
    PRINT           reduce using rule 61 (estatuto -> asignacion .)
    RETURN          reduce using rule 61 (estatuto -> asignacion .)
    WHILE           reduce using rule 61 (estatuto -> asignacion .)
    DO              reduce using rule 61 (estatuto -> asignacion .)
    CALL            reduce using rule 61 (estatuto -> asignacion .)
    RBLOQUE         reduce using rule 61 (estatuto -> asignacion .)


state 83

    (62) estatuto -> condicion .

    ID              reduce using rule 62 (estatuto -> condicion .)
    IF              reduce using rule 62 (estatuto -> condicion .)
    PRINT           reduce using rule 62 (estatuto -> condicion .)
    RETURN          reduce using rule 62 (estatuto -> condicion .)
    WHILE           reduce using rule 62 (estatuto -> condicion .)
    DO              reduce using rule 62 (estatuto -> condicion .)
    CALL            reduce using rule 62 (estatuto -> condicion .)
    RBLOQUE         reduce using rule 62 (estatuto -> condicion .)


state 84

    (63) estatuto -> escritura .

    ID              reduce using rule 63 (estatuto -> escritura .)
    IF              reduce using rule 63 (estatuto -> escritura .)
    PRINT           reduce using rule 63 (estatuto -> escritura .)
    RETURN          reduce using rule 63 (estatuto -> escritura .)
    WHILE           reduce using rule 63 (estatuto -> escritura .)
    DO              reduce using rule 63 (estatuto -> escritura .)
    CALL            reduce using rule 63 (estatuto -> escritura .)
    RBLOQUE         reduce using rule 63 (estatuto -> escritura .)


state 85

    (64) estatuto -> return .

    ID              reduce using rule 64 (estatuto -> return .)
    IF              reduce using rule 64 (estatuto -> return .)
    PRINT           reduce using rule 64 (estatuto -> return .)
    RETURN          reduce using rule 64 (estatuto -> return .)
    WHILE           reduce using rule 64 (estatuto -> return .)
    DO              reduce using rule 64 (estatuto -> return .)
    CALL            reduce using rule 64 (estatuto -> return .)
    RBLOQUE         reduce using rule 64 (estatuto -> return .)


state 86

    (65) estatuto -> while .

    ID              reduce using rule 65 (estatuto -> while .)
    IF              reduce using rule 65 (estatuto -> while .)
    PRINT           reduce using rule 65 (estatuto -> while .)
    RETURN          reduce using rule 65 (estatuto -> while .)
    WHILE           reduce using rule 65 (estatuto -> while .)
    DO              reduce using rule 65 (estatuto -> while .)
    CALL            reduce using rule 65 (estatuto -> while .)
    RBLOQUE         reduce using rule 65 (estatuto -> while .)


state 87

    (66) estatuto -> do_while .

    ID              reduce using rule 66 (estatuto -> do_while .)
    IF              reduce using rule 66 (estatuto -> do_while .)
    PRINT           reduce using rule 66 (estatuto -> do_while .)
    RETURN          reduce using rule 66 (estatuto -> do_while .)
    WHILE           reduce using rule 66 (estatuto -> do_while .)
    DO              reduce using rule 66 (estatuto -> do_while .)
    CALL            reduce using rule 66 (estatuto -> do_while .)
    RBLOQUE         reduce using rule 66 (estatuto -> do_while .)


state 88

    (67) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 100


state 89

    (68) asignacion -> ID . puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (73) puntoSaveIDAsignacion -> .

    LBRACKET        reduce using rule 73 (puntoSaveIDAsignacion -> .)
    EQUALS          reduce using rule 73 (puntoSaveIDAsignacion -> .)

    puntoSaveIDAsignacion          shift and go to state 101

state 90

    (76) condicion -> IF . LPAREN expresion RPAREN bloque condicion1

    LPAREN          shift and go to state 102


state 91

    (79) escritura -> PRINT . LPAREN escritura1 RPAREN puntoCreatePrintQuad SEMICOLON

    LPAREN          shift and go to state 103


state 92

    (88) return -> RETURN . expresion SEMICOLON
    (91) expresion -> . compare expresion2
    (95) compare -> . exp compare1
    (104) exp -> . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    expresion                      shift and go to state 104
    compare                        shift and go to state 105
    exp                            shift and go to state 106
    termino                        shift and go to state 107
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 93

    (89) while -> WHILE . LPAREN expresion RPAREN bloque

    LPAREN          shift and go to state 119


state 94

    (90) do_while -> DO . bloque WHILE LPAREN expresion RPAREN
    (58) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 121

    bloque                         shift and go to state 120

state 95

    (83) llamada -> CALL . PUNTO ID LPAREN llamada1 RPAREN

    PUNTO           shift and go to state 122


state 96

    (54) bloque_modular1 -> vars bloque_modular1 .

    ID              reduce using rule 54 (bloque_modular1 -> vars bloque_modular1 .)
    IF              reduce using rule 54 (bloque_modular1 -> vars bloque_modular1 .)
    PRINT           reduce using rule 54 (bloque_modular1 -> vars bloque_modular1 .)
    RETURN          reduce using rule 54 (bloque_modular1 -> vars bloque_modular1 .)
    WHILE           reduce using rule 54 (bloque_modular1 -> vars bloque_modular1 .)
    DO              reduce using rule 54 (bloque_modular1 -> vars bloque_modular1 .)
    CALL            reduce using rule 54 (bloque_modular1 -> vars bloque_modular1 .)
    RBLOQUE         reduce using rule 54 (bloque_modular1 -> vars bloque_modular1 .)


state 97

    (49) funciones3 -> COMMA tipo . ID funciones3

    ID              shift and go to state 123


state 98

    (53) bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .

    $end            reduce using rule 53 (bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .)
    FUNC            reduce using rule 53 (bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .)
    VOID            reduce using rule 53 (bloque_modular -> LBLOQUE bloque_modular1 bloque_modular2 RBLOQUE .)


state 99

    (56) bloque_modular2 -> estatuto bloque_modular2 .

    RBLOQUE         reduce using rule 56 (bloque_modular2 -> estatuto bloque_modular2 .)


state 100

    (67) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 67 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 67 (estatuto -> llamada SEMICOLON .)
    PRINT           reduce using rule 67 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 67 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 67 (estatuto -> llamada SEMICOLON .)
    DO              reduce using rule 67 (estatuto -> llamada SEMICOLON .)
    CALL            reduce using rule 67 (estatuto -> llamada SEMICOLON .)
    RBLOQUE         reduce using rule 67 (estatuto -> llamada SEMICOLON .)


state 101

    (68) asignacion -> ID puntoSaveIDAsignacion . asignacion1 EQUALS asignacion2 SEMICOLON
    (69) asignacion1 -> . LBRACKET expresion RBRACKET
    (70) asignacion1 -> . empty
    (132) empty -> .

    LBRACKET        shift and go to state 125
    EQUALS          reduce using rule 132 (empty -> .)

    asignacion1                    shift and go to state 124
    empty                          shift and go to state 126

state 102

    (76) condicion -> IF LPAREN . expresion RPAREN bloque condicion1
    (91) expresion -> . compare expresion2
    (95) compare -> . exp compare1
    (104) exp -> . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    expresion                      shift and go to state 127
    compare                        shift and go to state 105
    exp                            shift and go to state 106
    termino                        shift and go to state 107
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 103

    (79) escritura -> PRINT LPAREN . escritura1 RPAREN puntoCreatePrintQuad SEMICOLON
    (80) escritura1 -> . expresion
    (81) escritura1 -> . CTE_STRING
    (91) expresion -> . compare expresion2
    (95) compare -> . exp compare1
    (104) exp -> . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    CTE_STRING      shift and go to state 130
    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    escritura1                     shift and go to state 128
    expresion                      shift and go to state 129
    compare                        shift and go to state 105
    exp                            shift and go to state 106
    termino                        shift and go to state 107
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 104

    (88) return -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 131


state 105

    (91) expresion -> compare . expresion2
    (92) expresion2 -> . AND compare
    (93) expresion2 -> . OR compare
    (94) expresion2 -> . empty
    (132) empty -> .

    AND             shift and go to state 133
    OR              shift and go to state 134
    SEMICOLON       reduce using rule 132 (empty -> .)
    RPAREN          reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)

    expresion2                     shift and go to state 132
    empty                          shift and go to state 135

state 106

    (95) compare -> exp . compare1
    (96) compare1 -> . GREATERTHAN puntoPushOperador exp puntoOperacionRelacional
    (97) compare1 -> . LESSTHAN puntoPushOperador exp puntoOperacionRelacional
    (98) compare1 -> . GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
    (99) compare1 -> . LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional
    (100) compare1 -> . EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional
    (101) compare1 -> . NOTEQUAL puntoPushOperador exp puntoOperacionRelacional
    (102) compare1 -> . empty
    (132) empty -> .

    GREATERTHAN     shift and go to state 137
    LESSTHAN        shift and go to state 138
    GREATERTHANEQUAL shift and go to state 139
    LESSTHANEQUAL   shift and go to state 140
    EQUALEQUAL      shift and go to state 141
    NOTEQUAL        shift and go to state 142
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)
    RPAREN          reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)

    compare1                       shift and go to state 136
    empty                          shift and go to state 143

state 107

    (104) exp -> termino . puntoSumaResta exp1
    (108) puntoSumaResta -> .

    PLUS            reduce using rule 108 (puntoSumaResta -> .)
    MINUS           reduce using rule 108 (puntoSumaResta -> .)
    GREATERTHAN     reduce using rule 108 (puntoSumaResta -> .)
    LESSTHAN        reduce using rule 108 (puntoSumaResta -> .)
    GREATERTHANEQUAL reduce using rule 108 (puntoSumaResta -> .)
    LESSTHANEQUAL   reduce using rule 108 (puntoSumaResta -> .)
    EQUALEQUAL      reduce using rule 108 (puntoSumaResta -> .)
    NOTEQUAL        reduce using rule 108 (puntoSumaResta -> .)
    AND             reduce using rule 108 (puntoSumaResta -> .)
    OR              reduce using rule 108 (puntoSumaResta -> .)
    SEMICOLON       reduce using rule 108 (puntoSumaResta -> .)
    RPAREN          reduce using rule 108 (puntoSumaResta -> .)
    RBRACKET        reduce using rule 108 (puntoSumaResta -> .)
    COMMA           reduce using rule 108 (puntoSumaResta -> .)

    puntoSumaResta                 shift and go to state 144

state 108

    (109) termino -> factor . puntoMultDivide termino1
    (113) puntoMultDivide -> .

    TIMES           reduce using rule 113 (puntoMultDivide -> .)
    DIVIDE          reduce using rule 113 (puntoMultDivide -> .)
    PLUS            reduce using rule 113 (puntoMultDivide -> .)
    MINUS           reduce using rule 113 (puntoMultDivide -> .)
    GREATERTHAN     reduce using rule 113 (puntoMultDivide -> .)
    LESSTHAN        reduce using rule 113 (puntoMultDivide -> .)
    GREATERTHANEQUAL reduce using rule 113 (puntoMultDivide -> .)
    LESSTHANEQUAL   reduce using rule 113 (puntoMultDivide -> .)
    EQUALEQUAL      reduce using rule 113 (puntoMultDivide -> .)
    NOTEQUAL        reduce using rule 113 (puntoMultDivide -> .)
    AND             reduce using rule 113 (puntoMultDivide -> .)
    OR              reduce using rule 113 (puntoMultDivide -> .)
    SEMICOLON       reduce using rule 113 (puntoMultDivide -> .)
    RPAREN          reduce using rule 113 (puntoMultDivide -> .)
    RBRACKET        reduce using rule 113 (puntoMultDivide -> .)
    COMMA           reduce using rule 113 (puntoMultDivide -> .)

    puntoMultDivide                shift and go to state 145

state 109

    (115) factor -> LPAREN . puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (119) puntoPushFondoFalso -> .

    LPAREN          reduce using rule 119 (puntoPushFondoFalso -> .)
    MINUS           reduce using rule 119 (puntoPushFondoFalso -> .)
    NOT             reduce using rule 119 (puntoPushFondoFalso -> .)
    CTE_INT         reduce using rule 119 (puntoPushFondoFalso -> .)
    CTE_FLOAT       reduce using rule 119 (puntoPushFondoFalso -> .)
    CTE_BOOL        reduce using rule 119 (puntoPushFondoFalso -> .)
    CTE_CHAR        reduce using rule 119 (puntoPushFondoFalso -> .)
    ID              reduce using rule 119 (puntoPushFondoFalso -> .)
    CALL            reduce using rule 119 (puntoPushFondoFalso -> .)

    puntoPushFondoFalso            shift and go to state 146

state 110

    (116) factor -> tipo_cte .

    TIMES           reduce using rule 116 (factor -> tipo_cte .)
    DIVIDE          reduce using rule 116 (factor -> tipo_cte .)
    PLUS            reduce using rule 116 (factor -> tipo_cte .)
    MINUS           reduce using rule 116 (factor -> tipo_cte .)
    GREATERTHAN     reduce using rule 116 (factor -> tipo_cte .)
    LESSTHAN        reduce using rule 116 (factor -> tipo_cte .)
    GREATERTHANEQUAL reduce using rule 116 (factor -> tipo_cte .)
    LESSTHANEQUAL   reduce using rule 116 (factor -> tipo_cte .)
    EQUALEQUAL      reduce using rule 116 (factor -> tipo_cte .)
    NOTEQUAL        reduce using rule 116 (factor -> tipo_cte .)
    AND             reduce using rule 116 (factor -> tipo_cte .)
    OR              reduce using rule 116 (factor -> tipo_cte .)
    SEMICOLON       reduce using rule 116 (factor -> tipo_cte .)
    RPAREN          reduce using rule 116 (factor -> tipo_cte .)
    RBRACKET        reduce using rule 116 (factor -> tipo_cte .)
    COMMA           reduce using rule 116 (factor -> tipo_cte .)


state 111

    (117) factor -> MINUS . tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    tipo_cte                       shift and go to state 147
    llamada                        shift and go to state 118

state 112

    (118) factor -> NOT . tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    tipo_cte                       shift and go to state 148
    llamada                        shift and go to state 118

state 113

    (27) tipo_cte -> CTE_INT . puntoPushInt
    (36) puntoPushInt -> .

    TIMES           reduce using rule 36 (puntoPushInt -> .)
    DIVIDE          reduce using rule 36 (puntoPushInt -> .)
    PLUS            reduce using rule 36 (puntoPushInt -> .)
    MINUS           reduce using rule 36 (puntoPushInt -> .)
    GREATERTHAN     reduce using rule 36 (puntoPushInt -> .)
    LESSTHAN        reduce using rule 36 (puntoPushInt -> .)
    GREATERTHANEQUAL reduce using rule 36 (puntoPushInt -> .)
    LESSTHANEQUAL   reduce using rule 36 (puntoPushInt -> .)
    EQUALEQUAL      reduce using rule 36 (puntoPushInt -> .)
    NOTEQUAL        reduce using rule 36 (puntoPushInt -> .)
    AND             reduce using rule 36 (puntoPushInt -> .)
    OR              reduce using rule 36 (puntoPushInt -> .)
    SEMICOLON       reduce using rule 36 (puntoPushInt -> .)
    RPAREN          reduce using rule 36 (puntoPushInt -> .)
    RBRACKET        reduce using rule 36 (puntoPushInt -> .)
    COMMA           reduce using rule 36 (puntoPushInt -> .)

    puntoPushInt                   shift and go to state 149

state 114

    (28) tipo_cte -> CTE_FLOAT . puntoPushFloat
    (37) puntoPushFloat -> .

    TIMES           reduce using rule 37 (puntoPushFloat -> .)
    DIVIDE          reduce using rule 37 (puntoPushFloat -> .)
    PLUS            reduce using rule 37 (puntoPushFloat -> .)
    MINUS           reduce using rule 37 (puntoPushFloat -> .)
    GREATERTHAN     reduce using rule 37 (puntoPushFloat -> .)
    LESSTHAN        reduce using rule 37 (puntoPushFloat -> .)
    GREATERTHANEQUAL reduce using rule 37 (puntoPushFloat -> .)
    LESSTHANEQUAL   reduce using rule 37 (puntoPushFloat -> .)
    EQUALEQUAL      reduce using rule 37 (puntoPushFloat -> .)
    NOTEQUAL        reduce using rule 37 (puntoPushFloat -> .)
    AND             reduce using rule 37 (puntoPushFloat -> .)
    OR              reduce using rule 37 (puntoPushFloat -> .)
    SEMICOLON       reduce using rule 37 (puntoPushFloat -> .)
    RPAREN          reduce using rule 37 (puntoPushFloat -> .)
    RBRACKET        reduce using rule 37 (puntoPushFloat -> .)
    COMMA           reduce using rule 37 (puntoPushFloat -> .)

    puntoPushFloat                 shift and go to state 150

state 115

    (29) tipo_cte -> CTE_BOOL . puntoPushBool
    (38) puntoPushBool -> .

    TIMES           reduce using rule 38 (puntoPushBool -> .)
    DIVIDE          reduce using rule 38 (puntoPushBool -> .)
    PLUS            reduce using rule 38 (puntoPushBool -> .)
    MINUS           reduce using rule 38 (puntoPushBool -> .)
    GREATERTHAN     reduce using rule 38 (puntoPushBool -> .)
    LESSTHAN        reduce using rule 38 (puntoPushBool -> .)
    GREATERTHANEQUAL reduce using rule 38 (puntoPushBool -> .)
    LESSTHANEQUAL   reduce using rule 38 (puntoPushBool -> .)
    EQUALEQUAL      reduce using rule 38 (puntoPushBool -> .)
    NOTEQUAL        reduce using rule 38 (puntoPushBool -> .)
    AND             reduce using rule 38 (puntoPushBool -> .)
    OR              reduce using rule 38 (puntoPushBool -> .)
    SEMICOLON       reduce using rule 38 (puntoPushBool -> .)
    RPAREN          reduce using rule 38 (puntoPushBool -> .)
    RBRACKET        reduce using rule 38 (puntoPushBool -> .)
    COMMA           reduce using rule 38 (puntoPushBool -> .)

    puntoPushBool                  shift and go to state 151

state 116

    (30) tipo_cte -> CTE_CHAR . puntoPushChar
    (39) puntoPushChar -> .

    TIMES           reduce using rule 39 (puntoPushChar -> .)
    DIVIDE          reduce using rule 39 (puntoPushChar -> .)
    PLUS            reduce using rule 39 (puntoPushChar -> .)
    MINUS           reduce using rule 39 (puntoPushChar -> .)
    GREATERTHAN     reduce using rule 39 (puntoPushChar -> .)
    LESSTHAN        reduce using rule 39 (puntoPushChar -> .)
    GREATERTHANEQUAL reduce using rule 39 (puntoPushChar -> .)
    LESSTHANEQUAL   reduce using rule 39 (puntoPushChar -> .)
    EQUALEQUAL      reduce using rule 39 (puntoPushChar -> .)
    NOTEQUAL        reduce using rule 39 (puntoPushChar -> .)
    AND             reduce using rule 39 (puntoPushChar -> .)
    OR              reduce using rule 39 (puntoPushChar -> .)
    SEMICOLON       reduce using rule 39 (puntoPushChar -> .)
    RPAREN          reduce using rule 39 (puntoPushChar -> .)
    RBRACKET        reduce using rule 39 (puntoPushChar -> .)
    COMMA           reduce using rule 39 (puntoPushChar -> .)

    puntoPushChar                  shift and go to state 152

state 117

    (31) tipo_cte -> ID . puntoPushID tipo_cte1
    (40) puntoPushID -> .

    LBRACKET        reduce using rule 40 (puntoPushID -> .)
    PUNTO           reduce using rule 40 (puntoPushID -> .)
    TIMES           reduce using rule 40 (puntoPushID -> .)
    DIVIDE          reduce using rule 40 (puntoPushID -> .)
    PLUS            reduce using rule 40 (puntoPushID -> .)
    MINUS           reduce using rule 40 (puntoPushID -> .)
    GREATERTHAN     reduce using rule 40 (puntoPushID -> .)
    LESSTHAN        reduce using rule 40 (puntoPushID -> .)
    GREATERTHANEQUAL reduce using rule 40 (puntoPushID -> .)
    LESSTHANEQUAL   reduce using rule 40 (puntoPushID -> .)
    EQUALEQUAL      reduce using rule 40 (puntoPushID -> .)
    NOTEQUAL        reduce using rule 40 (puntoPushID -> .)
    AND             reduce using rule 40 (puntoPushID -> .)
    OR              reduce using rule 40 (puntoPushID -> .)
    SEMICOLON       reduce using rule 40 (puntoPushID -> .)
    RPAREN          reduce using rule 40 (puntoPushID -> .)
    RBRACKET        reduce using rule 40 (puntoPushID -> .)
    COMMA           reduce using rule 40 (puntoPushID -> .)

    puntoPushID                    shift and go to state 153

state 118

    (32) tipo_cte -> llamada .

    TIMES           reduce using rule 32 (tipo_cte -> llamada .)
    DIVIDE          reduce using rule 32 (tipo_cte -> llamada .)
    PLUS            reduce using rule 32 (tipo_cte -> llamada .)
    MINUS           reduce using rule 32 (tipo_cte -> llamada .)
    GREATERTHAN     reduce using rule 32 (tipo_cte -> llamada .)
    LESSTHAN        reduce using rule 32 (tipo_cte -> llamada .)
    GREATERTHANEQUAL reduce using rule 32 (tipo_cte -> llamada .)
    LESSTHANEQUAL   reduce using rule 32 (tipo_cte -> llamada .)
    EQUALEQUAL      reduce using rule 32 (tipo_cte -> llamada .)
    NOTEQUAL        reduce using rule 32 (tipo_cte -> llamada .)
    AND             reduce using rule 32 (tipo_cte -> llamada .)
    OR              reduce using rule 32 (tipo_cte -> llamada .)
    SEMICOLON       reduce using rule 32 (tipo_cte -> llamada .)
    RPAREN          reduce using rule 32 (tipo_cte -> llamada .)
    RBRACKET        reduce using rule 32 (tipo_cte -> llamada .)
    COMMA           reduce using rule 32 (tipo_cte -> llamada .)


state 119

    (89) while -> WHILE LPAREN . expresion RPAREN bloque
    (91) expresion -> . compare expresion2
    (95) compare -> . exp compare1
    (104) exp -> . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    expresion                      shift and go to state 154
    compare                        shift and go to state 105
    exp                            shift and go to state 106
    termino                        shift and go to state 107
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 120

    (90) do_while -> DO bloque . WHILE LPAREN expresion RPAREN

    WHILE           shift and go to state 155


state 121

    (58) bloque -> LBLOQUE . bloque1 RBLOQUE
    (59) bloque1 -> . estatuto bloque1
    (60) bloque1 -> . empty
    (61) estatuto -> . asignacion
    (62) estatuto -> . condicion
    (63) estatuto -> . escritura
    (64) estatuto -> . return
    (65) estatuto -> . while
    (66) estatuto -> . do_while
    (67) estatuto -> . llamada SEMICOLON
    (132) empty -> .
    (68) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (76) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (79) escritura -> . PRINT LPAREN escritura1 RPAREN puntoCreatePrintQuad SEMICOLON
    (88) return -> . RETURN expresion SEMICOLON
    (89) while -> . WHILE LPAREN expresion RPAREN bloque
    (90) do_while -> . DO bloque WHILE LPAREN expresion RPAREN
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    RBLOQUE         reduce using rule 132 (empty -> .)
    ID              shift and go to state 89
    IF              shift and go to state 90
    PRINT           shift and go to state 91
    RETURN          shift and go to state 92
    WHILE           shift and go to state 93
    DO              shift and go to state 94
    CALL            shift and go to state 95

    bloque1                        shift and go to state 156
    estatuto                       shift and go to state 157
    empty                          shift and go to state 158
    asignacion                     shift and go to state 82
    condicion                      shift and go to state 83
    escritura                      shift and go to state 84
    return                         shift and go to state 85
    while                          shift and go to state 86
    do_while                       shift and go to state 87
    llamada                        shift and go to state 88

state 122

    (83) llamada -> CALL PUNTO . ID LPAREN llamada1 RPAREN

    ID              shift and go to state 159


state 123

    (49) funciones3 -> COMMA tipo ID . funciones3
    (49) funciones3 -> . COMMA tipo ID funciones3
    (50) funciones3 -> . empty
    (132) empty -> .

    COMMA           shift and go to state 76
    RPAREN          reduce using rule 132 (empty -> .)

    funciones3                     shift and go to state 160
    empty                          shift and go to state 77

state 124

    (68) asignacion -> ID puntoSaveIDAsignacion asignacion1 . EQUALS asignacion2 SEMICOLON

    EQUALS          shift and go to state 161


state 125

    (69) asignacion1 -> LBRACKET . expresion RBRACKET
    (91) expresion -> . compare expresion2
    (95) compare -> . exp compare1
    (104) exp -> . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    expresion                      shift and go to state 162
    compare                        shift and go to state 105
    exp                            shift and go to state 106
    termino                        shift and go to state 107
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 126

    (70) asignacion1 -> empty .

    EQUALS          reduce using rule 70 (asignacion1 -> empty .)


state 127

    (76) condicion -> IF LPAREN expresion . RPAREN bloque condicion1

    RPAREN          shift and go to state 163


state 128

    (79) escritura -> PRINT LPAREN escritura1 . RPAREN puntoCreatePrintQuad SEMICOLON

    RPAREN          shift and go to state 164


state 129

    (80) escritura1 -> expresion .

    RPAREN          reduce using rule 80 (escritura1 -> expresion .)


state 130

    (81) escritura1 -> CTE_STRING .

    RPAREN          reduce using rule 81 (escritura1 -> CTE_STRING .)


state 131

    (88) return -> RETURN expresion SEMICOLON .

    ID              reduce using rule 88 (return -> RETURN expresion SEMICOLON .)
    IF              reduce using rule 88 (return -> RETURN expresion SEMICOLON .)
    PRINT           reduce using rule 88 (return -> RETURN expresion SEMICOLON .)
    RETURN          reduce using rule 88 (return -> RETURN expresion SEMICOLON .)
    WHILE           reduce using rule 88 (return -> RETURN expresion SEMICOLON .)
    DO              reduce using rule 88 (return -> RETURN expresion SEMICOLON .)
    CALL            reduce using rule 88 (return -> RETURN expresion SEMICOLON .)
    RBLOQUE         reduce using rule 88 (return -> RETURN expresion SEMICOLON .)


state 132

    (91) expresion -> compare expresion2 .

    SEMICOLON       reduce using rule 91 (expresion -> compare expresion2 .)
    RPAREN          reduce using rule 91 (expresion -> compare expresion2 .)
    RBRACKET        reduce using rule 91 (expresion -> compare expresion2 .)
    COMMA           reduce using rule 91 (expresion -> compare expresion2 .)


state 133

    (92) expresion2 -> AND . compare
    (95) compare -> . exp compare1
    (104) exp -> . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    compare                        shift and go to state 165
    exp                            shift and go to state 106
    termino                        shift and go to state 107
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 134

    (93) expresion2 -> OR . compare
    (95) compare -> . exp compare1
    (104) exp -> . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    compare                        shift and go to state 166
    exp                            shift and go to state 106
    termino                        shift and go to state 107
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 135

    (94) expresion2 -> empty .

    SEMICOLON       reduce using rule 94 (expresion2 -> empty .)
    RPAREN          reduce using rule 94 (expresion2 -> empty .)
    RBRACKET        reduce using rule 94 (expresion2 -> empty .)
    COMMA           reduce using rule 94 (expresion2 -> empty .)


state 136

    (95) compare -> exp compare1 .

    AND             reduce using rule 95 (compare -> exp compare1 .)
    OR              reduce using rule 95 (compare -> exp compare1 .)
    SEMICOLON       reduce using rule 95 (compare -> exp compare1 .)
    RPAREN          reduce using rule 95 (compare -> exp compare1 .)
    RBRACKET        reduce using rule 95 (compare -> exp compare1 .)
    COMMA           reduce using rule 95 (compare -> exp compare1 .)


state 137

    (96) compare1 -> GREATERTHAN . puntoPushOperador exp puntoOperacionRelacional
    (114) puntoPushOperador -> .

    LPAREN          reduce using rule 114 (puntoPushOperador -> .)
    MINUS           reduce using rule 114 (puntoPushOperador -> .)
    NOT             reduce using rule 114 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 114 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 114 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 114 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 114 (puntoPushOperador -> .)
    ID              reduce using rule 114 (puntoPushOperador -> .)
    CALL            reduce using rule 114 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 167

state 138

    (97) compare1 -> LESSTHAN . puntoPushOperador exp puntoOperacionRelacional
    (114) puntoPushOperador -> .

    LPAREN          reduce using rule 114 (puntoPushOperador -> .)
    MINUS           reduce using rule 114 (puntoPushOperador -> .)
    NOT             reduce using rule 114 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 114 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 114 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 114 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 114 (puntoPushOperador -> .)
    ID              reduce using rule 114 (puntoPushOperador -> .)
    CALL            reduce using rule 114 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 168

state 139

    (98) compare1 -> GREATERTHANEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (114) puntoPushOperador -> .

    LPAREN          reduce using rule 114 (puntoPushOperador -> .)
    MINUS           reduce using rule 114 (puntoPushOperador -> .)
    NOT             reduce using rule 114 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 114 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 114 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 114 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 114 (puntoPushOperador -> .)
    ID              reduce using rule 114 (puntoPushOperador -> .)
    CALL            reduce using rule 114 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 169

state 140

    (99) compare1 -> LESSTHANEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (114) puntoPushOperador -> .

    LPAREN          reduce using rule 114 (puntoPushOperador -> .)
    MINUS           reduce using rule 114 (puntoPushOperador -> .)
    NOT             reduce using rule 114 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 114 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 114 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 114 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 114 (puntoPushOperador -> .)
    ID              reduce using rule 114 (puntoPushOperador -> .)
    CALL            reduce using rule 114 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 170

state 141

    (100) compare1 -> EQUALEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (114) puntoPushOperador -> .

    LPAREN          reduce using rule 114 (puntoPushOperador -> .)
    MINUS           reduce using rule 114 (puntoPushOperador -> .)
    NOT             reduce using rule 114 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 114 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 114 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 114 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 114 (puntoPushOperador -> .)
    ID              reduce using rule 114 (puntoPushOperador -> .)
    CALL            reduce using rule 114 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 171

state 142

    (101) compare1 -> NOTEQUAL . puntoPushOperador exp puntoOperacionRelacional
    (114) puntoPushOperador -> .

    LPAREN          reduce using rule 114 (puntoPushOperador -> .)
    MINUS           reduce using rule 114 (puntoPushOperador -> .)
    NOT             reduce using rule 114 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 114 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 114 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 114 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 114 (puntoPushOperador -> .)
    ID              reduce using rule 114 (puntoPushOperador -> .)
    CALL            reduce using rule 114 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 172

state 143

    (102) compare1 -> empty .

    AND             reduce using rule 102 (compare1 -> empty .)
    OR              reduce using rule 102 (compare1 -> empty .)
    SEMICOLON       reduce using rule 102 (compare1 -> empty .)
    RPAREN          reduce using rule 102 (compare1 -> empty .)
    RBRACKET        reduce using rule 102 (compare1 -> empty .)
    COMMA           reduce using rule 102 (compare1 -> empty .)


state 144

    (104) exp -> termino puntoSumaResta . exp1
    (105) exp1 -> . PLUS puntoPushOperador termino puntoSumaResta exp1
    (106) exp1 -> . MINUS puntoPushOperador termino puntoSumaResta exp1
    (107) exp1 -> . empty
    (132) empty -> .

    PLUS            shift and go to state 174
    MINUS           shift and go to state 175
    GREATERTHAN     reduce using rule 132 (empty -> .)
    LESSTHAN        reduce using rule 132 (empty -> .)
    GREATERTHANEQUAL reduce using rule 132 (empty -> .)
    LESSTHANEQUAL   reduce using rule 132 (empty -> .)
    EQUALEQUAL      reduce using rule 132 (empty -> .)
    NOTEQUAL        reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)
    RPAREN          reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)

    exp1                           shift and go to state 173
    empty                          shift and go to state 176

state 145

    (109) termino -> factor puntoMultDivide . termino1
    (110) termino1 -> . TIMES puntoPushOperador factor puntoMultDivide termino1
    (111) termino1 -> . DIVIDE puntoPushOperador factor puntoMultDivide termino1
    (112) termino1 -> . empty
    (132) empty -> .

    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    PLUS            reduce using rule 132 (empty -> .)
    MINUS           reduce using rule 132 (empty -> .)
    GREATERTHAN     reduce using rule 132 (empty -> .)
    LESSTHAN        reduce using rule 132 (empty -> .)
    GREATERTHANEQUAL reduce using rule 132 (empty -> .)
    LESSTHANEQUAL   reduce using rule 132 (empty -> .)
    EQUALEQUAL      reduce using rule 132 (empty -> .)
    NOTEQUAL        reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)
    RPAREN          reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)

    termino1                       shift and go to state 177
    empty                          shift and go to state 180

state 146

    (115) factor -> LPAREN puntoPushFondoFalso . expresion RPAREN puntoPopFondoFalso
    (91) expresion -> . compare expresion2
    (95) compare -> . exp compare1
    (104) exp -> . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    expresion                      shift and go to state 181
    compare                        shift and go to state 105
    exp                            shift and go to state 106
    termino                        shift and go to state 107
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 147

    (117) factor -> MINUS tipo_cte .

    TIMES           reduce using rule 117 (factor -> MINUS tipo_cte .)
    DIVIDE          reduce using rule 117 (factor -> MINUS tipo_cte .)
    PLUS            reduce using rule 117 (factor -> MINUS tipo_cte .)
    MINUS           reduce using rule 117 (factor -> MINUS tipo_cte .)
    GREATERTHAN     reduce using rule 117 (factor -> MINUS tipo_cte .)
    LESSTHAN        reduce using rule 117 (factor -> MINUS tipo_cte .)
    GREATERTHANEQUAL reduce using rule 117 (factor -> MINUS tipo_cte .)
    LESSTHANEQUAL   reduce using rule 117 (factor -> MINUS tipo_cte .)
    EQUALEQUAL      reduce using rule 117 (factor -> MINUS tipo_cte .)
    NOTEQUAL        reduce using rule 117 (factor -> MINUS tipo_cte .)
    AND             reduce using rule 117 (factor -> MINUS tipo_cte .)
    OR              reduce using rule 117 (factor -> MINUS tipo_cte .)
    SEMICOLON       reduce using rule 117 (factor -> MINUS tipo_cte .)
    RPAREN          reduce using rule 117 (factor -> MINUS tipo_cte .)
    RBRACKET        reduce using rule 117 (factor -> MINUS tipo_cte .)
    COMMA           reduce using rule 117 (factor -> MINUS tipo_cte .)


state 148

    (118) factor -> NOT tipo_cte .

    TIMES           reduce using rule 118 (factor -> NOT tipo_cte .)
    DIVIDE          reduce using rule 118 (factor -> NOT tipo_cte .)
    PLUS            reduce using rule 118 (factor -> NOT tipo_cte .)
    MINUS           reduce using rule 118 (factor -> NOT tipo_cte .)
    GREATERTHAN     reduce using rule 118 (factor -> NOT tipo_cte .)
    LESSTHAN        reduce using rule 118 (factor -> NOT tipo_cte .)
    GREATERTHANEQUAL reduce using rule 118 (factor -> NOT tipo_cte .)
    LESSTHANEQUAL   reduce using rule 118 (factor -> NOT tipo_cte .)
    EQUALEQUAL      reduce using rule 118 (factor -> NOT tipo_cte .)
    NOTEQUAL        reduce using rule 118 (factor -> NOT tipo_cte .)
    AND             reduce using rule 118 (factor -> NOT tipo_cte .)
    OR              reduce using rule 118 (factor -> NOT tipo_cte .)
    SEMICOLON       reduce using rule 118 (factor -> NOT tipo_cte .)
    RPAREN          reduce using rule 118 (factor -> NOT tipo_cte .)
    RBRACKET        reduce using rule 118 (factor -> NOT tipo_cte .)
    COMMA           reduce using rule 118 (factor -> NOT tipo_cte .)


state 149

    (27) tipo_cte -> CTE_INT puntoPushInt .

    TIMES           reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    DIVIDE          reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    PLUS            reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    MINUS           reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    GREATERTHAN     reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    LESSTHAN        reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    GREATERTHANEQUAL reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    LESSTHANEQUAL   reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    EQUALEQUAL      reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    NOTEQUAL        reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    AND             reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    OR              reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    SEMICOLON       reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    RPAREN          reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    RBRACKET        reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)
    COMMA           reduce using rule 27 (tipo_cte -> CTE_INT puntoPushInt .)


state 150

    (28) tipo_cte -> CTE_FLOAT puntoPushFloat .

    TIMES           reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    DIVIDE          reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    PLUS            reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    MINUS           reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    GREATERTHAN     reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    LESSTHAN        reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    GREATERTHANEQUAL reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    LESSTHANEQUAL   reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    EQUALEQUAL      reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    NOTEQUAL        reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    AND             reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    OR              reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    SEMICOLON       reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    RPAREN          reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    RBRACKET        reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)
    COMMA           reduce using rule 28 (tipo_cte -> CTE_FLOAT puntoPushFloat .)


state 151

    (29) tipo_cte -> CTE_BOOL puntoPushBool .

    TIMES           reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    DIVIDE          reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    PLUS            reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    MINUS           reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    GREATERTHAN     reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    LESSTHAN        reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    GREATERTHANEQUAL reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    LESSTHANEQUAL   reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    EQUALEQUAL      reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    NOTEQUAL        reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    AND             reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    OR              reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    SEMICOLON       reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    RPAREN          reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    RBRACKET        reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)
    COMMA           reduce using rule 29 (tipo_cte -> CTE_BOOL puntoPushBool .)


state 152

    (30) tipo_cte -> CTE_CHAR puntoPushChar .

    TIMES           reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    DIVIDE          reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    PLUS            reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    MINUS           reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    GREATERTHAN     reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    LESSTHAN        reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    GREATERTHANEQUAL reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    LESSTHANEQUAL   reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    EQUALEQUAL      reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    NOTEQUAL        reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    AND             reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    OR              reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    SEMICOLON       reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    RPAREN          reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    RBRACKET        reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)
    COMMA           reduce using rule 30 (tipo_cte -> CTE_CHAR puntoPushChar .)


state 153

    (31) tipo_cte -> ID puntoPushID . tipo_cte1
    (33) tipo_cte1 -> . LBRACKET CTE_INT RBRACKET
    (34) tipo_cte1 -> . funciones_arr
    (35) tipo_cte1 -> . empty
    (121) funciones_arr -> . PUNTO funciones_arr1 LPAREN RPAREN
    (132) empty -> .

    LBRACKET        shift and go to state 183
    PUNTO           shift and go to state 186
    TIMES           reduce using rule 132 (empty -> .)
    DIVIDE          reduce using rule 132 (empty -> .)
    PLUS            reduce using rule 132 (empty -> .)
    MINUS           reduce using rule 132 (empty -> .)
    GREATERTHAN     reduce using rule 132 (empty -> .)
    LESSTHAN        reduce using rule 132 (empty -> .)
    GREATERTHANEQUAL reduce using rule 132 (empty -> .)
    LESSTHANEQUAL   reduce using rule 132 (empty -> .)
    EQUALEQUAL      reduce using rule 132 (empty -> .)
    NOTEQUAL        reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)
    RPAREN          reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)

    tipo_cte1                      shift and go to state 182
    funciones_arr                  shift and go to state 184
    empty                          shift and go to state 185

state 154

    (89) while -> WHILE LPAREN expresion . RPAREN bloque

    RPAREN          shift and go to state 187


state 155

    (90) do_while -> DO bloque WHILE . LPAREN expresion RPAREN

    LPAREN          shift and go to state 188


state 156

    (58) bloque -> LBLOQUE bloque1 . RBLOQUE

    RBLOQUE         shift and go to state 189


state 157

    (59) bloque1 -> estatuto . bloque1
    (59) bloque1 -> . estatuto bloque1
    (60) bloque1 -> . empty
    (61) estatuto -> . asignacion
    (62) estatuto -> . condicion
    (63) estatuto -> . escritura
    (64) estatuto -> . return
    (65) estatuto -> . while
    (66) estatuto -> . do_while
    (67) estatuto -> . llamada SEMICOLON
    (132) empty -> .
    (68) asignacion -> . ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON
    (76) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (79) escritura -> . PRINT LPAREN escritura1 RPAREN puntoCreatePrintQuad SEMICOLON
    (88) return -> . RETURN expresion SEMICOLON
    (89) while -> . WHILE LPAREN expresion RPAREN bloque
    (90) do_while -> . DO bloque WHILE LPAREN expresion RPAREN
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    RBLOQUE         reduce using rule 132 (empty -> .)
    ID              shift and go to state 89
    IF              shift and go to state 90
    PRINT           shift and go to state 91
    RETURN          shift and go to state 92
    WHILE           shift and go to state 93
    DO              shift and go to state 94
    CALL            shift and go to state 95

    estatuto                       shift and go to state 157
    bloque1                        shift and go to state 190
    empty                          shift and go to state 158
    asignacion                     shift and go to state 82
    condicion                      shift and go to state 83
    escritura                      shift and go to state 84
    return                         shift and go to state 85
    while                          shift and go to state 86
    do_while                       shift and go to state 87
    llamada                        shift and go to state 88

state 158

    (60) bloque1 -> empty .

    RBLOQUE         reduce using rule 60 (bloque1 -> empty .)


state 159

    (83) llamada -> CALL PUNTO ID . LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 191


state 160

    (49) funciones3 -> COMMA tipo ID funciones3 .

    RPAREN          reduce using rule 49 (funciones3 -> COMMA tipo ID funciones3 .)


state 161

    (68) asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS . asignacion2 SEMICOLON
    (71) asignacion2 -> . expresion puntoCreateAsignacionQuad
    (72) asignacion2 -> . leida
    (91) expresion -> . compare expresion2
    (75) leida -> . INPUT LPAREN RPAREN
    (95) compare -> . exp compare1
    (104) exp -> . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    INPUT           shift and go to state 195
    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    asignacion2                    shift and go to state 192
    expresion                      shift and go to state 193
    leida                          shift and go to state 194
    compare                        shift and go to state 105
    exp                            shift and go to state 106
    termino                        shift and go to state 107
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 162

    (69) asignacion1 -> LBRACKET expresion . RBRACKET

    RBRACKET        shift and go to state 196


state 163

    (76) condicion -> IF LPAREN expresion RPAREN . bloque condicion1
    (58) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 121

    bloque                         shift and go to state 197

state 164

    (79) escritura -> PRINT LPAREN escritura1 RPAREN . puntoCreatePrintQuad SEMICOLON
    (82) puntoCreatePrintQuad -> .

    SEMICOLON       reduce using rule 82 (puntoCreatePrintQuad -> .)

    puntoCreatePrintQuad           shift and go to state 198

state 165

    (92) expresion2 -> AND compare .

    SEMICOLON       reduce using rule 92 (expresion2 -> AND compare .)
    RPAREN          reduce using rule 92 (expresion2 -> AND compare .)
    RBRACKET        reduce using rule 92 (expresion2 -> AND compare .)
    COMMA           reduce using rule 92 (expresion2 -> AND compare .)


state 166

    (93) expresion2 -> OR compare .

    SEMICOLON       reduce using rule 93 (expresion2 -> OR compare .)
    RPAREN          reduce using rule 93 (expresion2 -> OR compare .)
    RBRACKET        reduce using rule 93 (expresion2 -> OR compare .)
    COMMA           reduce using rule 93 (expresion2 -> OR compare .)


state 167

    (96) compare1 -> GREATERTHAN puntoPushOperador . exp puntoOperacionRelacional
    (104) exp -> . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    exp                            shift and go to state 199
    termino                        shift and go to state 107
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 168

    (97) compare1 -> LESSTHAN puntoPushOperador . exp puntoOperacionRelacional
    (104) exp -> . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    exp                            shift and go to state 200
    termino                        shift and go to state 107
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 169

    (98) compare1 -> GREATERTHANEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (104) exp -> . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    exp                            shift and go to state 201
    termino                        shift and go to state 107
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 170

    (99) compare1 -> LESSTHANEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (104) exp -> . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    exp                            shift and go to state 202
    termino                        shift and go to state 107
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 171

    (100) compare1 -> EQUALEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (104) exp -> . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    exp                            shift and go to state 203
    termino                        shift and go to state 107
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 172

    (101) compare1 -> NOTEQUAL puntoPushOperador . exp puntoOperacionRelacional
    (104) exp -> . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    exp                            shift and go to state 204
    termino                        shift and go to state 107
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 173

    (104) exp -> termino puntoSumaResta exp1 .

    GREATERTHAN     reduce using rule 104 (exp -> termino puntoSumaResta exp1 .)
    LESSTHAN        reduce using rule 104 (exp -> termino puntoSumaResta exp1 .)
    GREATERTHANEQUAL reduce using rule 104 (exp -> termino puntoSumaResta exp1 .)
    LESSTHANEQUAL   reduce using rule 104 (exp -> termino puntoSumaResta exp1 .)
    EQUALEQUAL      reduce using rule 104 (exp -> termino puntoSumaResta exp1 .)
    NOTEQUAL        reduce using rule 104 (exp -> termino puntoSumaResta exp1 .)
    AND             reduce using rule 104 (exp -> termino puntoSumaResta exp1 .)
    OR              reduce using rule 104 (exp -> termino puntoSumaResta exp1 .)
    SEMICOLON       reduce using rule 104 (exp -> termino puntoSumaResta exp1 .)
    RPAREN          reduce using rule 104 (exp -> termino puntoSumaResta exp1 .)
    RBRACKET        reduce using rule 104 (exp -> termino puntoSumaResta exp1 .)
    COMMA           reduce using rule 104 (exp -> termino puntoSumaResta exp1 .)


state 174

    (105) exp1 -> PLUS . puntoPushOperador termino puntoSumaResta exp1
    (114) puntoPushOperador -> .

    LPAREN          reduce using rule 114 (puntoPushOperador -> .)
    MINUS           reduce using rule 114 (puntoPushOperador -> .)
    NOT             reduce using rule 114 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 114 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 114 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 114 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 114 (puntoPushOperador -> .)
    ID              reduce using rule 114 (puntoPushOperador -> .)
    CALL            reduce using rule 114 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 205

state 175

    (106) exp1 -> MINUS . puntoPushOperador termino puntoSumaResta exp1
    (114) puntoPushOperador -> .

    LPAREN          reduce using rule 114 (puntoPushOperador -> .)
    MINUS           reduce using rule 114 (puntoPushOperador -> .)
    NOT             reduce using rule 114 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 114 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 114 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 114 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 114 (puntoPushOperador -> .)
    ID              reduce using rule 114 (puntoPushOperador -> .)
    CALL            reduce using rule 114 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 206

state 176

    (107) exp1 -> empty .

    GREATERTHAN     reduce using rule 107 (exp1 -> empty .)
    LESSTHAN        reduce using rule 107 (exp1 -> empty .)
    GREATERTHANEQUAL reduce using rule 107 (exp1 -> empty .)
    LESSTHANEQUAL   reduce using rule 107 (exp1 -> empty .)
    EQUALEQUAL      reduce using rule 107 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 107 (exp1 -> empty .)
    AND             reduce using rule 107 (exp1 -> empty .)
    OR              reduce using rule 107 (exp1 -> empty .)
    SEMICOLON       reduce using rule 107 (exp1 -> empty .)
    RPAREN          reduce using rule 107 (exp1 -> empty .)
    RBRACKET        reduce using rule 107 (exp1 -> empty .)
    COMMA           reduce using rule 107 (exp1 -> empty .)


state 177

    (109) termino -> factor puntoMultDivide termino1 .

    PLUS            reduce using rule 109 (termino -> factor puntoMultDivide termino1 .)
    MINUS           reduce using rule 109 (termino -> factor puntoMultDivide termino1 .)
    GREATERTHAN     reduce using rule 109 (termino -> factor puntoMultDivide termino1 .)
    LESSTHAN        reduce using rule 109 (termino -> factor puntoMultDivide termino1 .)
    GREATERTHANEQUAL reduce using rule 109 (termino -> factor puntoMultDivide termino1 .)
    LESSTHANEQUAL   reduce using rule 109 (termino -> factor puntoMultDivide termino1 .)
    EQUALEQUAL      reduce using rule 109 (termino -> factor puntoMultDivide termino1 .)
    NOTEQUAL        reduce using rule 109 (termino -> factor puntoMultDivide termino1 .)
    AND             reduce using rule 109 (termino -> factor puntoMultDivide termino1 .)
    OR              reduce using rule 109 (termino -> factor puntoMultDivide termino1 .)
    SEMICOLON       reduce using rule 109 (termino -> factor puntoMultDivide termino1 .)
    RPAREN          reduce using rule 109 (termino -> factor puntoMultDivide termino1 .)
    RBRACKET        reduce using rule 109 (termino -> factor puntoMultDivide termino1 .)
    COMMA           reduce using rule 109 (termino -> factor puntoMultDivide termino1 .)


state 178

    (110) termino1 -> TIMES . puntoPushOperador factor puntoMultDivide termino1
    (114) puntoPushOperador -> .

    LPAREN          reduce using rule 114 (puntoPushOperador -> .)
    MINUS           reduce using rule 114 (puntoPushOperador -> .)
    NOT             reduce using rule 114 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 114 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 114 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 114 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 114 (puntoPushOperador -> .)
    ID              reduce using rule 114 (puntoPushOperador -> .)
    CALL            reduce using rule 114 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 207

state 179

    (111) termino1 -> DIVIDE . puntoPushOperador factor puntoMultDivide termino1
    (114) puntoPushOperador -> .

    LPAREN          reduce using rule 114 (puntoPushOperador -> .)
    MINUS           reduce using rule 114 (puntoPushOperador -> .)
    NOT             reduce using rule 114 (puntoPushOperador -> .)
    CTE_INT         reduce using rule 114 (puntoPushOperador -> .)
    CTE_FLOAT       reduce using rule 114 (puntoPushOperador -> .)
    CTE_BOOL        reduce using rule 114 (puntoPushOperador -> .)
    CTE_CHAR        reduce using rule 114 (puntoPushOperador -> .)
    ID              reduce using rule 114 (puntoPushOperador -> .)
    CALL            reduce using rule 114 (puntoPushOperador -> .)

    puntoPushOperador              shift and go to state 208

state 180

    (112) termino1 -> empty .

    PLUS            reduce using rule 112 (termino1 -> empty .)
    MINUS           reduce using rule 112 (termino1 -> empty .)
    GREATERTHAN     reduce using rule 112 (termino1 -> empty .)
    LESSTHAN        reduce using rule 112 (termino1 -> empty .)
    GREATERTHANEQUAL reduce using rule 112 (termino1 -> empty .)
    LESSTHANEQUAL   reduce using rule 112 (termino1 -> empty .)
    EQUALEQUAL      reduce using rule 112 (termino1 -> empty .)
    NOTEQUAL        reduce using rule 112 (termino1 -> empty .)
    AND             reduce using rule 112 (termino1 -> empty .)
    OR              reduce using rule 112 (termino1 -> empty .)
    SEMICOLON       reduce using rule 112 (termino1 -> empty .)
    RPAREN          reduce using rule 112 (termino1 -> empty .)
    RBRACKET        reduce using rule 112 (termino1 -> empty .)
    COMMA           reduce using rule 112 (termino1 -> empty .)


state 181

    (115) factor -> LPAREN puntoPushFondoFalso expresion . RPAREN puntoPopFondoFalso

    RPAREN          shift and go to state 209


state 182

    (31) tipo_cte -> ID puntoPushID tipo_cte1 .

    TIMES           reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    DIVIDE          reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    PLUS            reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    MINUS           reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    GREATERTHAN     reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    LESSTHAN        reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    GREATERTHANEQUAL reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    LESSTHANEQUAL   reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    EQUALEQUAL      reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    NOTEQUAL        reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    AND             reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    OR              reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    SEMICOLON       reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    RPAREN          reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    RBRACKET        reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)
    COMMA           reduce using rule 31 (tipo_cte -> ID puntoPushID tipo_cte1 .)


state 183

    (33) tipo_cte1 -> LBRACKET . CTE_INT RBRACKET

    CTE_INT         shift and go to state 210


state 184

    (34) tipo_cte1 -> funciones_arr .

    TIMES           reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    DIVIDE          reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    PLUS            reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    MINUS           reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    GREATERTHAN     reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    LESSTHAN        reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    GREATERTHANEQUAL reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    LESSTHANEQUAL   reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    EQUALEQUAL      reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    NOTEQUAL        reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    AND             reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    OR              reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    SEMICOLON       reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    RPAREN          reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    RBRACKET        reduce using rule 34 (tipo_cte1 -> funciones_arr .)
    COMMA           reduce using rule 34 (tipo_cte1 -> funciones_arr .)


state 185

    (35) tipo_cte1 -> empty .

    TIMES           reduce using rule 35 (tipo_cte1 -> empty .)
    DIVIDE          reduce using rule 35 (tipo_cte1 -> empty .)
    PLUS            reduce using rule 35 (tipo_cte1 -> empty .)
    MINUS           reduce using rule 35 (tipo_cte1 -> empty .)
    GREATERTHAN     reduce using rule 35 (tipo_cte1 -> empty .)
    LESSTHAN        reduce using rule 35 (tipo_cte1 -> empty .)
    GREATERTHANEQUAL reduce using rule 35 (tipo_cte1 -> empty .)
    LESSTHANEQUAL   reduce using rule 35 (tipo_cte1 -> empty .)
    EQUALEQUAL      reduce using rule 35 (tipo_cte1 -> empty .)
    NOTEQUAL        reduce using rule 35 (tipo_cte1 -> empty .)
    AND             reduce using rule 35 (tipo_cte1 -> empty .)
    OR              reduce using rule 35 (tipo_cte1 -> empty .)
    SEMICOLON       reduce using rule 35 (tipo_cte1 -> empty .)
    RPAREN          reduce using rule 35 (tipo_cte1 -> empty .)
    RBRACKET        reduce using rule 35 (tipo_cte1 -> empty .)
    COMMA           reduce using rule 35 (tipo_cte1 -> empty .)


state 186

    (121) funciones_arr -> PUNTO . funciones_arr1 LPAREN RPAREN
    (122) funciones_arr1 -> . MAX
    (123) funciones_arr1 -> . MIN
    (124) funciones_arr1 -> . RANGE
    (125) funciones_arr1 -> . MEDIAN
    (126) funciones_arr1 -> . AVERAGE
    (127) funciones_arr1 -> . IQRANGE
    (128) funciones_arr1 -> . STDEV
    (129) funciones_arr1 -> . VARIANCE
    (130) funciones_arr1 -> . MODIFY
    (131) funciones_arr1 -> . DRAW

    MAX             shift and go to state 212
    MIN             shift and go to state 213
    RANGE           shift and go to state 214
    MEDIAN          shift and go to state 215
    AVERAGE         shift and go to state 216
    IQRANGE         shift and go to state 217
    STDEV           shift and go to state 218
    VARIANCE        shift and go to state 219
    MODIFY          shift and go to state 220
    DRAW            shift and go to state 221

    funciones_arr1                 shift and go to state 211

state 187

    (89) while -> WHILE LPAREN expresion RPAREN . bloque
    (58) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 121

    bloque                         shift and go to state 222

state 188

    (90) do_while -> DO bloque WHILE LPAREN . expresion RPAREN
    (91) expresion -> . compare expresion2
    (95) compare -> . exp compare1
    (104) exp -> . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    expresion                      shift and go to state 223
    compare                        shift and go to state 105
    exp                            shift and go to state 106
    termino                        shift and go to state 107
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 189

    (58) bloque -> LBLOQUE bloque1 RBLOQUE .

    WHILE           reduce using rule 58 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    ELSE            reduce using rule 58 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    ID              reduce using rule 58 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    IF              reduce using rule 58 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    PRINT           reduce using rule 58 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    RETURN          reduce using rule 58 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    DO              reduce using rule 58 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    CALL            reduce using rule 58 (bloque -> LBLOQUE bloque1 RBLOQUE .)
    RBLOQUE         reduce using rule 58 (bloque -> LBLOQUE bloque1 RBLOQUE .)


state 190

    (59) bloque1 -> estatuto bloque1 .

    RBLOQUE         reduce using rule 59 (bloque1 -> estatuto bloque1 .)


state 191

    (83) llamada -> CALL PUNTO ID LPAREN . llamada1 RPAREN
    (84) llamada1 -> . expresion llamada2
    (85) llamada1 -> . empty
    (91) expresion -> . compare expresion2
    (132) empty -> .
    (95) compare -> . exp compare1
    (104) exp -> . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    RPAREN          reduce using rule 132 (empty -> .)
    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    llamada1                       shift and go to state 224
    expresion                      shift and go to state 225
    empty                          shift and go to state 226
    compare                        shift and go to state 105
    exp                            shift and go to state 106
    termino                        shift and go to state 107
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 192

    (68) asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 . SEMICOLON

    SEMICOLON       shift and go to state 227


state 193

    (71) asignacion2 -> expresion . puntoCreateAsignacionQuad
    (74) puntoCreateAsignacionQuad -> .

    SEMICOLON       reduce using rule 74 (puntoCreateAsignacionQuad -> .)

    puntoCreateAsignacionQuad      shift and go to state 228

state 194

    (72) asignacion2 -> leida .

    SEMICOLON       reduce using rule 72 (asignacion2 -> leida .)


state 195

    (75) leida -> INPUT . LPAREN RPAREN

    LPAREN          shift and go to state 229


state 196

    (69) asignacion1 -> LBRACKET expresion RBRACKET .

    EQUALS          reduce using rule 69 (asignacion1 -> LBRACKET expresion RBRACKET .)


state 197

    (76) condicion -> IF LPAREN expresion RPAREN bloque . condicion1
    (77) condicion1 -> . ELSE bloque
    (78) condicion1 -> . empty
    (132) empty -> .

    ELSE            shift and go to state 231
    ID              reduce using rule 132 (empty -> .)
    IF              reduce using rule 132 (empty -> .)
    PRINT           reduce using rule 132 (empty -> .)
    RETURN          reduce using rule 132 (empty -> .)
    WHILE           reduce using rule 132 (empty -> .)
    DO              reduce using rule 132 (empty -> .)
    CALL            reduce using rule 132 (empty -> .)
    RBLOQUE         reduce using rule 132 (empty -> .)

    condicion1                     shift and go to state 230
    empty                          shift and go to state 232

state 198

    (79) escritura -> PRINT LPAREN escritura1 RPAREN puntoCreatePrintQuad . SEMICOLON

    SEMICOLON       shift and go to state 233


state 199

    (96) compare1 -> GREATERTHAN puntoPushOperador exp . puntoOperacionRelacional
    (103) puntoOperacionRelacional -> .

    AND             reduce using rule 103 (puntoOperacionRelacional -> .)
    OR              reduce using rule 103 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 103 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 103 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 103 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 103 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 234

state 200

    (97) compare1 -> LESSTHAN puntoPushOperador exp . puntoOperacionRelacional
    (103) puntoOperacionRelacional -> .

    AND             reduce using rule 103 (puntoOperacionRelacional -> .)
    OR              reduce using rule 103 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 103 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 103 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 103 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 103 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 235

state 201

    (98) compare1 -> GREATERTHANEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (103) puntoOperacionRelacional -> .

    AND             reduce using rule 103 (puntoOperacionRelacional -> .)
    OR              reduce using rule 103 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 103 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 103 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 103 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 103 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 236

state 202

    (99) compare1 -> LESSTHANEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (103) puntoOperacionRelacional -> .

    AND             reduce using rule 103 (puntoOperacionRelacional -> .)
    OR              reduce using rule 103 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 103 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 103 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 103 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 103 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 237

state 203

    (100) compare1 -> EQUALEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (103) puntoOperacionRelacional -> .

    AND             reduce using rule 103 (puntoOperacionRelacional -> .)
    OR              reduce using rule 103 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 103 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 103 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 103 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 103 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 238

state 204

    (101) compare1 -> NOTEQUAL puntoPushOperador exp . puntoOperacionRelacional
    (103) puntoOperacionRelacional -> .

    AND             reduce using rule 103 (puntoOperacionRelacional -> .)
    OR              reduce using rule 103 (puntoOperacionRelacional -> .)
    SEMICOLON       reduce using rule 103 (puntoOperacionRelacional -> .)
    RPAREN          reduce using rule 103 (puntoOperacionRelacional -> .)
    RBRACKET        reduce using rule 103 (puntoOperacionRelacional -> .)
    COMMA           reduce using rule 103 (puntoOperacionRelacional -> .)

    puntoOperacionRelacional       shift and go to state 239

state 205

    (105) exp1 -> PLUS puntoPushOperador . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    termino                        shift and go to state 240
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 206

    (106) exp1 -> MINUS puntoPushOperador . termino puntoSumaResta exp1
    (109) termino -> . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    termino                        shift and go to state 241
    factor                         shift and go to state 108
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 207

    (110) termino1 -> TIMES puntoPushOperador . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    factor                         shift and go to state 242
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 208

    (111) termino1 -> DIVIDE puntoPushOperador . factor puntoMultDivide termino1
    (115) factor -> . LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso
    (116) factor -> . tipo_cte
    (117) factor -> . MINUS tipo_cte
    (118) factor -> . NOT tipo_cte
    (27) tipo_cte -> . CTE_INT puntoPushInt
    (28) tipo_cte -> . CTE_FLOAT puntoPushFloat
    (29) tipo_cte -> . CTE_BOOL puntoPushBool
    (30) tipo_cte -> . CTE_CHAR puntoPushChar
    (31) tipo_cte -> . ID puntoPushID tipo_cte1
    (32) tipo_cte -> . llamada
    (83) llamada -> . CALL PUNTO ID LPAREN llamada1 RPAREN

    LPAREN          shift and go to state 109
    MINUS           shift and go to state 111
    NOT             shift and go to state 112
    CTE_INT         shift and go to state 113
    CTE_FLOAT       shift and go to state 114
    CTE_BOOL        shift and go to state 115
    CTE_CHAR        shift and go to state 116
    ID              shift and go to state 117
    CALL            shift and go to state 95

    factor                         shift and go to state 243
    tipo_cte                       shift and go to state 110
    llamada                        shift and go to state 118

state 209

    (115) factor -> LPAREN puntoPushFondoFalso expresion RPAREN . puntoPopFondoFalso
    (120) puntoPopFondoFalso -> .

    TIMES           reduce using rule 120 (puntoPopFondoFalso -> .)
    DIVIDE          reduce using rule 120 (puntoPopFondoFalso -> .)
    PLUS            reduce using rule 120 (puntoPopFondoFalso -> .)
    MINUS           reduce using rule 120 (puntoPopFondoFalso -> .)
    GREATERTHAN     reduce using rule 120 (puntoPopFondoFalso -> .)
    LESSTHAN        reduce using rule 120 (puntoPopFondoFalso -> .)
    GREATERTHANEQUAL reduce using rule 120 (puntoPopFondoFalso -> .)
    LESSTHANEQUAL   reduce using rule 120 (puntoPopFondoFalso -> .)
    EQUALEQUAL      reduce using rule 120 (puntoPopFondoFalso -> .)
    NOTEQUAL        reduce using rule 120 (puntoPopFondoFalso -> .)
    AND             reduce using rule 120 (puntoPopFondoFalso -> .)
    OR              reduce using rule 120 (puntoPopFondoFalso -> .)
    SEMICOLON       reduce using rule 120 (puntoPopFondoFalso -> .)
    RPAREN          reduce using rule 120 (puntoPopFondoFalso -> .)
    RBRACKET        reduce using rule 120 (puntoPopFondoFalso -> .)
    COMMA           reduce using rule 120 (puntoPopFondoFalso -> .)

    puntoPopFondoFalso             shift and go to state 244

state 210

    (33) tipo_cte1 -> LBRACKET CTE_INT . RBRACKET

    RBRACKET        shift and go to state 245


state 211

    (121) funciones_arr -> PUNTO funciones_arr1 . LPAREN RPAREN

    LPAREN          shift and go to state 246


state 212

    (122) funciones_arr1 -> MAX .

    LPAREN          reduce using rule 122 (funciones_arr1 -> MAX .)


state 213

    (123) funciones_arr1 -> MIN .

    LPAREN          reduce using rule 123 (funciones_arr1 -> MIN .)


state 214

    (124) funciones_arr1 -> RANGE .

    LPAREN          reduce using rule 124 (funciones_arr1 -> RANGE .)


state 215

    (125) funciones_arr1 -> MEDIAN .

    LPAREN          reduce using rule 125 (funciones_arr1 -> MEDIAN .)


state 216

    (126) funciones_arr1 -> AVERAGE .

    LPAREN          reduce using rule 126 (funciones_arr1 -> AVERAGE .)


state 217

    (127) funciones_arr1 -> IQRANGE .

    LPAREN          reduce using rule 127 (funciones_arr1 -> IQRANGE .)


state 218

    (128) funciones_arr1 -> STDEV .

    LPAREN          reduce using rule 128 (funciones_arr1 -> STDEV .)


state 219

    (129) funciones_arr1 -> VARIANCE .

    LPAREN          reduce using rule 129 (funciones_arr1 -> VARIANCE .)


state 220

    (130) funciones_arr1 -> MODIFY .

    LPAREN          reduce using rule 130 (funciones_arr1 -> MODIFY .)


state 221

    (131) funciones_arr1 -> DRAW .

    LPAREN          reduce using rule 131 (funciones_arr1 -> DRAW .)


state 222

    (89) while -> WHILE LPAREN expresion RPAREN bloque .

    ID              reduce using rule 89 (while -> WHILE LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 89 (while -> WHILE LPAREN expresion RPAREN bloque .)
    PRINT           reduce using rule 89 (while -> WHILE LPAREN expresion RPAREN bloque .)
    RETURN          reduce using rule 89 (while -> WHILE LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 89 (while -> WHILE LPAREN expresion RPAREN bloque .)
    DO              reduce using rule 89 (while -> WHILE LPAREN expresion RPAREN bloque .)
    CALL            reduce using rule 89 (while -> WHILE LPAREN expresion RPAREN bloque .)
    RBLOQUE         reduce using rule 89 (while -> WHILE LPAREN expresion RPAREN bloque .)


state 223

    (90) do_while -> DO bloque WHILE LPAREN expresion . RPAREN

    RPAREN          shift and go to state 247


state 224

    (83) llamada -> CALL PUNTO ID LPAREN llamada1 . RPAREN

    RPAREN          shift and go to state 248


state 225

    (84) llamada1 -> expresion . llamada2
    (86) llamada2 -> . COMMA tipo ID llamada2
    (87) llamada2 -> . empty
    (132) empty -> .

    COMMA           shift and go to state 250
    RPAREN          reduce using rule 132 (empty -> .)

    llamada2                       shift and go to state 249
    empty                          shift and go to state 251

state 226

    (85) llamada1 -> empty .

    RPAREN          reduce using rule 85 (llamada1 -> empty .)


state 227

    (68) asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .

    ID              reduce using rule 68 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    IF              reduce using rule 68 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    PRINT           reduce using rule 68 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    RETURN          reduce using rule 68 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    WHILE           reduce using rule 68 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    DO              reduce using rule 68 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    CALL            reduce using rule 68 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)
    RBLOQUE         reduce using rule 68 (asignacion -> ID puntoSaveIDAsignacion asignacion1 EQUALS asignacion2 SEMICOLON .)


state 228

    (71) asignacion2 -> expresion puntoCreateAsignacionQuad .

    SEMICOLON       reduce using rule 71 (asignacion2 -> expresion puntoCreateAsignacionQuad .)


state 229

    (75) leida -> INPUT LPAREN . RPAREN

    RPAREN          shift and go to state 252


state 230

    (76) condicion -> IF LPAREN expresion RPAREN bloque condicion1 .

    ID              reduce using rule 76 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    IF              reduce using rule 76 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    PRINT           reduce using rule 76 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    RETURN          reduce using rule 76 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    WHILE           reduce using rule 76 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    DO              reduce using rule 76 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    CALL            reduce using rule 76 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    RBLOQUE         reduce using rule 76 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)


state 231

    (77) condicion1 -> ELSE . bloque
    (58) bloque -> . LBLOQUE bloque1 RBLOQUE

    LBLOQUE         shift and go to state 121

    bloque                         shift and go to state 253

state 232

    (78) condicion1 -> empty .

    ID              reduce using rule 78 (condicion1 -> empty .)
    IF              reduce using rule 78 (condicion1 -> empty .)
    PRINT           reduce using rule 78 (condicion1 -> empty .)
    RETURN          reduce using rule 78 (condicion1 -> empty .)
    WHILE           reduce using rule 78 (condicion1 -> empty .)
    DO              reduce using rule 78 (condicion1 -> empty .)
    CALL            reduce using rule 78 (condicion1 -> empty .)
    RBLOQUE         reduce using rule 78 (condicion1 -> empty .)


state 233

    (79) escritura -> PRINT LPAREN escritura1 RPAREN puntoCreatePrintQuad SEMICOLON .

    ID              reduce using rule 79 (escritura -> PRINT LPAREN escritura1 RPAREN puntoCreatePrintQuad SEMICOLON .)
    IF              reduce using rule 79 (escritura -> PRINT LPAREN escritura1 RPAREN puntoCreatePrintQuad SEMICOLON .)
    PRINT           reduce using rule 79 (escritura -> PRINT LPAREN escritura1 RPAREN puntoCreatePrintQuad SEMICOLON .)
    RETURN          reduce using rule 79 (escritura -> PRINT LPAREN escritura1 RPAREN puntoCreatePrintQuad SEMICOLON .)
    WHILE           reduce using rule 79 (escritura -> PRINT LPAREN escritura1 RPAREN puntoCreatePrintQuad SEMICOLON .)
    DO              reduce using rule 79 (escritura -> PRINT LPAREN escritura1 RPAREN puntoCreatePrintQuad SEMICOLON .)
    CALL            reduce using rule 79 (escritura -> PRINT LPAREN escritura1 RPAREN puntoCreatePrintQuad SEMICOLON .)
    RBLOQUE         reduce using rule 79 (escritura -> PRINT LPAREN escritura1 RPAREN puntoCreatePrintQuad SEMICOLON .)


state 234

    (96) compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 96 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 96 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 96 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 96 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 96 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 96 (compare1 -> GREATERTHAN puntoPushOperador exp puntoOperacionRelacional .)


state 235

    (97) compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 97 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 97 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 97 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 97 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 97 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 97 (compare1 -> LESSTHAN puntoPushOperador exp puntoOperacionRelacional .)


state 236

    (98) compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 98 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 98 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 98 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 98 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 98 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 98 (compare1 -> GREATERTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 237

    (99) compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 99 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 99 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 99 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 99 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 99 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 99 (compare1 -> LESSTHANEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 238

    (100) compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 100 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 100 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 100 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 100 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 100 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 100 (compare1 -> EQUALEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 239

    (101) compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .

    AND             reduce using rule 101 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    OR              reduce using rule 101 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    SEMICOLON       reduce using rule 101 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RPAREN          reduce using rule 101 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    RBRACKET        reduce using rule 101 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)
    COMMA           reduce using rule 101 (compare1 -> NOTEQUAL puntoPushOperador exp puntoOperacionRelacional .)


state 240

    (105) exp1 -> PLUS puntoPushOperador termino . puntoSumaResta exp1
    (108) puntoSumaResta -> .

    PLUS            reduce using rule 108 (puntoSumaResta -> .)
    MINUS           reduce using rule 108 (puntoSumaResta -> .)
    GREATERTHAN     reduce using rule 108 (puntoSumaResta -> .)
    LESSTHAN        reduce using rule 108 (puntoSumaResta -> .)
    GREATERTHANEQUAL reduce using rule 108 (puntoSumaResta -> .)
    LESSTHANEQUAL   reduce using rule 108 (puntoSumaResta -> .)
    EQUALEQUAL      reduce using rule 108 (puntoSumaResta -> .)
    NOTEQUAL        reduce using rule 108 (puntoSumaResta -> .)
    AND             reduce using rule 108 (puntoSumaResta -> .)
    OR              reduce using rule 108 (puntoSumaResta -> .)
    SEMICOLON       reduce using rule 108 (puntoSumaResta -> .)
    RPAREN          reduce using rule 108 (puntoSumaResta -> .)
    RBRACKET        reduce using rule 108 (puntoSumaResta -> .)
    COMMA           reduce using rule 108 (puntoSumaResta -> .)

    puntoSumaResta                 shift and go to state 254

state 241

    (106) exp1 -> MINUS puntoPushOperador termino . puntoSumaResta exp1
    (108) puntoSumaResta -> .

    PLUS            reduce using rule 108 (puntoSumaResta -> .)
    MINUS           reduce using rule 108 (puntoSumaResta -> .)
    GREATERTHAN     reduce using rule 108 (puntoSumaResta -> .)
    LESSTHAN        reduce using rule 108 (puntoSumaResta -> .)
    GREATERTHANEQUAL reduce using rule 108 (puntoSumaResta -> .)
    LESSTHANEQUAL   reduce using rule 108 (puntoSumaResta -> .)
    EQUALEQUAL      reduce using rule 108 (puntoSumaResta -> .)
    NOTEQUAL        reduce using rule 108 (puntoSumaResta -> .)
    AND             reduce using rule 108 (puntoSumaResta -> .)
    OR              reduce using rule 108 (puntoSumaResta -> .)
    SEMICOLON       reduce using rule 108 (puntoSumaResta -> .)
    RPAREN          reduce using rule 108 (puntoSumaResta -> .)
    RBRACKET        reduce using rule 108 (puntoSumaResta -> .)
    COMMA           reduce using rule 108 (puntoSumaResta -> .)

    puntoSumaResta                 shift and go to state 255

state 242

    (110) termino1 -> TIMES puntoPushOperador factor . puntoMultDivide termino1
    (113) puntoMultDivide -> .

    TIMES           reduce using rule 113 (puntoMultDivide -> .)
    DIVIDE          reduce using rule 113 (puntoMultDivide -> .)
    PLUS            reduce using rule 113 (puntoMultDivide -> .)
    MINUS           reduce using rule 113 (puntoMultDivide -> .)
    GREATERTHAN     reduce using rule 113 (puntoMultDivide -> .)
    LESSTHAN        reduce using rule 113 (puntoMultDivide -> .)
    GREATERTHANEQUAL reduce using rule 113 (puntoMultDivide -> .)
    LESSTHANEQUAL   reduce using rule 113 (puntoMultDivide -> .)
    EQUALEQUAL      reduce using rule 113 (puntoMultDivide -> .)
    NOTEQUAL        reduce using rule 113 (puntoMultDivide -> .)
    AND             reduce using rule 113 (puntoMultDivide -> .)
    OR              reduce using rule 113 (puntoMultDivide -> .)
    SEMICOLON       reduce using rule 113 (puntoMultDivide -> .)
    RPAREN          reduce using rule 113 (puntoMultDivide -> .)
    RBRACKET        reduce using rule 113 (puntoMultDivide -> .)
    COMMA           reduce using rule 113 (puntoMultDivide -> .)

    puntoMultDivide                shift and go to state 256

state 243

    (111) termino1 -> DIVIDE puntoPushOperador factor . puntoMultDivide termino1
    (113) puntoMultDivide -> .

    TIMES           reduce using rule 113 (puntoMultDivide -> .)
    DIVIDE          reduce using rule 113 (puntoMultDivide -> .)
    PLUS            reduce using rule 113 (puntoMultDivide -> .)
    MINUS           reduce using rule 113 (puntoMultDivide -> .)
    GREATERTHAN     reduce using rule 113 (puntoMultDivide -> .)
    LESSTHAN        reduce using rule 113 (puntoMultDivide -> .)
    GREATERTHANEQUAL reduce using rule 113 (puntoMultDivide -> .)
    LESSTHANEQUAL   reduce using rule 113 (puntoMultDivide -> .)
    EQUALEQUAL      reduce using rule 113 (puntoMultDivide -> .)
    NOTEQUAL        reduce using rule 113 (puntoMultDivide -> .)
    AND             reduce using rule 113 (puntoMultDivide -> .)
    OR              reduce using rule 113 (puntoMultDivide -> .)
    SEMICOLON       reduce using rule 113 (puntoMultDivide -> .)
    RPAREN          reduce using rule 113 (puntoMultDivide -> .)
    RBRACKET        reduce using rule 113 (puntoMultDivide -> .)
    COMMA           reduce using rule 113 (puntoMultDivide -> .)

    puntoMultDivide                shift and go to state 257

state 244

    (115) factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .

    TIMES           reduce using rule 115 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    DIVIDE          reduce using rule 115 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    PLUS            reduce using rule 115 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    MINUS           reduce using rule 115 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    GREATERTHAN     reduce using rule 115 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    LESSTHAN        reduce using rule 115 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    GREATERTHANEQUAL reduce using rule 115 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    LESSTHANEQUAL   reduce using rule 115 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    EQUALEQUAL      reduce using rule 115 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    NOTEQUAL        reduce using rule 115 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    AND             reduce using rule 115 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    OR              reduce using rule 115 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    SEMICOLON       reduce using rule 115 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    RPAREN          reduce using rule 115 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    RBRACKET        reduce using rule 115 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)
    COMMA           reduce using rule 115 (factor -> LPAREN puntoPushFondoFalso expresion RPAREN puntoPopFondoFalso .)


state 245

    (33) tipo_cte1 -> LBRACKET CTE_INT RBRACKET .

    TIMES           reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    DIVIDE          reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    PLUS            reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    MINUS           reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    GREATERTHAN     reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    LESSTHAN        reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    GREATERTHANEQUAL reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    LESSTHANEQUAL   reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    EQUALEQUAL      reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    NOTEQUAL        reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    AND             reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    OR              reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    SEMICOLON       reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    RPAREN          reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    RBRACKET        reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)
    COMMA           reduce using rule 33 (tipo_cte1 -> LBRACKET CTE_INT RBRACKET .)


state 246

    (121) funciones_arr -> PUNTO funciones_arr1 LPAREN . RPAREN

    RPAREN          shift and go to state 258


state 247

    (90) do_while -> DO bloque WHILE LPAREN expresion RPAREN .

    ID              reduce using rule 90 (do_while -> DO bloque WHILE LPAREN expresion RPAREN .)
    IF              reduce using rule 90 (do_while -> DO bloque WHILE LPAREN expresion RPAREN .)
    PRINT           reduce using rule 90 (do_while -> DO bloque WHILE LPAREN expresion RPAREN .)
    RETURN          reduce using rule 90 (do_while -> DO bloque WHILE LPAREN expresion RPAREN .)
    WHILE           reduce using rule 90 (do_while -> DO bloque WHILE LPAREN expresion RPAREN .)
    DO              reduce using rule 90 (do_while -> DO bloque WHILE LPAREN expresion RPAREN .)
    CALL            reduce using rule 90 (do_while -> DO bloque WHILE LPAREN expresion RPAREN .)
    RBLOQUE         reduce using rule 90 (do_while -> DO bloque WHILE LPAREN expresion RPAREN .)


state 248

    (83) llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .

    SEMICOLON       reduce using rule 83 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    TIMES           reduce using rule 83 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    DIVIDE          reduce using rule 83 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    PLUS            reduce using rule 83 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    MINUS           reduce using rule 83 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    GREATERTHAN     reduce using rule 83 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    LESSTHAN        reduce using rule 83 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    GREATERTHANEQUAL reduce using rule 83 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    LESSTHANEQUAL   reduce using rule 83 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    EQUALEQUAL      reduce using rule 83 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    NOTEQUAL        reduce using rule 83 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    AND             reduce using rule 83 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    OR              reduce using rule 83 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    RPAREN          reduce using rule 83 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    RBRACKET        reduce using rule 83 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)
    COMMA           reduce using rule 83 (llamada -> CALL PUNTO ID LPAREN llamada1 RPAREN .)


state 249

    (84) llamada1 -> expresion llamada2 .

    RPAREN          reduce using rule 84 (llamada1 -> expresion llamada2 .)


state 250

    (86) llamada2 -> COMMA . tipo ID llamada2
    (22) tipo -> . INT puntoCurrentType
    (23) tipo -> . FLOAT puntoCurrentType
    (24) tipo -> . BOOL puntoCurrentType
    (25) tipo -> . CHAR puntoCurrentType

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    BOOL            shift and go to state 25
    CHAR            shift and go to state 26

    tipo                           shift and go to state 259

state 251

    (87) llamada2 -> empty .

    RPAREN          reduce using rule 87 (llamada2 -> empty .)


state 252

    (75) leida -> INPUT LPAREN RPAREN .

    SEMICOLON       reduce using rule 75 (leida -> INPUT LPAREN RPAREN .)


state 253

    (77) condicion1 -> ELSE bloque .

    ID              reduce using rule 77 (condicion1 -> ELSE bloque .)
    IF              reduce using rule 77 (condicion1 -> ELSE bloque .)
    PRINT           reduce using rule 77 (condicion1 -> ELSE bloque .)
    RETURN          reduce using rule 77 (condicion1 -> ELSE bloque .)
    WHILE           reduce using rule 77 (condicion1 -> ELSE bloque .)
    DO              reduce using rule 77 (condicion1 -> ELSE bloque .)
    CALL            reduce using rule 77 (condicion1 -> ELSE bloque .)
    RBLOQUE         reduce using rule 77 (condicion1 -> ELSE bloque .)


state 254

    (105) exp1 -> PLUS puntoPushOperador termino puntoSumaResta . exp1
    (105) exp1 -> . PLUS puntoPushOperador termino puntoSumaResta exp1
    (106) exp1 -> . MINUS puntoPushOperador termino puntoSumaResta exp1
    (107) exp1 -> . empty
    (132) empty -> .

    PLUS            shift and go to state 174
    MINUS           shift and go to state 175
    GREATERTHAN     reduce using rule 132 (empty -> .)
    LESSTHAN        reduce using rule 132 (empty -> .)
    GREATERTHANEQUAL reduce using rule 132 (empty -> .)
    LESSTHANEQUAL   reduce using rule 132 (empty -> .)
    EQUALEQUAL      reduce using rule 132 (empty -> .)
    NOTEQUAL        reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)
    RPAREN          reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)

    exp1                           shift and go to state 260
    empty                          shift and go to state 176

state 255

    (106) exp1 -> MINUS puntoPushOperador termino puntoSumaResta . exp1
    (105) exp1 -> . PLUS puntoPushOperador termino puntoSumaResta exp1
    (106) exp1 -> . MINUS puntoPushOperador termino puntoSumaResta exp1
    (107) exp1 -> . empty
    (132) empty -> .

    PLUS            shift and go to state 174
    MINUS           shift and go to state 175
    GREATERTHAN     reduce using rule 132 (empty -> .)
    LESSTHAN        reduce using rule 132 (empty -> .)
    GREATERTHANEQUAL reduce using rule 132 (empty -> .)
    LESSTHANEQUAL   reduce using rule 132 (empty -> .)
    EQUALEQUAL      reduce using rule 132 (empty -> .)
    NOTEQUAL        reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)
    RPAREN          reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)

    exp1                           shift and go to state 261
    empty                          shift and go to state 176

state 256

    (110) termino1 -> TIMES puntoPushOperador factor puntoMultDivide . termino1
    (110) termino1 -> . TIMES puntoPushOperador factor puntoMultDivide termino1
    (111) termino1 -> . DIVIDE puntoPushOperador factor puntoMultDivide termino1
    (112) termino1 -> . empty
    (132) empty -> .

    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    PLUS            reduce using rule 132 (empty -> .)
    MINUS           reduce using rule 132 (empty -> .)
    GREATERTHAN     reduce using rule 132 (empty -> .)
    LESSTHAN        reduce using rule 132 (empty -> .)
    GREATERTHANEQUAL reduce using rule 132 (empty -> .)
    LESSTHANEQUAL   reduce using rule 132 (empty -> .)
    EQUALEQUAL      reduce using rule 132 (empty -> .)
    NOTEQUAL        reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)
    RPAREN          reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)

    termino1                       shift and go to state 262
    empty                          shift and go to state 180

state 257

    (111) termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide . termino1
    (110) termino1 -> . TIMES puntoPushOperador factor puntoMultDivide termino1
    (111) termino1 -> . DIVIDE puntoPushOperador factor puntoMultDivide termino1
    (112) termino1 -> . empty
    (132) empty -> .

    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179
    PLUS            reduce using rule 132 (empty -> .)
    MINUS           reduce using rule 132 (empty -> .)
    GREATERTHAN     reduce using rule 132 (empty -> .)
    LESSTHAN        reduce using rule 132 (empty -> .)
    GREATERTHANEQUAL reduce using rule 132 (empty -> .)
    LESSTHANEQUAL   reduce using rule 132 (empty -> .)
    EQUALEQUAL      reduce using rule 132 (empty -> .)
    NOTEQUAL        reduce using rule 132 (empty -> .)
    AND             reduce using rule 132 (empty -> .)
    OR              reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)
    RPAREN          reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)

    termino1                       shift and go to state 263
    empty                          shift and go to state 180

state 258

    (121) funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .

    TIMES           reduce using rule 121 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    DIVIDE          reduce using rule 121 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    PLUS            reduce using rule 121 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    MINUS           reduce using rule 121 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    GREATERTHAN     reduce using rule 121 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    LESSTHAN        reduce using rule 121 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    GREATERTHANEQUAL reduce using rule 121 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    LESSTHANEQUAL   reduce using rule 121 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    EQUALEQUAL      reduce using rule 121 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 121 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    AND             reduce using rule 121 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    OR              reduce using rule 121 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    SEMICOLON       reduce using rule 121 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    RPAREN          reduce using rule 121 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    RBRACKET        reduce using rule 121 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)
    COMMA           reduce using rule 121 (funciones_arr -> PUNTO funciones_arr1 LPAREN RPAREN .)


state 259

    (86) llamada2 -> COMMA tipo . ID llamada2

    ID              shift and go to state 264


state 260

    (105) exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .

    GREATERTHAN     reduce using rule 105 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHAN        reduce using rule 105 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    GREATERTHANEQUAL reduce using rule 105 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHANEQUAL   reduce using rule 105 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    EQUALEQUAL      reduce using rule 105 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    NOTEQUAL        reduce using rule 105 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    AND             reduce using rule 105 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    OR              reduce using rule 105 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    SEMICOLON       reduce using rule 105 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    RPAREN          reduce using rule 105 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    RBRACKET        reduce using rule 105 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)
    COMMA           reduce using rule 105 (exp1 -> PLUS puntoPushOperador termino puntoSumaResta exp1 .)


state 261

    (106) exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .

    GREATERTHAN     reduce using rule 106 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHAN        reduce using rule 106 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    GREATERTHANEQUAL reduce using rule 106 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    LESSTHANEQUAL   reduce using rule 106 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    EQUALEQUAL      reduce using rule 106 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    NOTEQUAL        reduce using rule 106 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    AND             reduce using rule 106 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    OR              reduce using rule 106 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    SEMICOLON       reduce using rule 106 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    RPAREN          reduce using rule 106 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    RBRACKET        reduce using rule 106 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)
    COMMA           reduce using rule 106 (exp1 -> MINUS puntoPushOperador termino puntoSumaResta exp1 .)


state 262

    (110) termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .

    PLUS            reduce using rule 110 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    MINUS           reduce using rule 110 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHAN     reduce using rule 110 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHAN        reduce using rule 110 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHANEQUAL reduce using rule 110 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHANEQUAL   reduce using rule 110 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    EQUALEQUAL      reduce using rule 110 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    NOTEQUAL        reduce using rule 110 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    AND             reduce using rule 110 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    OR              reduce using rule 110 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    SEMICOLON       reduce using rule 110 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    RPAREN          reduce using rule 110 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    RBRACKET        reduce using rule 110 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)
    COMMA           reduce using rule 110 (termino1 -> TIMES puntoPushOperador factor puntoMultDivide termino1 .)


state 263

    (111) termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .

    PLUS            reduce using rule 111 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    MINUS           reduce using rule 111 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHAN     reduce using rule 111 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHAN        reduce using rule 111 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    GREATERTHANEQUAL reduce using rule 111 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    LESSTHANEQUAL   reduce using rule 111 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    EQUALEQUAL      reduce using rule 111 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    NOTEQUAL        reduce using rule 111 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    AND             reduce using rule 111 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    OR              reduce using rule 111 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    SEMICOLON       reduce using rule 111 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    RPAREN          reduce using rule 111 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    RBRACKET        reduce using rule 111 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)
    COMMA           reduce using rule 111 (termino1 -> DIVIDE puntoPushOperador factor puntoMultDivide termino1 .)


state 264

    (86) llamada2 -> COMMA tipo ID . llamada2
    (86) llamada2 -> . COMMA tipo ID llamada2
    (87) llamada2 -> . empty
    (132) empty -> .

    COMMA           shift and go to state 250
    RPAREN          reduce using rule 132 (empty -> .)

    llamada2                       shift and go to state 265
    empty                          shift and go to state 251

state 265

    (86) llamada2 -> COMMA tipo ID llamada2 .

    RPAREN          reduce using rule 86 (llamada2 -> COMMA tipo ID llamada2 .)

